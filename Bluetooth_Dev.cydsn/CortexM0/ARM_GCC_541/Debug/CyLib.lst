ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysTickServiceCallbacks, %function
  24              	CySysTickServiceCallbacks:
  25              	.LFB43:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 2


  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 3


  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 4


 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 5


 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 6


 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 7


 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 8


 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 9


 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 10


 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 11


 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 577:Generated_Source\PSoC4/CyLib.c **** }
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 12


 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 13


 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 14


 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 15


 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 16


 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 17


 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 18


 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 19


1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 20


1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 21


1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 22


1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 23


1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 24


1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 25


1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 26


1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 27


1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 28


1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 29


1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 30


1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 31


1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 32


1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 33


1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 34


1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 35


1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 36


1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 37


2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 38


2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 39


2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 40


2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 41


2255:Generated_Source\PSoC4/CyLib.c **** {
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
2257:Generated_Source\PSoC4/CyLib.c **** }
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 42


2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 43


2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 44


2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2440:Generated_Source\PSoC4/CyLib.c **** }
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2459:Generated_Source\PSoC4/CyLib.c **** }
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2474:Generated_Source\PSoC4/CyLib.c **** }
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 45


2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2503:Generated_Source\PSoC4/CyLib.c **** }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 46


2540:Generated_Source\PSoC4/CyLib.c **** {
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
2547:Generated_Source\PSoC4/CyLib.c **** }
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
2571:Generated_Source\PSoC4/CyLib.c **** }
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
2585:Generated_Source\PSoC4/CyLib.c **** }
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 47


2597:Generated_Source\PSoC4/CyLib.c **** {
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
2610:Generated_Source\PSoC4/CyLib.c **** }
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 48


2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2707:Generated_Source\PSoC4/CyLib.c **** }
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 49


2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2723:Generated_Source\PSoC4/CyLib.c **** }
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2739:Generated_Source\PSoC4/CyLib.c **** }
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2756:Generated_Source\PSoC4/CyLib.c **** }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 50


2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2772:Generated_Source\PSoC4/CyLib.c **** }
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2788:Generated_Source\PSoC4/CyLib.c **** }
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 51


2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2868:Generated_Source\PSoC4/CyLib.c **** }
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2881:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 52


2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 53


2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
  27              		.loc 1 2951 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LBB56:
  32              	.LBB57:
2867:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 2867 0
  34 0000 074B     		ldr	r3, .L12
  35              	.LBE57:
  36              	.LBE56:
  37              		.loc 1 2951 0
  38 0002 70B5     		push	{r4, r5, r6, lr}
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 4, -16
  41              		.cfi_offset 5, -12
  42              		.cfi_offset 6, -8
  43              		.cfi_offset 14, -4
  44              	.LBB59:
  45              	.LBB58:
2867:Generated_Source\PSoC4/CyLib.c **** }
  46              		.loc 1 2867 0
  47 0004 1B68     		ldr	r3, [r3]
  48              	.LBE58:
  49              	.LBE59:
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
  50              		.loc 1 2955 0
  51 0006 DB03     		lsls	r3, r3, #15
  52 0008 00D4     		bmi	.L11
  53              	.L1:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
  54              		.loc 1 2965 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 54


  55              		@ sp needed
  56 000a 70BD     		pop	{r4, r5, r6, pc}
  57              	.L11:
  58 000c 0024     		movs	r4, #0
  59 000e 054D     		ldr	r5, .L12+4
  60              	.L4:
  61              	.LBB60:
2959:Generated_Source\PSoC4/CyLib.c ****             {
  62              		.loc 1 2959 0
  63 0010 2B59     		ldr	r3, [r5, r4]
  64 0012 002B     		cmp	r3, #0
  65 0014 00D0     		beq	.L3
2961:Generated_Source\PSoC4/CyLib.c ****             }
  66              		.loc 1 2961 0
  67 0016 9847     		blx	r3
  68              	.LVL0:
  69              	.L3:
  70 0018 0434     		adds	r4, r4, #4
2957:Generated_Source\PSoC4/CyLib.c ****         {
  71              		.loc 1 2957 0
  72 001a 142C     		cmp	r4, #20
  73 001c F8D1     		bne	.L4
  74 001e F4E7     		b	.L1
  75              	.L13:
  76              		.align	2
  77              	.L12:
  78 0020 10E000E0 		.word	-536813552
  79 0024 00000000 		.word	.LANCHOR0
  80              	.LBE60:
  81              		.cfi_endproc
  82              	.LFE43:
  83              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
  84              		.section	.text.CySysClkImoStart,"ax",%progbits
  85              		.align	2
  86              		.global	CySysClkImoStart
  87              		.code	16
  88              		.thumb_func
  89              		.type	CySysClkImoStart, %function
  90              	CySysClkImoStart:
  91              	.LFB0:
 108:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  92              		.loc 1 108 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c **** 
  97              		.loc 1 109 0
  98 0000 8021     		movs	r1, #128
  99 0002 034A     		ldr	r2, .L15
 100 0004 0906     		lsls	r1, r1, #24
 101 0006 1368     		ldr	r3, [r2]
 124:Generated_Source\PSoC4/CyLib.c **** 
 102              		.loc 1 124 0
 103              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c **** 
 104              		.loc 1 109 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 55


 105 0008 0B43     		orrs	r3, r1
 106 000a 1360     		str	r3, [r2]
 124:Generated_Source\PSoC4/CyLib.c **** 
 107              		.loc 1 124 0
 108 000c 7047     		bx	lr
 109              	.L16:
 110 000e C046     		.align	2
 111              	.L15:
 112 0010 08010B40 		.word	1074462984
 113              		.cfi_endproc
 114              	.LFE0:
 115              		.size	CySysClkImoStart, .-CySysClkImoStart
 116              		.section	.text.CySysClkImoStop,"ax",%progbits
 117              		.align	2
 118              		.global	CySysClkImoStop
 119              		.code	16
 120              		.thumb_func
 121              		.type	CySysClkImoStop, %function
 122              	CySysClkImoStop:
 123              	.LFB1:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 124              		.loc 1 140 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 149:Generated_Source\PSoC4/CyLib.c **** }
 129              		.loc 1 149 0
 130 0000 024A     		ldr	r2, .L18
 150:Generated_Source\PSoC4/CyLib.c **** 
 131              		.loc 1 150 0
 132              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
 133              		.loc 1 149 0
 134 0002 1368     		ldr	r3, [r2]
 135 0004 5B00     		lsls	r3, r3, #1
 136 0006 5B08     		lsrs	r3, r3, #1
 137 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 138              		.loc 1 150 0
 139 000a 7047     		bx	lr
 140              	.L19:
 141              		.align	2
 142              	.L18:
 143 000c 08010B40 		.word	1074462984
 144              		.cfi_endproc
 145              	.LFE1:
 146              		.size	CySysClkImoStop, .-CySysClkImoStop
 147              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 148              		.align	2
 149              		.global	CySysClkWriteHfclkDirect
 150              		.code	16
 151              		.thumb_func
 152              		.type	CySysClkWriteHfclkDirect, %function
 153              	CySysClkWriteHfclkDirect:
 154              	.LFB2:
 430:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 56


 155              		.loc 1 430 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL1:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
 430:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 164              		.loc 1 430 0
 165 0002 0400     		movs	r4, r0
 434:Generated_Source\PSoC4/CyLib.c **** 
 166              		.loc 1 434 0
 167 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 168              	.LVL2:
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 169              		.loc 1 437 0
 170 0008 0723     		movs	r3, #7
 171 000a 0449     		ldr	r1, .L21
 454:Generated_Source\PSoC4/CyLib.c **** 
 172              		.loc 1 454 0
 173              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 174              		.loc 1 437 0
 175 000c 0A68     		ldr	r2, [r1]
 176 000e 9A43     		bics	r2, r3
 177              	.LVL3:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 178              		.loc 1 448 0
 179 0010 2340     		ands	r3, r4
 180 0012 1343     		orrs	r3, r2
 181              	.LVL4:
 451:Generated_Source\PSoC4/CyLib.c **** 
 182              		.loc 1 451 0
 183 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 184              		.loc 1 453 0
 185 0016 FFF7FEFF 		bl	CyExitCriticalSection
 186              	.LVL5:
 187              	.LVL6:
 454:Generated_Source\PSoC4/CyLib.c **** 
 188              		.loc 1 454 0
 189 001a 10BD     		pop	{r4, pc}
 190              	.L22:
 191              		.align	2
 192              	.L21:
 193 001c 00010B40 		.word	1074462976
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 197              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 198              		.align	2
 199              		.global	CySysEnablePumpClock
 200              		.code	16
 201              		.thumb_func
 202              		.type	CySysEnablePumpClock, %function
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 57


 203              	CySysEnablePumpClock:
 204              	.LFB3:
 474:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 205              		.loc 1 474 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL7:
 476:Generated_Source\PSoC4/CyLib.c ****         {
 211              		.loc 1 476 0
 212 0000 C307     		lsls	r3, r0, #31
 213 0002 0AD4     		bmi	.L26
 482:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 214              		.loc 1 482 0
 215 0004 094A     		ldr	r2, .L27
 216 0006 0A49     		ldr	r1, .L27+4
 217 0008 1368     		ldr	r3, [r2]
 218 000a 1B01     		lsls	r3, r3, #4
 219 000c 5B0F     		lsrs	r3, r3, #29
 220 000e 0B60     		str	r3, [r1]
 484:Generated_Source\PSoC4/CyLib.c ****         }
 221              		.loc 1 484 0
 222 0010 1168     		ldr	r1, [r2]
 223 0012 084B     		ldr	r3, .L27+8
 224 0014 0B40     		ands	r3, r1
 225 0016 1360     		str	r3, [r2]
 226              	.L23:
 498:Generated_Source\PSoC4/CyLib.c **** 
 227              		.loc 1 498 0
 228              		@ sp needed
 229 0018 7047     		bx	lr
 230              	.L26:
 478:Generated_Source\PSoC4/CyLib.c ****         }
 231              		.loc 1 478 0
 232 001a 054B     		ldr	r3, .L27+4
 233 001c 0349     		ldr	r1, .L27
 234 001e 1B68     		ldr	r3, [r3]
 235 0020 0A68     		ldr	r2, [r1]
 236 0022 5B06     		lsls	r3, r3, #25
 237 0024 1343     		orrs	r3, r2
 238 0026 0B60     		str	r3, [r1]
 239 0028 F6E7     		b	.L23
 240              	.L28:
 241 002a C046     		.align	2
 242              	.L27:
 243 002c 08010B40 		.word	1074462984
 244 0030 00000000 		.word	.LANCHOR1
 245 0034 FFFFFFF1 		.word	-234881025
 246              		.cfi_endproc
 247              	.LFE3:
 248              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 249              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 250              		.align	2
 251              		.global	CySysClkGetSysclkSource
 252              		.code	16
 253              		.thumb_func
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 58


 254              		.type	CySysClkGetSysclkSource, %function
 255              	CySysClkGetSysclkSource:
 256              	.LFB4:
 511:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 257              		.loc 1 511 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 10B5     		push	{r4, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 4, -8
 264              		.cfi_offset 14, -4
 515:Generated_Source\PSoC4/CyLib.c **** 
 265              		.loc 1 515 0
 266 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 267              	.LVL8:
 525:Generated_Source\PSoC4/CyLib.c ****     }
 268              		.loc 1 525 0
 269 0006 034B     		ldr	r3, .L30
 531:Generated_Source\PSoC4/CyLib.c **** 
 270              		.loc 1 531 0
 271              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 272              		.loc 1 525 0
 273 0008 1C68     		ldr	r4, [r3]
 274              	.LVL9:
 528:Generated_Source\PSoC4/CyLib.c **** 
 275              		.loc 1 528 0
 276 000a FFF7FEFF 		bl	CyExitCriticalSection
 277              	.LVL10:
 530:Generated_Source\PSoC4/CyLib.c **** }
 278              		.loc 1 530 0
 279 000e 0720     		movs	r0, #7
 280 0010 2040     		ands	r0, r4
 281              	.LVL11:
 531:Generated_Source\PSoC4/CyLib.c **** 
 282              		.loc 1 531 0
 283 0012 10BD     		pop	{r4, pc}
 284              	.L31:
 285              		.align	2
 286              	.L30:
 287 0014 00010B40 		.word	1074462976
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 291              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 292              		.align	2
 293              		.global	CySysClkWriteSysclkDiv
 294              		.code	16
 295              		.thumb_func
 296              		.type	CySysClkWriteSysclkDiv, %function
 297              	CySysClkWriteSysclkDiv:
 298              	.LFB5:
 566:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 299              		.loc 1 566 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 59


 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              	.LVL12:
 304 0000 70B5     		push	{r4, r5, r6, lr}
 305              		.cfi_def_cfa_offset 16
 306              		.cfi_offset 4, -16
 307              		.cfi_offset 5, -12
 308              		.cfi_offset 6, -8
 309              		.cfi_offset 14, -4
 566:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 310              		.loc 1 566 0
 311 0002 0400     		movs	r4, r0
 569:Generated_Source\PSoC4/CyLib.c **** 
 312              		.loc 1 569 0
 313 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 314              	.LVL13:
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 315              		.loc 1 572 0
 316 0008 E104     		lsls	r1, r4, #19
 317 000a E024     		movs	r4, #224
 318              	.LVL14:
 573:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 319              		.loc 1 573 0
 320 000c 054D     		ldr	r5, .L33
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 321              		.loc 1 572 0
 322 000e A403     		lsls	r4, r4, #14
 573:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 323              		.loc 1 573 0
 324 0010 2B68     		ldr	r3, [r5]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 325              		.loc 1 572 0
 326 0012 054A     		ldr	r2, .L33+4
 327 0014 2140     		ands	r1, r4
 328 0016 1A40     		ands	r2, r3
 329 0018 0B00     		movs	r3, r1
 330 001a 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 331              		.loc 1 571 0
 332 001c 2B60     		str	r3, [r5]
 576:Generated_Source\PSoC4/CyLib.c **** }
 333              		.loc 1 576 0
 334 001e FFF7FEFF 		bl	CyExitCriticalSection
 335              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** 
 336              		.loc 1 577 0
 337              		@ sp needed
 338 0022 70BD     		pop	{r4, r5, r6, pc}
 339              	.L34:
 340              		.align	2
 341              	.L33:
 342 0024 00010B40 		.word	1074462976
 343 0028 FFFFC7FF 		.word	-3670017
 344              		.cfi_endproc
 345              	.LFE5:
 346              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 347              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 348              		.align	2
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 60


 349              		.global	CySysClkWriteImoFreq
 350              		.code	16
 351              		.thumb_func
 352              		.type	CySysClkWriteImoFreq, %function
 353              	CySysClkWriteImoFreq:
 354              	.LFB6:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 355              		.loc 1 624 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              	.LVL16:
 360 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 361              		.cfi_def_cfa_offset 24
 362              		.cfi_offset 3, -24
 363              		.cfi_offset 4, -20
 364              		.cfi_offset 5, -16
 365              		.cfi_offset 6, -12
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 5F46     		mov	r7, fp
 369 0004 4D46     		mov	r5, r9
 370 0006 4446     		mov	r4, r8
 371 0008 5646     		mov	r6, r10
 372 000a F0B4     		push	{r4, r5, r6, r7}
 373              		.cfi_def_cfa_offset 40
 374              		.cfi_offset 8, -40
 375              		.cfi_offset 9, -36
 376              		.cfi_offset 10, -32
 377              		.cfi_offset 11, -28
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 378              		.loc 1 624 0
 379 000c 0400     		movs	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 380              		.loc 1 647 0
 381 000e FFF7FEFF 		bl	CyEnterCriticalSection
 382              	.LVL17:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 383              		.loc 1 697 0
 384 0012 E51E     		subs	r5, r4, #3
 647:Generated_Source\PSoC4/CyLib.c **** 
 385              		.loc 1 647 0
 386 0014 0700     		movs	r7, r0
 387              	.LVL18:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 388              		.loc 1 697 0
 389 0016 2D2D     		cmp	r5, #45
 390 0018 3BD8     		bhi	.L36
 699:Generated_Source\PSoC4/CyLib.c ****             {
 391              		.loc 1 699 0
 392 001a 484B     		ldr	r3, .L48
 393 001c 1B78     		ldrb	r3, [r3]
 394 001e 9C42     		cmp	r4, r3
 395 0020 41D8     		bhi	.L37
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 396              		.loc 1 701 0
 397 0022 474B     		ldr	r3, .L48+4
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 61


 398 0024 1B78     		ldrb	r3, [r3]
 399 0026 DBB2     		uxtb	r3, r3
 400 0028 9A46     		mov	r10, r3
 401              	.LVL19:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 402              		.loc 1 702 0
 403 002a 464B     		ldr	r3, .L48+8
 404 002c 1B78     		ldrb	r3, [r3]
 405 002e DBB2     		uxtb	r3, r3
 406 0030 9946     		mov	r9, r3
 407              	.LVL20:
 408              	.L38:
 726:Generated_Source\PSoC4/CyLib.c **** 
 409              		.loc 1 726 0
 410 0032 454B     		ldr	r3, .L48+12
 411 0034 9B46     		mov	fp, r3
 412 0036 5B5D     		ldrb	r3, [r3, r5]
 413 0038 9846     		mov	r8, r3
 414              	.LVL21:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 415              		.loc 1 738 0
 416 003a 2F2B     		cmp	r3, #47
 417 003c 01D9     		bls	.L42
 738:Generated_Source\PSoC4/CyLib.c ****             {
 418              		.loc 1 738 0 is_stmt 0 discriminator 1
 419 003e 2A2C     		cmp	r4, #42
 420 0040 4BD8     		bhi	.L46
 421              	.L42:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 422              		.loc 1 750 0 is_stmt 1
 423 0042 3F26     		movs	r6, #63
 424 0044 414B     		ldr	r3, .L48+16
 425              	.LVL22:
 426 0046 1A68     		ldr	r2, [r3]
 427 0048 1640     		ands	r6, r2
 428              	.LVL23:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 429              		.loc 1 762 0
 430 004a B045     		cmp	r8, r6
 431 004c 04D2     		bcs	.L44
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 432              		.loc 1 765 0
 433 004e 4246     		mov	r2, r8
 766:Generated_Source\PSoC4/CyLib.c ****             }
 434              		.loc 1 766 0
 435 0050 0520     		movs	r0, #5
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 436              		.loc 1 765 0
 437 0052 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****             }
 438              		.loc 1 766 0
 439 0054 FFF7FEFF 		bl	CyDelayCycles
 440              	.LVL24:
 441              	.L44:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 442              		.loc 1 785 0
 443 0058 3D4B     		ldr	r3, .L48+20
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 62


 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 444              		.loc 1 789 0
 445 005a 3E4A     		ldr	r2, .L48+24
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 446              		.loc 1 785 0
 447 005c 9C46     		mov	ip, r3
 448 005e 6444     		add	r4, r4, ip
 449              	.LVL25:
 450 0060 2378     		ldrb	r3, [r4]
 451 0062 DBB2     		uxtb	r3, r3
 452              	.LVL26:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 453              		.loc 1 789 0
 454 0064 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 455              		.loc 1 790 0
 456 0066 5246     		mov	r2, r10
 457 0068 3B4B     		ldr	r3, .L48+28
 458              	.LVL27:
 459 006a 1A60     		str	r2, [r3]
 460              	.LVL28:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 461              		.loc 1 791 0
 462 006c 4A46     		mov	r2, r9
 463 006e 3B4B     		ldr	r3, .L48+32
 464 0070 1A60     		str	r2, [r3]
 465              	.LVL29:
 466              	.LBB61:
 467              	.LBB62:
2584:Generated_Source\PSoC4/CyLib.c **** }
 468              		.loc 1 2584 0
 469 0072 3B4B     		ldr	r3, .L48+36
 470 0074 1879     		ldrb	r0, [r3, #4]
 471 0076 8300     		lsls	r3, r0, #2
 472 0078 1818     		adds	r0, r3, r0
 473 007a FFF7FEFF 		bl	CyDelayCycles
 474              	.LVL30:
 475              	.LBE62:
 476              	.LBE61:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 477              		.loc 1 794 0
 478 007e B045     		cmp	r8, r6
 479 0080 08D9     		bls	.L45
 480              	.LVL31:
 481              	.L43:
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 482              		.loc 1 797 0
 483 0082 5B46     		mov	r3, fp
 484 0084 5A5D     		ldrb	r2, [r3, r5]
 485 0086 314B     		ldr	r3, .L48+16
 798:Generated_Source\PSoC4/CyLib.c ****             }
 486              		.loc 1 798 0
 487 0088 0520     		movs	r0, #5
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 488              		.loc 1 797 0
 489 008a 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 63


 490              		.loc 1 798 0
 491 008c FFF7FEFF 		bl	CyDelayCycles
 492              	.LVL32:
 493 0090 00E0     		b	.L45
 494              	.LVL33:
 495              	.L36:
 496              	.LBB64:
 497              	.LBB65:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 498              		.loc 1 2525 0
 499              		.syntax divided
 500              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 501 0092 01BE     		    bkpt    1
 502              	@ 0 "" 2
 503              	.LVL34:
 504              		.thumb
 505              		.syntax unified
 506              	.L45:
 507              	.LBE65:
 508              	.LBE64:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 509              		.loc 1 823 0
 510 0094 3800     		movs	r0, r7
 511 0096 FFF7FEFF 		bl	CyExitCriticalSection
 512              	.LVL35:
 824:Generated_Source\PSoC4/CyLib.c **** 
 513              		.loc 1 824 0
 514              		@ sp needed
 515              	.LVL36:
 516              	.LVL37:
 517 009a 3CBC     		pop	{r2, r3, r4, r5}
 518 009c 9046     		mov	r8, r2
 519 009e 9946     		mov	r9, r3
 520 00a0 A246     		mov	r10, r4
 521 00a2 AB46     		mov	fp, r5
 522 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 523              	.LVL38:
 524              	.L37:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 525              		.loc 1 704 0
 526 00a6 2F4B     		ldr	r3, .L48+40
 527 00a8 1B78     		ldrb	r3, [r3]
 528 00aa 9C42     		cmp	r4, r3
 529 00ac 0CD9     		bls	.L47
 709:Generated_Source\PSoC4/CyLib.c ****             {
 530              		.loc 1 709 0
 531 00ae 2E4B     		ldr	r3, .L48+44
 532 00b0 1B78     		ldrb	r3, [r3]
 533 00b2 9C42     		cmp	r4, r3
 534 00b4 2BD8     		bhi	.L40
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 535              		.loc 1 711 0
 536 00b6 2D4B     		ldr	r3, .L48+48
 537 00b8 1B78     		ldrb	r3, [r3]
 538 00ba DBB2     		uxtb	r3, r3
 539 00bc 9A46     		mov	r10, r3
 540              	.LVL39:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 64


 712:Generated_Source\PSoC4/CyLib.c ****             }
 541              		.loc 1 712 0
 542 00be 2C4B     		ldr	r3, .L48+52
 543 00c0 1B78     		ldrb	r3, [r3]
 544 00c2 DBB2     		uxtb	r3, r3
 545 00c4 9946     		mov	r9, r3
 546              	.LVL40:
 547 00c6 B4E7     		b	.L38
 548              	.LVL41:
 549              	.L47:
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 550              		.loc 1 706 0
 551 00c8 2A4B     		ldr	r3, .L48+56
 552 00ca 1B78     		ldrb	r3, [r3]
 553 00cc DBB2     		uxtb	r3, r3
 554 00ce 9A46     		mov	r10, r3
 555              	.LVL42:
 707:Generated_Source\PSoC4/CyLib.c ****             }
 556              		.loc 1 707 0
 557 00d0 294B     		ldr	r3, .L48+60
 558 00d2 1B78     		ldrb	r3, [r3]
 559 00d4 DBB2     		uxtb	r3, r3
 560 00d6 9946     		mov	r9, r3
 561              	.LVL43:
 562 00d8 ABE7     		b	.L38
 563              	.LVL44:
 564              	.L46:
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 565              		.loc 1 741 0
 566 00da 1922     		movs	r2, #25
 567 00dc 1B4B     		ldr	r3, .L48+16
 568              	.LVL45:
 744:Generated_Source\PSoC4/CyLib.c **** 
 569              		.loc 1 744 0
 570 00de 0520     		movs	r0, #5
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 571              		.loc 1 741 0
 572 00e0 1A60     		str	r2, [r3]
 744:Generated_Source\PSoC4/CyLib.c **** 
 573              		.loc 1 744 0
 574 00e2 FFF7FEFF 		bl	CyDelayCycles
 575              	.LVL46:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 576              		.loc 1 785 0
 577 00e6 1A4B     		ldr	r3, .L48+20
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 578              		.loc 1 789 0
 579 00e8 1A4A     		ldr	r2, .L48+24
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 580              		.loc 1 785 0
 581 00ea 9C46     		mov	ip, r3
 582 00ec 6444     		add	r4, r4, ip
 583              	.LVL47:
 584 00ee 2378     		ldrb	r3, [r4]
 585 00f0 DBB2     		uxtb	r3, r3
 586              	.LVL48:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 65


 587              		.loc 1 789 0
 588 00f2 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 589              		.loc 1 790 0
 590 00f4 5246     		mov	r2, r10
 591 00f6 184B     		ldr	r3, .L48+28
 592              	.LVL49:
 593 00f8 1A60     		str	r2, [r3]
 594              	.LVL50:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 595              		.loc 1 791 0
 596 00fa 4A46     		mov	r2, r9
 597 00fc 174B     		ldr	r3, .L48+32
 598 00fe 1A60     		str	r2, [r3]
 599              	.LVL51:
 600              	.LBB66:
 601              	.LBB63:
2584:Generated_Source\PSoC4/CyLib.c **** }
 602              		.loc 1 2584 0
 603 0100 174B     		ldr	r3, .L48+36
 604 0102 1879     		ldrb	r0, [r3, #4]
 605 0104 8300     		lsls	r3, r0, #2
 606 0106 1818     		adds	r0, r3, r0
 607 0108 FFF7FEFF 		bl	CyDelayCycles
 608              	.LVL52:
 609 010c B9E7     		b	.L43
 610              	.LVL53:
 611              	.L40:
 612              	.LBE63:
 613              	.LBE66:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 614              		.loc 1 714 0
 615 010e 1B4B     		ldr	r3, .L48+64
 616 0110 1B78     		ldrb	r3, [r3]
 617 0112 9C42     		cmp	r4, r3
 618 0114 08D8     		bhi	.L41
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 619              		.loc 1 716 0
 620 0116 1A4B     		ldr	r3, .L48+68
 621 0118 1B78     		ldrb	r3, [r3]
 622 011a DBB2     		uxtb	r3, r3
 623 011c 9A46     		mov	r10, r3
 624              	.LVL54:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 625              		.loc 1 717 0
 626 011e 194B     		ldr	r3, .L48+72
 627 0120 1B78     		ldrb	r3, [r3]
 628 0122 DBB2     		uxtb	r3, r3
 629 0124 9946     		mov	r9, r3
 630              	.LVL55:
 631 0126 84E7     		b	.L38
 632              	.LVL56:
 633              	.L41:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 634              		.loc 1 721 0
 635 0128 174B     		ldr	r3, .L48+76
 636 012a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 66


 637 012c DBB2     		uxtb	r3, r3
 638 012e 9A46     		mov	r10, r3
 639              	.LVL57:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 640              		.loc 1 722 0
 641 0130 074B     		ldr	r3, .L48+20
 642 0132 1B78     		ldrb	r3, [r3]
 643 0134 DBB2     		uxtb	r3, r3
 644 0136 9946     		mov	r9, r3
 645              	.LVL58:
 646 0138 7BE7     		b	.L38
 647              	.L49:
 648 013a C046     		.align	2
 649              	.L48:
 650 013c C0F1FF0F 		.word	268431808
 651 0140 C1F1FF0F 		.word	268431809
 652 0144 C2F1FF0F 		.word	268431810
 653 0148 00000000 		.word	.LANCHOR2
 654 014c 2CFF0B40 		.word	1074528044
 655 0150 CDF1FF0F 		.word	268431821
 656 0154 28FF0B40 		.word	1074528040
 657 0158 1CFF0B40 		.word	1074528028
 658 015c 20FF0B40 		.word	1074528032
 659 0160 00000000 		.word	.LANCHOR1
 660 0164 C3F1FF0F 		.word	268431811
 661 0168 C6F1FF0F 		.word	268431814
 662 016c C7F1FF0F 		.word	268431815
 663 0170 C8F1FF0F 		.word	268431816
 664 0174 C4F1FF0F 		.word	268431812
 665 0178 C5F1FF0F 		.word	268431813
 666 017c C9F1FF0F 		.word	268431817
 667 0180 CAF1FF0F 		.word	268431818
 668 0184 CBF1FF0F 		.word	268431819
 669 0188 CCF1FF0F 		.word	268431820
 670              		.cfi_endproc
 671              	.LFE6:
 672              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 673              		.section	.text.CySysLvdEnable,"ax",%progbits
 674              		.align	2
 675              		.global	CySysLvdEnable
 676              		.code	16
 677              		.thumb_func
 678              		.type	CySysLvdEnable, %function
 679              	CySysLvdEnable:
 680              	.LFB7:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 681              		.loc 1 2119 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL59:
 686 0000 70B5     		push	{r4, r5, r6, lr}
 687              		.cfi_def_cfa_offset 16
 688              		.cfi_offset 4, -16
 689              		.cfi_offset 5, -12
 690              		.cfi_offset 6, -8
 691              		.cfi_offset 14, -4
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 67


2121:Generated_Source\PSoC4/CyLib.c **** 
 692              		.loc 1 2121 0
 693 0002 0224     		movs	r4, #2
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 694              		.loc 1 2124 0
 695 0004 1E21     		movs	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 696              		.loc 1 2121 0
 697 0006 0E4D     		ldr	r5, .L51
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 698              		.loc 1 2124 0
 699 0008 0E4A     		ldr	r2, .L51+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 700              		.loc 1 2121 0
 701 000a 2B68     		ldr	r3, [r5]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 702              		.loc 1 2124 0
 703 000c 4000     		lsls	r0, r0, #1
 704              	.LVL60:
2121:Generated_Source\PSoC4/CyLib.c **** 
 705              		.loc 1 2121 0
 706 000e A343     		bics	r3, r4
 707 0010 2B60     		str	r3, [r5]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 708              		.loc 1 2124 0
 709 0012 1368     		ldr	r3, [r2]
 710 0014 0840     		ands	r0, r1
 711 0016 8B43     		bics	r3, r1
 712 0018 1843     		orrs	r0, r3
2128:Generated_Source\PSoC4/CyLib.c **** 
 713              		.loc 1 2128 0
 714 001a 0123     		movs	r3, #1
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 715              		.loc 1 2124 0
 716 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 717              		.loc 1 2128 0
 718 001e 1168     		ldr	r1, [r2]
2138:Generated_Source\PSoC4/CyLib.c **** 
 719              		.loc 1 2138 0
 720              		@ sp needed
2128:Generated_Source\PSoC4/CyLib.c **** 
 721              		.loc 1 2128 0
 722 0020 0B43     		orrs	r3, r1
 723 0022 1360     		str	r3, [r2]
 724              	.LVL61:
 725              	.LBB67:
 726              	.LBB68:
2584:Generated_Source\PSoC4/CyLib.c **** }
 727              		.loc 1 2584 0
 728 0024 084B     		ldr	r3, .L51+8
 729 0026 1879     		ldrb	r0, [r3, #4]
 730 0028 FA23     		movs	r3, #250
 731 002a 9B00     		lsls	r3, r3, #2
 732 002c 5843     		muls	r0, r3
 733 002e FFF7FEFF 		bl	CyDelayCycles
 734              	.LVL62:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 68


 735              	.LBE68:
 736              	.LBE67:
 737              	.LBB69:
 738              	.LBB70:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 739              		.loc 1 2184 0
 740 0032 064B     		ldr	r3, .L51+12
 741 0034 1C60     		str	r4, [r3]
 742              	.LBE70:
 743              	.LBE69:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 744              		.loc 1 2137 0
 745 0036 2B68     		ldr	r3, [r5]
 746 0038 1C43     		orrs	r4, r3
 747 003a 2C60     		str	r4, [r5]
2138:Generated_Source\PSoC4/CyLib.c **** 
 748              		.loc 1 2138 0
 749 003c 70BD     		pop	{r4, r5, r6, pc}
 750              	.L52:
 751 003e C046     		.align	2
 752              	.L51:
 753 0040 08000B40 		.word	1074462728
 754 0044 18000B40 		.word	1074462744
 755 0048 00000000 		.word	.LANCHOR1
 756 004c 04000B40 		.word	1074462724
 757              		.cfi_endproc
 758              	.LFE7:
 759              		.size	CySysLvdEnable, .-CySysLvdEnable
 760              		.section	.text.CySysLvdDisable,"ax",%progbits
 761              		.align	2
 762              		.global	CySysLvdDisable
 763              		.code	16
 764              		.thumb_func
 765              		.type	CySysLvdDisable, %function
 766              	CySysLvdDisable:
 767              	.LFB8:
2149:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 768              		.loc 1 2149 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 773              		.loc 1 2150 0
 774 0000 0221     		movs	r1, #2
 775 0002 054A     		ldr	r2, .L54
2152:Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2152 0
 777              		@ sp needed
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 778              		.loc 1 2150 0
 779 0004 1368     		ldr	r3, [r2]
 780 0006 8B43     		bics	r3, r1
 781 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****     }
 782              		.loc 1 2151 0
 783 000a 044A     		ldr	r2, .L54+4
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 69


 784 000c 0139     		subs	r1, r1, #1
 785 000e 1368     		ldr	r3, [r2]
 786 0010 8B43     		bics	r3, r1
 787 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c **** 
 788              		.loc 1 2152 0
 789 0014 7047     		bx	lr
 790              	.L55:
 791 0016 C046     		.align	2
 792              	.L54:
 793 0018 08000B40 		.word	1074462728
 794 001c 18000B40 		.word	1074462744
 795              		.cfi_endproc
 796              	.LFE8:
 797              		.size	CySysLvdDisable, .-CySysLvdDisable
 798              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 799              		.align	2
 800              		.global	CySysLvdGetInterruptSource
 801              		.code	16
 802              		.thumb_func
 803              		.type	CySysLvdGetInterruptSource, %function
 804              	CySysLvdGetInterruptSource:
 805              	.LFB9:
2167:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 806              		.loc 1 2167 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****     }
 811              		.loc 1 2168 0
 812 0000 0220     		movs	r0, #2
 813 0002 024B     		ldr	r3, .L57
2169:Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2169 0
 815              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****     }
 816              		.loc 1 2168 0
 817 0004 1B68     		ldr	r3, [r3]
 818 0006 1840     		ands	r0, r3
2169:Generated_Source\PSoC4/CyLib.c **** 
 819              		.loc 1 2169 0
 820 0008 7047     		bx	lr
 821              	.L58:
 822 000a C046     		.align	2
 823              	.L57:
 824 000c 04000B40 		.word	1074462724
 825              		.cfi_endproc
 826              	.LFE9:
 827              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 828              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 829              		.align	2
 830              		.global	CySysLvdClearInterrupt
 831              		.code	16
 832              		.thumb_func
 833              		.type	CySysLvdClearInterrupt, %function
 834              	CySysLvdClearInterrupt:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 70


 835              	.LFB10:
2183:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 836              		.loc 1 2183 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****     }
 841              		.loc 1 2184 0
 842 0000 0222     		movs	r2, #2
 843 0002 014B     		ldr	r3, .L60
2185:Generated_Source\PSoC4/CyLib.c **** 
 844              		.loc 1 2185 0
 845              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****     }
 846              		.loc 1 2184 0
 847 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c **** 
 848              		.loc 1 2185 0
 849 0006 7047     		bx	lr
 850              	.L61:
 851              		.align	2
 852              	.L60:
 853 0008 04000B40 		.word	1074462724
 854              		.cfi_endproc
 855              	.LFE10:
 856              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 857              		.section	.text.CySysGetResetReason,"ax",%progbits
 858              		.align	2
 859              		.global	CySysGetResetReason
 860              		.code	16
 861              		.thumb_func
 862              		.type	CySysGetResetReason, %function
 863              	CySysGetResetReason:
 864              	.LFB11:
2209:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 865              		.loc 1 2209 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL63:
2209:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 871              		.loc 1 2209 0
 872 0000 0200     		movs	r2, r0
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 873              		.loc 1 2212 0
 874 0002 1920     		movs	r0, #25
 875              	.LVL64:
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 876              		.loc 1 2213 0
 877 0004 0249     		ldr	r1, .L63
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 878              		.loc 1 2212 0
 879 0006 0240     		ands	r2, r0
 880              	.LVL65:
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 71


 881              		.loc 1 2213 0
 882 0008 0B68     		ldr	r3, [r1]
 883              	.LVL66:
2218:Generated_Source\PSoC4/CyLib.c **** 
 884              		.loc 1 2218 0
 885              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 886              		.loc 1 2217 0
 887 000a 1840     		ands	r0, r3
 888              	.LVL67:
2215:Generated_Source\PSoC4/CyLib.c **** 
 889              		.loc 1 2215 0
 890 000c 0A60     		str	r2, [r1]
2218:Generated_Source\PSoC4/CyLib.c **** 
 891              		.loc 1 2218 0
 892 000e 7047     		bx	lr
 893              	.L64:
 894              		.align	2
 895              	.L63:
 896 0010 00030B40 		.word	1074463488
 897              		.cfi_endproc
 898              	.LFE11:
 899              		.size	CySysGetResetReason, .-CySysGetResetReason
 900              		.section	.text.CyDisableInts,"ax",%progbits
 901              		.align	2
 902              		.global	CyDisableInts
 903              		.code	16
 904              		.thumb_func
 905              		.type	CyDisableInts, %function
 906              	CyDisableInts:
 907              	.LFB12:
2232:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 908              		.loc 1 2232 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
2239:Generated_Source\PSoC4/CyLib.c **** 
 913              		.loc 1 2239 0
 914 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 915              		.loc 1 2236 0
 916 0002 024B     		ldr	r3, .L66
2239:Generated_Source\PSoC4/CyLib.c **** 
 917              		.loc 1 2239 0
 918 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 919              		.loc 1 2236 0
 920 0006 1868     		ldr	r0, [r3]
 921              	.LVL68:
2242:Generated_Source\PSoC4/CyLib.c **** 
 922              		.loc 1 2242 0
 923              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 924              		.loc 1 2239 0
 925 0008 1A60     		str	r2, [r3]
2242:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 72


 926              		.loc 1 2242 0
 927 000a 7047     		bx	lr
 928              	.L67:
 929              		.align	2
 930              	.L66:
 931 000c 80E100E0 		.word	-536813184
 932              		.cfi_endproc
 933              	.LFE12:
 934              		.size	CyDisableInts, .-CyDisableInts
 935              		.section	.text.CyEnableInts,"ax",%progbits
 936              		.align	2
 937              		.global	CyEnableInts
 938              		.code	16
 939              		.thumb_func
 940              		.type	CyEnableInts, %function
 941              	CyEnableInts:
 942              	.LFB13:
2255:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 943              		.loc 1 2255 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948              	.LVL69:
2256:Generated_Source\PSoC4/CyLib.c **** }
 949              		.loc 1 2256 0
 950 0000 014B     		ldr	r3, .L69
2257:Generated_Source\PSoC4/CyLib.c **** 
 951              		.loc 1 2257 0
 952              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c **** }
 953              		.loc 1 2256 0
 954 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** 
 955              		.loc 1 2257 0
 956 0004 7047     		bx	lr
 957              	.L70:
 958 0006 C046     		.align	2
 959              	.L69:
 960 0008 00E100E0 		.word	-536813312
 961              		.cfi_endproc
 962              	.LFE13:
 963              		.size	CyEnableInts, .-CyEnableInts
 964              		.section	.text.CyIntSetSysVector,"ax",%progbits
 965              		.align	2
 966              		.global	CyIntSetSysVector
 967              		.code	16
 968              		.thumb_func
 969              		.type	CyIntSetSysVector, %function
 970              	CyIntSetSysVector:
 971              	.LFB14:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 972              		.loc 1 2280 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 73


 977              	.LVL70:
2284:Generated_Source\PSoC4/CyLib.c **** 
 978              		.loc 1 2284 0
 979 0000 0F28     		cmp	r0, #15
 980 0002 00D9     		bls	.L72
 981              	.LVL71:
 982              	.LBB71:
 983              	.LBB72:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 984              		.loc 1 2525 0
 985              		.syntax divided
 986              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 987 0004 01BE     		    bkpt    1
 988              	@ 0 "" 2
 989              	.LVL72:
 990              		.thumb
 991              		.syntax unified
 992              	.L72:
 993              	.LBE72:
 994              	.LBE71:
2287:Generated_Source\PSoC4/CyLib.c **** 
 995              		.loc 1 2287 0
 996 0006 8023     		movs	r3, #128
 997 0008 8000     		lsls	r0, r0, #2
 998              	.LVL73:
 999 000a 9B05     		lsls	r3, r3, #22
 1000 000c C318     		adds	r3, r0, r3
 1001 000e 1868     		ldr	r0, [r3]
 1002              	.LVL74:
2293:Generated_Source\PSoC4/CyLib.c **** 
 1003              		.loc 1 2293 0
 1004              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 1005              		.loc 1 2290 0
 1006 0010 1960     		str	r1, [r3]
2293:Generated_Source\PSoC4/CyLib.c **** 
 1007              		.loc 1 2293 0
 1008 0012 7047     		bx	lr
 1009              		.cfi_endproc
 1010              	.LFE14:
 1011              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1012              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1013              		.align	2
 1014              		.global	CyIntGetSysVector
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	CyIntGetSysVector, %function
 1018              	CyIntGetSysVector:
 1019              	.LFB15:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1020              		.loc 1 2314 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
 1025              	.LVL75:
2317:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 74


 1026              		.loc 1 2317 0
 1027 0000 0F28     		cmp	r0, #15
 1028 0002 00D9     		bls	.L74
 1029              	.LVL76:
 1030              	.LBB73:
 1031              	.LBB74:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1032              		.loc 1 2525 0
 1033              		.syntax divided
 1034              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1035 0004 01BE     		    bkpt    1
 1036              	@ 0 "" 2
 1037              	.LVL77:
 1038              		.thumb
 1039              		.syntax unified
 1040              	.L74:
 1041              	.LBE74:
 1042              	.LBE73:
2319:Generated_Source\PSoC4/CyLib.c **** }
 1043              		.loc 1 2319 0
 1044 0006 8023     		movs	r3, #128
 1045 0008 9B05     		lsls	r3, r3, #22
 1046 000a 9C46     		mov	ip, r3
 1047 000c 8000     		lsls	r0, r0, #2
 1048              	.LVL78:
 1049 000e 6044     		add	r0, r0, ip
 1050 0010 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** 
 1051              		.loc 1 2320 0
 1052              		@ sp needed
 1053 0012 7047     		bx	lr
 1054              		.cfi_endproc
 1055              	.LFE15:
 1056              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1057              		.section	.text.CyIntSetVector,"ax",%progbits
 1058              		.align	2
 1059              		.global	CyIntSetVector
 1060              		.code	16
 1061              		.thumb_func
 1062              		.type	CyIntSetVector, %function
 1063              	CyIntSetVector:
 1064              	.LFB16:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 1065              		.loc 1 2336 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069              		@ link register save eliminated.
 1070              	.LVL79:
2340:Generated_Source\PSoC4/CyLib.c **** 
 1071              		.loc 1 2340 0
 1072 0000 1F28     		cmp	r0, #31
 1073 0002 00D9     		bls	.L76
 1074              	.LVL80:
 1075              	.LBB75:
 1076              	.LBB76:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 75


 1077              		.loc 1 2525 0
 1078              		.syntax divided
 1079              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1080 0004 01BE     		    bkpt    1
 1081              	@ 0 "" 2
 1082              	.LVL81:
 1083              		.thumb
 1084              		.syntax unified
 1085              	.L76:
 1086              	.LBE76:
 1087              	.LBE75:
2343:Generated_Source\PSoC4/CyLib.c **** 
 1088              		.loc 1 2343 0
 1089 0006 034B     		ldr	r3, .L77
 1090 0008 8000     		lsls	r0, r0, #2
 1091              	.LVL82:
 1092 000a C318     		adds	r3, r0, r3
 1093 000c 1868     		ldr	r0, [r3]
 1094              	.LVL83:
2349:Generated_Source\PSoC4/CyLib.c **** 
 1095              		.loc 1 2349 0
 1096              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 1097              		.loc 1 2346 0
 1098 000e 1960     		str	r1, [r3]
2349:Generated_Source\PSoC4/CyLib.c **** 
 1099              		.loc 1 2349 0
 1100 0010 7047     		bx	lr
 1101              	.L78:
 1102 0012 C046     		.align	2
 1103              	.L77:
 1104 0014 40000020 		.word	536870976
 1105              		.cfi_endproc
 1106              	.LFE16:
 1107              		.size	CyIntSetVector, .-CyIntSetVector
 1108              		.section	.text.CyIntGetVector,"ax",%progbits
 1109              		.align	2
 1110              		.global	CyIntGetVector
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	CyIntGetVector, %function
 1114              	CyIntGetVector:
 1115              	.LFB17:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1116              		.loc 1 2364 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 1121              	.LVL84:
2367:Generated_Source\PSoC4/CyLib.c **** 
 1122              		.loc 1 2367 0
 1123 0000 1F28     		cmp	r0, #31
 1124 0002 00D9     		bls	.L80
 1125              	.LVL85:
 1126              	.LBB77:
 1127              	.LBB78:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 76


2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1128              		.loc 1 2525 0
 1129              		.syntax divided
 1130              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1131 0004 01BE     		    bkpt    1
 1132              	@ 0 "" 2
 1133              	.LVL86:
 1134              		.thumb
 1135              		.syntax unified
 1136              	.L80:
 1137              	.LBE78:
 1138              	.LBE77:
2369:Generated_Source\PSoC4/CyLib.c **** }
 1139              		.loc 1 2369 0
 1140 0006 034B     		ldr	r3, .L81
 1141 0008 8000     		lsls	r0, r0, #2
 1142              	.LVL87:
 1143 000a 9C46     		mov	ip, r3
 1144 000c 6044     		add	r0, r0, ip
 1145 000e 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** 
 1146              		.loc 1 2370 0
 1147              		@ sp needed
 1148 0010 7047     		bx	lr
 1149              	.L82:
 1150 0012 C046     		.align	2
 1151              	.L81:
 1152 0014 40000020 		.word	536870976
 1153              		.cfi_endproc
 1154              	.LFE17:
 1155              		.size	CyIntGetVector, .-CyIntGetVector
 1156              		.section	.text.CyIntSetPriority,"ax",%progbits
 1157              		.align	2
 1158              		.global	CyIntSetPriority
 1159              		.code	16
 1160              		.thumb_func
 1161              		.type	CyIntSetPriority, %function
 1162              	CyIntSetPriority:
 1163              	.LFB18:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1164              		.loc 1 2383 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              	.LVL88:
 1169 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1170              		.cfi_def_cfa_offset 24
 1171              		.cfi_offset 3, -24
 1172              		.cfi_offset 4, -20
 1173              		.cfi_offset 5, -16
 1174              		.cfi_offset 6, -12
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1177              		.loc 1 2383 0
 1178 0002 0400     		movs	r4, r0
 1179 0004 0E00     		movs	r6, r1
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 77


2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1180              		.loc 1 2388 0
 1181 0006 0329     		cmp	r1, #3
 1182 0008 00D9     		bls	.L84
 1183              	.LVL89:
 1184              	.LBB79:
 1185              	.LBB80:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1186              		.loc 1 2525 0
 1187              		.syntax divided
 1188              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1189 000a 01BE     		    bkpt    1
 1190              	@ 0 "" 2
 1191              	.LVL90:
 1192              		.thumb
 1193              		.syntax unified
 1194              	.L84:
 1195              	.LBE80:
 1196              	.LBE79:
2389:Generated_Source\PSoC4/CyLib.c **** 
 1197              		.loc 1 2389 0
 1198 000c 1F2C     		cmp	r4, #31
 1199 000e 00D9     		bls	.L85
 1200              	.LVL91:
 1201              	.LBB81:
 1202              	.LBB82:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1203              		.loc 1 2525 0
 1204              		.syntax divided
 1205              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1206 0010 01BE     		    bkpt    1
 1207              	@ 0 "" 2
 1208              	.LVL92:
 1209              		.thumb
 1210              		.syntax unified
 1211              	.L85:
 1212              	.LBE82:
 1213              	.LBE81:
2391:Generated_Source\PSoC4/CyLib.c **** 
 1214              		.loc 1 2391 0
 1215 0012 0327     		movs	r7, #3
2393:Generated_Source\PSoC4/CyLib.c **** 
 1216              		.loc 1 2393 0
 1217 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1218              	.LVL93:
2391:Generated_Source\PSoC4/CyLib.c **** 
 1219              		.loc 1 2391 0
 1220 0018 3D00     		movs	r5, r7
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1221              		.loc 1 2395 0
 1222 001a 094B     		ldr	r3, .L86
2391:Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 2391 0
 1224 001c 2540     		ands	r5, r4
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1225              		.loc 1 2395 0
 1226 001e 9C46     		mov	ip, r3
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 78


 1227 0020 A408     		lsrs	r4, r4, #2
 1228 0022 A400     		lsls	r4, r4, #2
 1229 0024 6444     		add	r4, r4, ip
 1230 0026 2168     		ldr	r1, [r4]
2391:Generated_Source\PSoC4/CyLib.c **** 
 1231              		.loc 1 2391 0
 1232 0028 ED00     		lsls	r5, r5, #3
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1233              		.loc 1 2396 0
 1234 002a 0B00     		movs	r3, r1
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1235              		.loc 1 2397 0
 1236 002c 3100     		movs	r1, r6
2391:Generated_Source\PSoC4/CyLib.c **** 
 1237              		.loc 1 2391 0
 1238 002e 0635     		adds	r5, r5, #6
 1239              	.LVL94:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1240              		.loc 1 2396 0
 1241 0030 AF40     		lsls	r7, r7, r5
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1242              		.loc 1 2397 0
 1243 0032 A940     		lsls	r1, r1, r5
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1244              		.loc 1 2396 0
 1245 0034 BB43     		bics	r3, r7
 1246              	.LVL95:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1247              		.loc 1 2397 0
 1248 0036 1943     		orrs	r1, r3
 1249              	.LVL96:
2398:Generated_Source\PSoC4/CyLib.c **** 
 1250              		.loc 1 2398 0
 1251 0038 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 1252              		.loc 1 2400 0
 1253 003a FFF7FEFF 		bl	CyExitCriticalSection
 1254              	.LVL97:
2401:Generated_Source\PSoC4/CyLib.c **** 
 1255              		.loc 1 2401 0
 1256              		@ sp needed
 1257              	.LVL98:
 1258 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1259              	.L87:
 1260              		.align	2
 1261              	.L86:
 1262 0040 00E400E0 		.word	-536812544
 1263              		.cfi_endproc
 1264              	.LFE18:
 1265              		.size	CyIntSetPriority, .-CyIntSetPriority
 1266              		.section	.text.CyIntGetPriority,"ax",%progbits
 1267              		.align	2
 1268              		.global	CyIntGetPriority
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	CyIntGetPriority, %function
 1272              	CyIntGetPriority:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 79


 1273              	.LFB19:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1274              		.loc 1 2417 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              		@ link register save eliminated.
 1279              	.LVL99:
2420:Generated_Source\PSoC4/CyLib.c **** 
 1280              		.loc 1 2420 0
 1281 0000 1F28     		cmp	r0, #31
 1282 0002 00D9     		bls	.L89
 1283              	.LVL100:
 1284              	.LBB83:
 1285              	.LBB84:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1286              		.loc 1 2525 0
 1287              		.syntax divided
 1288              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1289 0004 01BE     		    bkpt    1
 1290              	@ 0 "" 2
 1291              	.LVL101:
 1292              		.thumb
 1293              		.syntax unified
 1294              	.L89:
 1295              	.LBE84:
 1296              	.LBE83:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 2422 0
 1298 0006 074A     		ldr	r2, .L90
 1299 0008 8308     		lsrs	r3, r0, #2
 1300 000a 9446     		mov	ip, r2
 1301 000c 9B00     		lsls	r3, r3, #2
 1302 000e 6344     		add	r3, r3, ip
 1303 0010 1A68     		ldr	r2, [r3]
 1304              	.LVL102:
2424:Generated_Source\PSoC4/CyLib.c **** }
 1305              		.loc 1 2424 0
 1306 0012 0321     		movs	r1, #3
 1307 0014 0300     		movs	r3, r0
 1308 0016 0B40     		ands	r3, r1
 1309 0018 DB00     		lsls	r3, r3, #3
 1310 001a 0633     		adds	r3, r3, #6
 1311 001c DA40     		lsrs	r2, r2, r3
 1312              	.LVL103:
 1313 001e 1000     		movs	r0, r2
 1314              	.LVL104:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1315              		.loc 1 2425 0
 1316              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 1317              		.loc 1 2424 0
 1318 0020 0840     		ands	r0, r1
2425:Generated_Source\PSoC4/CyLib.c **** 
 1319              		.loc 1 2425 0
 1320 0022 7047     		bx	lr
 1321              	.L91:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 80


 1322              		.align	2
 1323              	.L90:
 1324 0024 00E400E0 		.word	-536812544
 1325              		.cfi_endproc
 1326              	.LFE19:
 1327              		.size	CyIntGetPriority, .-CyIntGetPriority
 1328              		.section	.text.CyIntEnable,"ax",%progbits
 1329              		.align	2
 1330              		.global	CyIntEnable
 1331              		.code	16
 1332              		.thumb_func
 1333              		.type	CyIntEnable, %function
 1334              	CyIntEnable:
 1335              	.LFB20:
2438:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1336              		.loc 1 2438 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 1341              	.LVL105:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1342              		.loc 1 2439 0
 1343 0000 1F23     		movs	r3, #31
 1344 0002 1840     		ands	r0, r3
 1345              	.LVL106:
 1346 0004 1E3B     		subs	r3, r3, #30
 1347 0006 8340     		lsls	r3, r3, r0
 1348 0008 014A     		ldr	r2, .L93
2440:Generated_Source\PSoC4/CyLib.c **** 
 1349              		.loc 1 2440 0
 1350              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c **** }
 1351              		.loc 1 2439 0
 1352 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** 
 1353              		.loc 1 2440 0
 1354 000c 7047     		bx	lr
 1355              	.L94:
 1356 000e C046     		.align	2
 1357              	.L93:
 1358 0010 00E100E0 		.word	-536813312
 1359              		.cfi_endproc
 1360              	.LFE20:
 1361              		.size	CyIntEnable, .-CyIntEnable
 1362              		.section	.text.CyIntGetState,"ax",%progbits
 1363              		.align	2
 1364              		.global	CyIntGetState
 1365              		.code	16
 1366              		.thumb_func
 1367              		.type	CyIntGetState, %function
 1368              	CyIntGetState:
 1369              	.LFB21:
2456:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 1370              		.loc 1 2456 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 81


 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              		@ link register save eliminated.
 1375              	.LVL107:
2458:Generated_Source\PSoC4/CyLib.c **** }
 1376              		.loc 1 2458 0
 1377 0000 1F22     		movs	r2, #31
 1378 0002 044B     		ldr	r3, .L96
 1379 0004 1040     		ands	r0, r2
 1380              	.LVL108:
 1381 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** 
 1382              		.loc 1 2459 0
 1383              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 1384              		.loc 1 2458 0
 1385 0008 C340     		lsrs	r3, r3, r0
 1386 000a 1800     		movs	r0, r3
 1387 000c 0123     		movs	r3, #1
 1388 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** 
 1389              		.loc 1 2459 0
 1390 0010 7047     		bx	lr
 1391              	.L97:
 1392 0012 C046     		.align	2
 1393              	.L96:
 1394 0014 00E100E0 		.word	-536813312
 1395              		.cfi_endproc
 1396              	.LFE21:
 1397              		.size	CyIntGetState, .-CyIntGetState
 1398              		.section	.text.CyIntDisable,"ax",%progbits
 1399              		.align	2
 1400              		.global	CyIntDisable
 1401              		.code	16
 1402              		.thumb_func
 1403              		.type	CyIntDisable, %function
 1404              	CyIntDisable:
 1405              	.LFB22:
2472:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1406              		.loc 1 2472 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 0
 1409              		@ frame_needed = 0, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
 1411              	.LVL109:
2473:Generated_Source\PSoC4/CyLib.c **** }
 1412              		.loc 1 2473 0
 1413 0000 1F23     		movs	r3, #31
 1414 0002 1840     		ands	r0, r3
 1415              	.LVL110:
 1416 0004 1E3B     		subs	r3, r3, #30
 1417 0006 8340     		lsls	r3, r3, r0
 1418 0008 014A     		ldr	r2, .L99
2474:Generated_Source\PSoC4/CyLib.c **** 
 1419              		.loc 1 2474 0
 1420              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c **** }
 1421              		.loc 1 2473 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 82


 1422 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 2474 0
 1424 000c 7047     		bx	lr
 1425              	.L100:
 1426 000e C046     		.align	2
 1427              	.L99:
 1428 0010 80E100E0 		.word	-536813184
 1429              		.cfi_endproc
 1430              	.LFE22:
 1431              		.size	CyIntDisable, .-CyIntDisable
 1432              		.section	.text.CyIntSetPending,"ax",%progbits
 1433              		.align	2
 1434              		.global	CyIntSetPending
 1435              		.code	16
 1436              		.thumb_func
 1437              		.type	CyIntSetPending, %function
 1438              	CyIntSetPending:
 1439              	.LFB23:
2486:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1440              		.loc 1 2486 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
 1445              	.LVL111:
2487:Generated_Source\PSoC4/CyLib.c **** }
 1446              		.loc 1 2487 0
 1447 0000 1F23     		movs	r3, #31
 1448 0002 1840     		ands	r0, r3
 1449              	.LVL112:
 1450 0004 1E3B     		subs	r3, r3, #30
 1451 0006 8340     		lsls	r3, r3, r0
 1452 0008 014A     		ldr	r2, .L102
2488:Generated_Source\PSoC4/CyLib.c **** 
 1453              		.loc 1 2488 0
 1454              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c **** }
 1455              		.loc 1 2487 0
 1456 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** 
 1457              		.loc 1 2488 0
 1458 000c 7047     		bx	lr
 1459              	.L103:
 1460 000e C046     		.align	2
 1461              	.L102:
 1462 0010 00E200E0 		.word	-536813056
 1463              		.cfi_endproc
 1464              	.LFE23:
 1465              		.size	CyIntSetPending, .-CyIntSetPending
 1466              		.section	.text.CyIntClearPending,"ax",%progbits
 1467              		.align	2
 1468              		.global	CyIntClearPending
 1469              		.code	16
 1470              		.thumb_func
 1471              		.type	CyIntClearPending, %function
 1472              	CyIntClearPending:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 83


 1473              	.LFB24:
2501:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1474              		.loc 1 2501 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              		@ link register save eliminated.
 1479              	.LVL113:
2502:Generated_Source\PSoC4/CyLib.c **** }
 1480              		.loc 1 2502 0
 1481 0000 1F23     		movs	r3, #31
 1482 0002 1840     		ands	r0, r3
 1483              	.LVL114:
 1484 0004 1E3B     		subs	r3, r3, #30
 1485 0006 8340     		lsls	r3, r3, r0
 1486 0008 014A     		ldr	r2, .L105
2503:Generated_Source\PSoC4/CyLib.c **** 
 1487              		.loc 1 2503 0
 1488              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c **** }
 1489              		.loc 1 2502 0
 1490 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** 
 1491              		.loc 1 2503 0
 1492 000c 7047     		bx	lr
 1493              	.L106:
 1494 000e C046     		.align	2
 1495              	.L105:
 1496 0010 80E200E0 		.word	-536812928
 1497              		.cfi_endproc
 1498              	.LFE24:
 1499              		.size	CyIntClearPending, .-CyIntClearPending
 1500              		.section	.text.CyHalt,"ax",%progbits
 1501              		.align	2
 1502              		.global	CyHalt
 1503              		.code	16
 1504              		.thumb_func
 1505              		.type	CyHalt, %function
 1506              	CyHalt:
 1507              	.LFB25:
2516:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1508              		.loc 1 2516 0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 0, uses_anonymous_args = 0
 1512              		@ link register save eliminated.
 1513              	.LVL115:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1514              		.loc 1 2525 0
 1515              		.syntax divided
 1516              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1517 0000 01BE     		    bkpt    1
 1518              	@ 0 "" 2
2529:Generated_Source\PSoC4/CyLib.c **** 
 1519              		.loc 1 2529 0
 1520              		.thumb
 1521              		.syntax unified
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 84


 1522              		@ sp needed
 1523 0002 7047     		bx	lr
 1524              		.cfi_endproc
 1525              	.LFE25:
 1526              		.size	CyHalt, .-CyHalt
 1527              		.section	.text.CySoftwareReset,"ax",%progbits
 1528              		.align	2
 1529              		.global	CySoftwareReset
 1530              		.code	16
 1531              		.thumb_func
 1532              		.type	CySoftwareReset, %function
 1533              	CySoftwareReset:
 1534              	.LFB26:
2540:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
 1535              		.loc 1 2540 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539              		@ link register save eliminated.
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1540              		.loc 1 2545 0
 1541 0000 034A     		ldr	r2, .L109
2546:Generated_Source\PSoC4/CyLib.c **** }
 1542              		.loc 1 2546 0
 1543 0002 0449     		ldr	r1, .L109+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1544              		.loc 1 2545 0
 1545 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** 
 1546              		.loc 1 2547 0
 1547              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c **** }
 1548              		.loc 1 2546 0
 1549 0006 1B04     		lsls	r3, r3, #16
 1550 0008 1B0C     		lsrs	r3, r3, #16
 1551 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1552              		.loc 1 2545 0
 1553 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** 
 1554              		.loc 1 2547 0
 1555 000e 7047     		bx	lr
 1556              	.L110:
 1557              		.align	2
 1558              	.L109:
 1559 0010 0CED00E0 		.word	-536810228
 1560 0014 0400FA05 		.word	100270084
 1561              		.cfi_endproc
 1562              	.LFE26:
 1563              		.size	CySoftwareReset, .-CySoftwareReset
 1564              		.section	.text.CyDelay,"ax",%progbits
 1565              		.align	2
 1566              		.global	CyDelay
 1567              		.code	16
 1568              		.thumb_func
 1569              		.type	CyDelay, %function
 1570              	CyDelay:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 85


 1571              	.LFB27:
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1572              		.loc 1 2560 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576              	.LVL116:
 1577 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1578              		.cfi_def_cfa_offset 24
 1579              		.cfi_offset 3, -24
 1580              		.cfi_offset 4, -20
 1581              		.cfi_offset 5, -16
 1582              		.cfi_offset 6, -12
 1583              		.cfi_offset 7, -8
 1584              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1585              		.loc 1 2561 0
 1586 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1587              		.loc 1 2560 0
 1588 0004 0700     		movs	r7, r0
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1589              		.loc 1 2561 0
 1590 0006 2D02     		lsls	r5, r5, #8
 1591 0008 A842     		cmp	r0, r5
 1592 000a 14D9     		bls	.L117
 1593 000c 0400     		movs	r4, r0
 1594 000e 0B4E     		ldr	r6, .L118
 1595              	.LVL117:
 1596              	.L113:
2566:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1597              		.loc 1 2566 0
 1598 0010 B068     		ldr	r0, [r6, #8]
 1599 0012 FFF7FEFF 		bl	CyDelayCycles
 1600              	.LVL118:
2567:Generated_Source\PSoC4/CyLib.c ****     }
 1601              		.loc 1 2567 0
 1602 0016 0A4B     		ldr	r3, .L118+4
 1603 0018 9C46     		mov	ip, r3
 1604 001a 6444     		add	r4, r4, ip
 1605              	.LVL119:
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1606              		.loc 1 2561 0
 1607 001c AC42     		cmp	r4, r5
 1608 001e F7D8     		bhi	.L113
 1609 0020 084B     		ldr	r3, .L118+8
 1610 0022 FB18     		adds	r3, r7, r3
 1611 0024 DB0B     		lsrs	r3, r3, #15
 1612 0026 DB03     		lsls	r3, r3, #15
 1613 0028 6744     		add	r7, r7, ip
 1614 002a FF1A     		subs	r7, r7, r3
 1615              	.LVL120:
 1616              	.L112:
2570:Generated_Source\PSoC4/CyLib.c **** }
 1617              		.loc 1 2570 0
 1618 002c F068     		ldr	r0, [r6, #12]
2571:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 86


 1619              		.loc 1 2571 0
 1620              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1621              		.loc 1 2570 0
 1622 002e 7843     		muls	r0, r7
 1623 0030 FFF7FEFF 		bl	CyDelayCycles
 1624              	.LVL121:
2571:Generated_Source\PSoC4/CyLib.c **** 
 1625              		.loc 1 2571 0
 1626 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1627              	.LVL122:
 1628              	.L117:
 1629 0036 014E     		ldr	r6, .L118
 1630 0038 F8E7     		b	.L112
 1631              	.L119:
 1632 003a C046     		.align	2
 1633              	.L118:
 1634 003c 00000000 		.word	.LANCHOR1
 1635 0040 0080FFFF 		.word	-32768
 1636 0044 FF7FFFFF 		.word	-32769
 1637              		.cfi_endproc
 1638              	.LFE27:
 1639              		.size	CyDelay, .-CyDelay
 1640              		.section	.text.CyDelayUs,"ax",%progbits
 1641              		.align	2
 1642              		.global	CyDelayUs
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	CyDelayUs, %function
 1646              	CyDelayUs:
 1647              	.LFB28:
2583:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1648              		.loc 1 2583 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              	.LVL123:
 1653 0000 10B5     		push	{r4, lr}
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 4, -8
 1656              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c **** }
 1657              		.loc 1 2584 0
 1658 0002 034B     		ldr	r3, .L121
2585:Generated_Source\PSoC4/CyLib.c **** 
 1659              		.loc 1 2585 0
 1660              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c **** }
 1661              		.loc 1 2584 0
 1662 0004 1B79     		ldrb	r3, [r3, #4]
 1663 0006 5843     		muls	r0, r3
 1664              	.LVL124:
 1665 0008 FFF7FEFF 		bl	CyDelayCycles
 1666              	.LVL125:
2585:Generated_Source\PSoC4/CyLib.c **** 
 1667              		.loc 1 2585 0
 1668 000c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 87


 1669              	.L122:
 1670 000e C046     		.align	2
 1671              	.L121:
 1672 0010 00000000 		.word	.LANCHOR1
 1673              		.cfi_endproc
 1674              	.LFE28:
 1675              		.size	CyDelayUs, .-CyDelayUs
 1676              		.global	__aeabi_uidiv
 1677              		.section	.text.CyDelayFreq,"ax",%progbits
 1678              		.align	2
 1679              		.global	CyDelayFreq
 1680              		.code	16
 1681              		.thumb_func
 1682              		.type	CyDelayFreq, %function
 1683              	CyDelayFreq:
 1684              	.LFB29:
2597:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1685              		.loc 1 2597 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 0
 1688              		@ frame_needed = 0, uses_anonymous_args = 0
 1689              	.LVL126:
 1690 0000 70B5     		push	{r4, r5, r6, lr}
 1691              		.cfi_def_cfa_offset 16
 1692              		.cfi_offset 4, -16
 1693              		.cfi_offset 5, -12
 1694              		.cfi_offset 6, -8
 1695              		.cfi_offset 14, -4
2597:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1696              		.loc 1 2597 0
 1697 0002 051E     		subs	r5, r0, #0
2600:Generated_Source\PSoC4/CyLib.c ****     }
 1698              		.loc 1 2600 0
 1699 0004 0C4C     		ldr	r4, .L127
2598:Generated_Source\PSoC4/CyLib.c ****     {
 1700              		.loc 1 2598 0
 1701 0006 08D1     		bne	.L126
2604:Generated_Source\PSoC4/CyLib.c ****     }
 1702              		.loc 1 2604 0
 1703 0008 1826     		movs	r6, #24
 1704 000a 0C4B     		ldr	r3, .L127+4
 1705 000c 0C48     		ldr	r0, .L127+8
 1706              	.LVL127:
 1707 000e 2361     		str	r3, [r4, #16]
 1708 0010 0C4B     		ldr	r3, .L127+12
 1709              	.L125:
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1710              		.loc 1 2607 0
 1711 0012 2671     		strb	r6, [r4, #4]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1712              		.loc 1 2608 0
 1713 0014 E060     		str	r0, [r4, #12]
2609:Generated_Source\PSoC4/CyLib.c **** }
 1714              		.loc 1 2609 0
 1715 0016 A360     		str	r3, [r4, #8]
2610:Generated_Source\PSoC4/CyLib.c **** 
 1716              		.loc 1 2610 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 88


 1717              		@ sp needed
 1718              	.LVL128:
 1719 0018 70BD     		pop	{r4, r5, r6, pc}
 1720              	.LVL129:
 1721              	.L126:
 1722 001a 0B4B     		ldr	r3, .L127+16
2600:Generated_Source\PSoC4/CyLib.c ****     }
 1723              		.loc 1 2600 0
 1724 001c 2061     		str	r0, [r4, #16]
 1725 001e 0B49     		ldr	r1, .L127+20
 1726 0020 C018     		adds	r0, r0, r3
 1727              	.LVL130:
 1728 0022 FFF7FEFF 		bl	__aeabi_uidiv
 1729              	.LVL131:
 1730 0026 FA21     		movs	r1, #250
 1731 0028 094B     		ldr	r3, .L127+24
 1732 002a C6B2     		uxtb	r6, r0
 1733 002c 8900     		lsls	r1, r1, #2
 1734 002e E818     		adds	r0, r5, r3
 1735 0030 FFF7FEFF 		bl	__aeabi_uidiv
 1736              	.LVL132:
 1737 0034 C303     		lsls	r3, r0, #15
 1738 0036 ECE7     		b	.L125
 1739              	.L128:
 1740              		.align	2
 1741              	.L127:
 1742 0038 00000000 		.word	.LANCHOR1
 1743 003c 00366E01 		.word	24000000
 1744 0040 C05D0000 		.word	24000
 1745 0044 0000E02E 		.word	786432000
 1746 0048 3F420F00 		.word	999999
 1747 004c 40420F00 		.word	1000000
 1748 0050 E7030000 		.word	999
 1749              		.cfi_endproc
 1750              	.LFE29:
 1751              		.size	CyDelayFreq, .-CyDelayFreq
 1752              		.section	.text.CySysTickStart,"ax",%progbits
 1753              		.align	2
 1754              		.global	CySysTickStart
 1755              		.code	16
 1756              		.thumb_func
 1757              		.type	CySysTickStart, %function
 1758              	CySysTickStart:
 1759              	.LFB30:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1760              		.loc 1 2629 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764 0000 70B5     		push	{r4, r5, r6, lr}
 1765              		.cfi_def_cfa_offset 16
 1766              		.cfi_offset 4, -16
 1767              		.cfi_offset 5, -12
 1768              		.cfi_offset 6, -8
 1769              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 2630 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 89


 1771 0002 114C     		ldr	r4, .L131
 1772 0004 6569     		ldr	r5, [r4, #20]
 1773 0006 002D     		cmp	r5, #0
 1774 0008 13D1     		bne	.L130
 1775              	.LVL133:
 1776              	.LBB85:
 1777              	.LBB86:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1778              		.loc 1 2672 0
 1779 000a FA21     		movs	r1, #250
 1780              	.LBB87:
 1781              	.LBB88:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1782              		.loc 1 2290 0
 1783 000c 0F4A     		ldr	r2, .L131+4
 1784 000e 104B     		ldr	r3, .L131+8
 1785              	.LBE88:
 1786              	.LBE87:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1787              		.loc 1 2663 0
 1788 0010 2560     		str	r5, [r4]
 1789              	.LVL134:
 1790 0012 6560     		str	r5, [r4, #4]
 1791              	.LVL135:
 1792 0014 A560     		str	r5, [r4, #8]
 1793              	.LVL136:
 1794 0016 E560     		str	r5, [r4, #12]
 1795              	.LVL137:
 1796 0018 2561     		str	r5, [r4, #16]
 1797              	.LVL138:
 1798              	.LBB90:
 1799              	.LBB89:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1800              		.loc 1 2290 0
 1801 001a 1A60     		str	r2, [r3]
 1802              	.LVL139:
 1803              	.LBE89:
 1804              	.LBE90:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1805              		.loc 1 2672 0
 1806 001c 0D4B     		ldr	r3, .L131+12
 1807 001e 8900     		lsls	r1, r1, #2
 1808 0020 1869     		ldr	r0, [r3, #16]
 1809 0022 FFF7FEFF 		bl	__aeabi_uidiv
 1810              	.LVL140:
 1811              	.LBB91:
 1812              	.LBB92:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 2755 0
 1814 0026 0C4B     		ldr	r3, .L131+16
 1815 0028 1860     		str	r0, [r3]
 1816              	.LVL141:
 1817              	.LBE92:
 1818              	.LBE91:
 1819              	.LBB93:
 1820              	.LBB94:
2880:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 90


 1821              		.loc 1 2880 0
 1822 002a 0C4B     		ldr	r3, .L131+20
 1823 002c 1D60     		str	r5, [r3]
 1824              	.LVL142:
 1825              	.LBE94:
 1826              	.LBE93:
 1827              	.LBE86:
 1828              	.LBE85:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1829              		.loc 1 2633 0
 1830 002e 0123     		movs	r3, #1
 1831 0030 6361     		str	r3, [r4, #20]
 1832              	.LVL143:
 1833              	.L130:
 1834              	.LBB95:
 1835              	.LBB96:
 1836              	.LBB97:
 1837              	.LBB98:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1838              		.loc 1 2722 0
 1839 0032 0222     		movs	r2, #2
 1840 0034 0A4B     		ldr	r3, .L131+24
 1841              	.LBE98:
 1842              	.LBE97:
 1843              	.LBE96:
 1844              	.LBE95:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1845              		.loc 1 2637 0
 1846              		@ sp needed
 1847              	.LBB102:
 1848              	.LBB101:
 1849              	.LBB100:
 1850              	.LBB99:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1851              		.loc 1 2722 0
 1852 0036 1968     		ldr	r1, [r3]
 1853 0038 0A43     		orrs	r2, r1
 1854 003a 1A60     		str	r2, [r3]
 1855              	.LBE99:
 1856              	.LBE100:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1857              		.loc 1 2690 0
 1858 003c 0122     		movs	r2, #1
 1859 003e 1968     		ldr	r1, [r3]
 1860 0040 0A43     		orrs	r2, r1
 1861 0042 1A60     		str	r2, [r3]
 1862              	.LBE101:
 1863              	.LBE102:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1864              		.loc 1 2637 0
 1865 0044 70BD     		pop	{r4, r5, r6, pc}
 1866              	.L132:
 1867 0046 C046     		.align	2
 1868              	.L131:
 1869 0048 00000000 		.word	.LANCHOR0
 1870 004c 00000000 		.word	CySysTickServiceCallbacks
 1871 0050 3C000020 		.word	536870972
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 91


 1872 0054 00000000 		.word	.LANCHOR1
 1873 0058 14E000E0 		.word	-536813548
 1874 005c 18E000E0 		.word	-536813544
 1875 0060 10E000E0 		.word	-536813552
 1876              		.cfi_endproc
 1877              	.LFE30:
 1878              		.size	CySysTickStart, .-CySysTickStart
 1879              		.section	.text.CySysTickInit,"ax",%progbits
 1880              		.align	2
 1881              		.global	CySysTickInit
 1882              		.code	16
 1883              		.thumb_func
 1884              		.type	CySysTickInit, %function
 1885              	CySysTickInit:
 1886              	.LFB31:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1887              		.loc 1 2658 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              	.LVL144:
 1892 0000 10B5     		push	{r4, lr}
 1893              		.cfi_def_cfa_offset 8
 1894              		.cfi_offset 4, -8
 1895              		.cfi_offset 14, -4
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1896              		.loc 1 2663 0
 1897 0002 0024     		movs	r4, #0
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1898              		.loc 1 2672 0
 1899 0004 FA21     		movs	r1, #250
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1900              		.loc 1 2663 0
 1901 0006 094B     		ldr	r3, .L134
 1902              	.LBB103:
 1903              	.LBB104:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1904              		.loc 1 2290 0
 1905 0008 094A     		ldr	r2, .L134+4
 1906              	.LBE104:
 1907              	.LBE103:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1908              		.loc 1 2663 0
 1909 000a 1C60     		str	r4, [r3]
 1910              	.LVL145:
 1911 000c 1C61     		str	r4, [r3, #16]
 1912 000e 5C60     		str	r4, [r3, #4]
 1913              	.LVL146:
 1914 0010 9C60     		str	r4, [r3, #8]
 1915              	.LVL147:
 1916 0012 DC60     		str	r4, [r3, #12]
 1917              	.LVL148:
 1918              	.LBB107:
 1919              	.LBB105:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1920              		.loc 1 2290 0
 1921 0014 074B     		ldr	r3, .L134+8
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 92


 1922              	.LVL149:
 1923              	.LBE105:
 1924              	.LBE107:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1925              		.loc 1 2672 0
 1926 0016 8900     		lsls	r1, r1, #2
 1927              	.LBB108:
 1928              	.LBB106:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1929              		.loc 1 2290 0
 1930 0018 1A60     		str	r2, [r3]
 1931              	.LVL150:
 1932              	.LBE106:
 1933              	.LBE108:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1934              		.loc 1 2672 0
 1935 001a 074B     		ldr	r3, .L134+12
2674:Generated_Source\PSoC4/CyLib.c **** 
 1936              		.loc 1 2674 0
 1937              		@ sp needed
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1938              		.loc 1 2672 0
 1939 001c 1869     		ldr	r0, [r3, #16]
 1940 001e FFF7FEFF 		bl	__aeabi_uidiv
 1941              	.LVL151:
 1942              	.LBB109:
 1943              	.LBB110:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1944              		.loc 1 2755 0
 1945 0022 064B     		ldr	r3, .L134+16
 1946 0024 1860     		str	r0, [r3]
 1947              	.LVL152:
 1948              	.LBE110:
 1949              	.LBE109:
 1950              	.LBB111:
 1951              	.LBB112:
2880:Generated_Source\PSoC4/CyLib.c **** }
 1952              		.loc 1 2880 0
 1953 0026 064B     		ldr	r3, .L134+20
 1954 0028 1C60     		str	r4, [r3]
 1955              	.LBE112:
 1956              	.LBE111:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1957              		.loc 1 2674 0
 1958 002a 10BD     		pop	{r4, pc}
 1959              	.L135:
 1960              		.align	2
 1961              	.L134:
 1962 002c 00000000 		.word	.LANCHOR0
 1963 0030 00000000 		.word	CySysTickServiceCallbacks
 1964 0034 3C000020 		.word	536870972
 1965 0038 00000000 		.word	.LANCHOR1
 1966 003c 14E000E0 		.word	-536813548
 1967 0040 18E000E0 		.word	-536813544
 1968              		.cfi_endproc
 1969              	.LFE31:
 1970              		.size	CySysTickInit, .-CySysTickInit
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 93


 1971              		.section	.text.CySysTickEnable,"ax",%progbits
 1972              		.align	2
 1973              		.global	CySysTickEnable
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CySysTickEnable, %function
 1977              	CySysTickEnable:
 1978              	.LFB32:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1979              		.loc 1 2688 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 1983              		@ link register save eliminated.
 1984              	.LBB113:
 1985              	.LBB114:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1986              		.loc 1 2722 0
 1987 0000 0222     		movs	r2, #2
 1988 0002 044B     		ldr	r3, .L137
 1989              	.LBE114:
 1990              	.LBE113:
2691:Generated_Source\PSoC4/CyLib.c **** 
 1991              		.loc 1 2691 0
 1992              		@ sp needed
 1993              	.LBB116:
 1994              	.LBB115:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1995              		.loc 1 2722 0
 1996 0004 1968     		ldr	r1, [r3]
 1997 0006 0A43     		orrs	r2, r1
 1998 0008 1A60     		str	r2, [r3]
 1999              	.LBE115:
 2000              	.LBE116:
2690:Generated_Source\PSoC4/CyLib.c **** }
 2001              		.loc 1 2690 0
 2002 000a 0122     		movs	r2, #1
 2003 000c 1968     		ldr	r1, [r3]
 2004 000e 0A43     		orrs	r2, r1
 2005 0010 1A60     		str	r2, [r3]
2691:Generated_Source\PSoC4/CyLib.c **** 
 2006              		.loc 1 2691 0
 2007 0012 7047     		bx	lr
 2008              	.L138:
 2009              		.align	2
 2010              	.L137:
 2011 0014 10E000E0 		.word	-536813552
 2012              		.cfi_endproc
 2013              	.LFE32:
 2014              		.size	CySysTickEnable, .-CySysTickEnable
 2015              		.section	.text.CySysTickStop,"ax",%progbits
 2016              		.align	2
 2017              		.global	CySysTickStop
 2018              		.code	16
 2019              		.thumb_func
 2020              		.type	CySysTickStop, %function
 2021              	CySysTickStop:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 94


 2022              	.LFB33:
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2023              		.loc 1 2705 0
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 0
 2026              		@ frame_needed = 0, uses_anonymous_args = 0
 2027              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c **** }
 2028              		.loc 1 2706 0
 2029 0000 0121     		movs	r1, #1
 2030 0002 024A     		ldr	r2, .L140
2707:Generated_Source\PSoC4/CyLib.c **** 
 2031              		.loc 1 2707 0
 2032              		@ sp needed
2706:Generated_Source\PSoC4/CyLib.c **** }
 2033              		.loc 1 2706 0
 2034 0004 1368     		ldr	r3, [r2]
 2035 0006 8B43     		bics	r3, r1
 2036 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** 
 2037              		.loc 1 2707 0
 2038 000a 7047     		bx	lr
 2039              	.L141:
 2040              		.align	2
 2041              	.L140:
 2042 000c 10E000E0 		.word	-536813552
 2043              		.cfi_endproc
 2044              	.LFE33:
 2045              		.size	CySysTickStop, .-CySysTickStop
 2046              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2047              		.align	2
 2048              		.global	CySysTickEnableInterrupt
 2049              		.code	16
 2050              		.thumb_func
 2051              		.type	CySysTickEnableInterrupt, %function
 2052              	CySysTickEnableInterrupt:
 2053              	.LFB34:
2721:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2054              		.loc 1 2721 0
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 0
 2057              		@ frame_needed = 0, uses_anonymous_args = 0
 2058              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c **** }
 2059              		.loc 1 2722 0
 2060 0000 0223     		movs	r3, #2
 2061 0002 024A     		ldr	r2, .L143
2723:Generated_Source\PSoC4/CyLib.c **** 
 2062              		.loc 1 2723 0
 2063              		@ sp needed
2722:Generated_Source\PSoC4/CyLib.c **** }
 2064              		.loc 1 2722 0
 2065 0004 1168     		ldr	r1, [r2]
 2066 0006 0B43     		orrs	r3, r1
 2067 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** 
 2068              		.loc 1 2723 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 95


 2069 000a 7047     		bx	lr
 2070              	.L144:
 2071              		.align	2
 2072              	.L143:
 2073 000c 10E000E0 		.word	-536813552
 2074              		.cfi_endproc
 2075              	.LFE34:
 2076              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2077              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2078              		.align	2
 2079              		.global	CySysTickDisableInterrupt
 2080              		.code	16
 2081              		.thumb_func
 2082              		.type	CySysTickDisableInterrupt, %function
 2083              	CySysTickDisableInterrupt:
 2084              	.LFB35:
2737:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2085              		.loc 1 2737 0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 2089              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c **** }
 2090              		.loc 1 2738 0
 2091 0000 0221     		movs	r1, #2
 2092 0002 024A     		ldr	r2, .L146
2739:Generated_Source\PSoC4/CyLib.c **** 
 2093              		.loc 1 2739 0
 2094              		@ sp needed
2738:Generated_Source\PSoC4/CyLib.c **** }
 2095              		.loc 1 2738 0
 2096 0004 1368     		ldr	r3, [r2]
 2097 0006 8B43     		bics	r3, r1
 2098 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** 
 2099              		.loc 1 2739 0
 2100 000a 7047     		bx	lr
 2101              	.L147:
 2102              		.align	2
 2103              	.L146:
 2104 000c 10E000E0 		.word	-536813552
 2105              		.cfi_endproc
 2106              	.LFE35:
 2107              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2108              		.section	.text.CySysTickSetReload,"ax",%progbits
 2109              		.align	2
 2110              		.global	CySysTickSetReload
 2111              		.code	16
 2112              		.thumb_func
 2113              		.type	CySysTickSetReload, %function
 2114              	CySysTickSetReload:
 2115              	.LFB36:
2754:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2116              		.loc 1 2754 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 0
 2119              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 96


 2120              		@ link register save eliminated.
 2121              	.LVL153:
2755:Generated_Source\PSoC4/CyLib.c **** }
 2122              		.loc 1 2755 0
 2123 0000 024B     		ldr	r3, .L149
 2124 0002 0002     		lsls	r0, r0, #8
 2125              	.LVL154:
 2126 0004 000A     		lsrs	r0, r0, #8
 2127 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** 
 2128              		.loc 1 2756 0
 2129              		@ sp needed
 2130 0008 7047     		bx	lr
 2131              	.L150:
 2132 000a C046     		.align	2
 2133              	.L149:
 2134 000c 14E000E0 		.word	-536813548
 2135              		.cfi_endproc
 2136              	.LFE36:
 2137              		.size	CySysTickSetReload, .-CySysTickSetReload
 2138              		.section	.text.CySysTickGetReload,"ax",%progbits
 2139              		.align	2
 2140              		.global	CySysTickGetReload
 2141              		.code	16
 2142              		.thumb_func
 2143              		.type	CySysTickGetReload, %function
 2144              	CySysTickGetReload:
 2145              	.LFB37:
2770:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2146              		.loc 1 2770 0
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
 2150              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c **** }
 2151              		.loc 1 2771 0
 2152 0000 024B     		ldr	r3, .L152
2772:Generated_Source\PSoC4/CyLib.c **** 
 2153              		.loc 1 2772 0
 2154              		@ sp needed
2771:Generated_Source\PSoC4/CyLib.c **** }
 2155              		.loc 1 2771 0
 2156 0002 1868     		ldr	r0, [r3]
 2157 0004 0002     		lsls	r0, r0, #8
 2158 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** 
 2159              		.loc 1 2772 0
 2160 0008 7047     		bx	lr
 2161              	.L153:
 2162 000a C046     		.align	2
 2163              	.L152:
 2164 000c 14E000E0 		.word	-536813548
 2165              		.cfi_endproc
 2166              	.LFE37:
 2167              		.size	CySysTickGetReload, .-CySysTickGetReload
 2168              		.section	.text.CySysTickGetValue,"ax",%progbits
 2169              		.align	2
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 97


 2170              		.global	CySysTickGetValue
 2171              		.code	16
 2172              		.thumb_func
 2173              		.type	CySysTickGetValue, %function
 2174              	CySysTickGetValue:
 2175              	.LFB38:
2786:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2176              		.loc 1 2786 0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 0
 2179              		@ frame_needed = 0, uses_anonymous_args = 0
 2180              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c **** }
 2181              		.loc 1 2787 0
 2182 0000 024B     		ldr	r3, .L155
2788:Generated_Source\PSoC4/CyLib.c **** 
 2183              		.loc 1 2788 0
 2184              		@ sp needed
2787:Generated_Source\PSoC4/CyLib.c **** }
 2185              		.loc 1 2787 0
 2186 0002 1868     		ldr	r0, [r3]
 2187 0004 0002     		lsls	r0, r0, #8
 2188 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** 
 2189              		.loc 1 2788 0
 2190 0008 7047     		bx	lr
 2191              	.L156:
 2192 000a C046     		.align	2
 2193              	.L155:
 2194 000c 18E000E0 		.word	-536813544
 2195              		.cfi_endproc
 2196              	.LFE38:
 2197              		.size	CySysTickGetValue, .-CySysTickGetValue
 2198              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2199              		.align	2
 2200              		.global	CySysTickGetCountFlag
 2201              		.code	16
 2202              		.thumb_func
 2203              		.type	CySysTickGetCountFlag, %function
 2204              	CySysTickGetCountFlag:
 2205              	.LFB39:
2866:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2206              		.loc 1 2866 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 0
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 2210              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c **** }
 2211              		.loc 1 2867 0
 2212 0000 024B     		ldr	r3, .L158
2868:Generated_Source\PSoC4/CyLib.c **** 
 2213              		.loc 1 2868 0
 2214              		@ sp needed
2867:Generated_Source\PSoC4/CyLib.c **** }
 2215              		.loc 1 2867 0
 2216 0002 1868     		ldr	r0, [r3]
 2217 0004 C003     		lsls	r0, r0, #15
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 98


 2218 0006 C00F     		lsrs	r0, r0, #31
2868:Generated_Source\PSoC4/CyLib.c **** 
 2219              		.loc 1 2868 0
 2220 0008 7047     		bx	lr
 2221              	.L159:
 2222 000a C046     		.align	2
 2223              	.L158:
 2224 000c 10E000E0 		.word	-536813552
 2225              		.cfi_endproc
 2226              	.LFE39:
 2227              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2228              		.section	.text.CySysTickClear,"ax",%progbits
 2229              		.align	2
 2230              		.global	CySysTickClear
 2231              		.code	16
 2232              		.thumb_func
 2233              		.type	CySysTickClear, %function
 2234              	CySysTickClear:
 2235              	.LFB40:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2236              		.loc 1 2879 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 2241              		.loc 1 2880 0
 2242 0000 0022     		movs	r2, #0
 2243 0002 014B     		ldr	r3, .L161
2881:Generated_Source\PSoC4/CyLib.c **** 
 2244              		.loc 1 2881 0
 2245              		@ sp needed
2880:Generated_Source\PSoC4/CyLib.c **** }
 2246              		.loc 1 2880 0
 2247 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 2248              		.loc 1 2881 0
 2249 0006 7047     		bx	lr
 2250              	.L162:
 2251              		.align	2
 2252              	.L161:
 2253 0008 18E000E0 		.word	-536813544
 2254              		.cfi_endproc
 2255              	.LFE40:
 2256              		.size	CySysTickClear, .-CySysTickClear
 2257              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2258              		.align	2
 2259              		.global	CySysTickSetCallback
 2260              		.code	16
 2261              		.thumb_func
 2262              		.type	CySysTickSetCallback, %function
 2263              	CySysTickSetCallback:
 2264              	.LFB41:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2265              		.loc 1 2914 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 99


 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              		@ link register save eliminated.
 2270              	.LVL155:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2271              		.loc 1 2917 0
 2272 0000 024A     		ldr	r2, .L164
 2273 0002 8300     		lsls	r3, r0, #2
 2274 0004 9858     		ldr	r0, [r3, r2]
 2275              	.LVL156:
2920:Generated_Source\PSoC4/CyLib.c **** 
 2276              		.loc 1 2920 0
 2277              		@ sp needed
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2278              		.loc 1 2918 0
 2279 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2280              		.loc 1 2920 0
 2281 0008 7047     		bx	lr
 2282              	.L165:
 2283 000a C046     		.align	2
 2284              	.L164:
 2285 000c 00000000 		.word	.LANCHOR0
 2286              		.cfi_endproc
 2287              	.LFE41:
 2288              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2289              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2290              		.align	2
 2291              		.global	CySysTickGetCallback
 2292              		.code	16
 2293              		.thumb_func
 2294              		.type	CySysTickGetCallback, %function
 2295              	CySysTickGetCallback:
 2296              	.LFB42:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2297              		.loc 1 2938 0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
 2301              		@ link register save eliminated.
 2302              	.LVL157:
2939:Generated_Source\PSoC4/CyLib.c **** }
 2303              		.loc 1 2939 0
 2304 0000 014B     		ldr	r3, .L167
 2305 0002 8000     		lsls	r0, r0, #2
 2306              	.LVL158:
 2307 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2308              		.loc 1 2940 0
 2309              		@ sp needed
 2310 0006 7047     		bx	lr
 2311              	.L168:
 2312              		.align	2
 2313              	.L167:
 2314 0008 00000000 		.word	.LANCHOR0
 2315              		.cfi_endproc
 2316              	.LFE42:
 2317              		.size	CySysTickGetCallback, .-CySysTickGetCallback
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 100


 2318              		.section	.text.CyGetUniqueId,"ax",%progbits
 2319              		.align	2
 2320              		.global	CyGetUniqueId
 2321              		.code	16
 2322              		.thumb_func
 2323              		.type	CyGetUniqueId, %function
 2324              	CyGetUniqueId:
 2325              	.LFB44:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2326              		.loc 1 2983 0
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 0
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 2330              		@ link register save eliminated.
 2331              	.LVL159:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2332              		.loc 1 2985 0
 2333 0000 144B     		ldr	r3, .L170
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2334              		.loc 1 3005 0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 101


 2335              		@ sp needed
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2336              		.loc 1 2985 0
 2337 0002 1A78     		ldrb	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2338              		.loc 1 2986 0
 2339 0004 144B     		ldr	r3, .L170+4
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2340              		.loc 1 2985 0
 2341 0006 D1B2     		uxtb	r1, r2
 2342 0008 0160     		str	r1, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2343              		.loc 1 2986 0
 2344 000a 1B78     		ldrb	r3, [r3]
 2345 000c 1B02     		lsls	r3, r3, #8
 2346 000e 0B43     		orrs	r3, r1
 2347 0010 1A00     		movs	r2, r3
 2348 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2349              		.loc 1 2987 0
 2350 0014 114B     		ldr	r3, .L170+8
 2351 0016 1B78     		ldrb	r3, [r3]
 2352 0018 1B04     		lsls	r3, r3, #16
 2353 001a 1343     		orrs	r3, r2
2988:Generated_Source\PSoC4/CyLib.c **** 
 2354              		.loc 1 2988 0
 2355 001c 104A     		ldr	r2, .L170+12
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2356              		.loc 1 2987 0
 2357 001e 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c **** 
 2358              		.loc 1 2988 0
 2359 0020 1278     		ldrb	r2, [r2]
 2360 0022 1206     		lsls	r2, r2, #24
 2361 0024 1343     		orrs	r3, r2
 2362 0026 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2363              		.loc 1 2990 0
 2364 0028 0E4B     		ldr	r3, .L170+16
 2365 002a 1A78     		ldrb	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2366              		.loc 1 2991 0
 2367 002c 0E4B     		ldr	r3, .L170+20
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2368              		.loc 1 2990 0
 2369 002e D1B2     		uxtb	r1, r2
 2370 0030 4160     		str	r1, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2371              		.loc 1 2991 0
 2372 0032 1B78     		ldrb	r3, [r3]
 2373 0034 1B02     		lsls	r3, r3, #8
 2374 0036 0B43     		orrs	r3, r1
 2375 0038 1A00     		movs	r2, r3
 2376 003a 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2377              		.loc 1 2992 0
 2378 003c 0B4B     		ldr	r3, .L170+24
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 102


 2379 003e 1B78     		ldrb	r3, [r3]
 2380 0040 1B04     		lsls	r3, r3, #16
 2381 0042 1343     		orrs	r3, r2
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2382              		.loc 1 2993 0
 2383 0044 0A4A     		ldr	r2, .L170+28
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2384              		.loc 1 2992 0
 2385 0046 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2386              		.loc 1 2993 0
 2387 0048 1278     		ldrb	r2, [r2]
 2388 004a 1206     		lsls	r2, r2, #24
 2389 004c 1343     		orrs	r3, r2
 2390 004e 4360     		str	r3, [r0, #4]
 2391              		.loc 1 3005 0
 2392 0050 7047     		bx	lr
 2393              	.L171:
 2394 0052 C046     		.align	2
 2395              	.L170:
 2396 0054 78F1FF0F 		.word	268431736
 2397 0058 79F1FF0F 		.word	268431737
 2398 005c 7AF1FF0F 		.word	268431738
 2399 0060 7BF1FF0F 		.word	268431739
 2400 0064 7CF1FF0F 		.word	268431740
 2401 0068 7DF1FF0F 		.word	268431741
 2402 006c 7EF1FF0F 		.word	268431742
 2403 0070 7FF1FF0F 		.word	268431743
 2404              		.cfi_endproc
 2405              	.LFE44:
 2406              		.size	CyGetUniqueId, .-CyGetUniqueId
 2407              		.global	CySysClkPumpConfig
 2408              		.global	cyImoFreqMhz2Reg
 2409              		.global	CySysTickInitVar
 2410              		.global	cydelay32kMs
 2411              		.global	cydelayFreqMhz
 2412              		.global	cydelayFreqKhz
 2413              		.global	cydelayFreqHz
 2414              		.section	.rodata
 2415              		.align	2
 2416              		.set	.LANCHOR2,. + 0
 2417              		.type	cyImoFreqMhz2Reg, %object
 2418              		.size	cyImoFreqMhz2Reg, 46
 2419              	cyImoFreqMhz2Reg:
 2420 0000 03       		.byte	3
 2421 0001 04       		.byte	4
 2422 0002 05       		.byte	5
 2423 0003 06       		.byte	6
 2424 0004 07       		.byte	7
 2425 0005 08       		.byte	8
 2426 0006 09       		.byte	9
 2427 0007 0A       		.byte	10
 2428 0008 0B       		.byte	11
 2429 0009 0C       		.byte	12
 2430 000a 0E       		.byte	14
 2431 000b 0F       		.byte	15
 2432 000c 10       		.byte	16
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 103


 2433 000d 11       		.byte	17
 2434 000e 12       		.byte	18
 2435 000f 13       		.byte	19
 2436 0010 14       		.byte	20
 2437 0011 15       		.byte	21
 2438 0012 16       		.byte	22
 2439 0013 17       		.byte	23
 2440 0014 18       		.byte	24
 2441 0015 19       		.byte	25
 2442 0016 1B       		.byte	27
 2443 0017 1C       		.byte	28
 2444 0018 1D       		.byte	29
 2445 0019 1E       		.byte	30
 2446 001a 1F       		.byte	31
 2447 001b 20       		.byte	32
 2448 001c 21       		.byte	33
 2449 001d 22       		.byte	34
 2450 001e 23       		.byte	35
 2451 001f 25       		.byte	37
 2452 0020 26       		.byte	38
 2453 0021 27       		.byte	39
 2454 0022 28       		.byte	40
 2455 0023 29       		.byte	41
 2456 0024 2A       		.byte	42
 2457 0025 2B       		.byte	43
 2458 0026 2E       		.byte	46
 2459 0027 2F       		.byte	47
 2460 0028 30       		.byte	48
 2461 0029 31       		.byte	49
 2462 002a 32       		.byte	50
 2463 002b 33       		.byte	51
 2464 002c 34       		.byte	52
 2465 002d 35       		.byte	53
 2466              		.data
 2467              		.align	2
 2468              		.set	.LANCHOR1,. + 0
 2469              		.type	CySysClkPumpConfig, %object
 2470              		.size	CySysClkPumpConfig, 4
 2471              	CySysClkPumpConfig:
 2472 0000 01000000 		.word	1
 2473              		.type	cydelayFreqMhz, %object
 2474              		.size	cydelayFreqMhz, 1
 2475              	cydelayFreqMhz:
 2476 0004 18       		.byte	24
 2477 0005 000000   		.space	3
 2478              		.type	cydelay32kMs, %object
 2479              		.size	cydelay32kMs, 4
 2480              	cydelay32kMs:
 2481 0008 0000E02E 		.word	786432000
 2482              		.type	cydelayFreqKhz, %object
 2483              		.size	cydelayFreqKhz, 4
 2484              	cydelayFreqKhz:
 2485 000c C05D0000 		.word	24000
 2486              		.type	cydelayFreqHz, %object
 2487              		.size	cydelayFreqHz, 4
 2488              	cydelayFreqHz:
 2489 0010 00366E01 		.word	24000000
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 104


 2490              		.bss
 2491              		.align	2
 2492              		.set	.LANCHOR0,. + 0
 2493              		.type	CySysTickCallbacks, %object
 2494              		.size	CySysTickCallbacks, 20
 2495              	CySysTickCallbacks:
 2496 0000 00000000 		.space	20
 2496      00000000 
 2496      00000000 
 2496      00000000 
 2496      00000000 
 2497              		.type	CySysTickInitVar, %object
 2498              		.size	CySysTickInitVar, 4
 2499              	CySysTickInitVar:
 2500 0014 00000000 		.space	4
 2501              		.text
 2502              	.Letext0:
 2503              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2504              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2505              		.section	.debug_info,"",%progbits
 2506              	.Ldebug_info0:
 2507 0000 0B0D0000 		.4byte	0xd0b
 2508 0004 0400     		.2byte	0x4
 2509 0006 00000000 		.4byte	.Ldebug_abbrev0
 2510 000a 04       		.byte	0x4
 2511 000b 01       		.uleb128 0x1
 2512 000c CF040000 		.4byte	.LASF103
 2513 0010 0C       		.byte	0xc
 2514 0011 7D060000 		.4byte	.LASF104
 2515 0015 84000000 		.4byte	.LASF105
 2516 0019 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 2517 001d 00000000 		.4byte	0
 2518 0021 00000000 		.4byte	.Ldebug_line0
 2519 0025 02       		.uleb128 0x2
 2520 0026 01       		.byte	0x1
 2521 0027 06       		.byte	0x6
 2522 0028 59010000 		.4byte	.LASF0
 2523 002c 02       		.uleb128 0x2
 2524 002d 01       		.byte	0x1
 2525 002e 08       		.byte	0x8
 2526 002f B7040000 		.4byte	.LASF1
 2527 0033 02       		.uleb128 0x2
 2528 0034 02       		.byte	0x2
 2529 0035 05       		.byte	0x5
 2530 0036 C5040000 		.4byte	.LASF2
 2531 003a 02       		.uleb128 0x2
 2532 003b 02       		.byte	0x2
 2533 003c 07       		.byte	0x7
 2534 003d 14030000 		.4byte	.LASF3
 2535 0041 02       		.uleb128 0x2
 2536 0042 04       		.byte	0x4
 2537 0043 05       		.byte	0x5
 2538 0044 98010000 		.4byte	.LASF4
 2539 0048 02       		.uleb128 0x2
 2540 0049 04       		.byte	0x4
 2541 004a 07       		.byte	0x7
 2542 004b 9C020000 		.4byte	.LASF5
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 105


 2543 004f 02       		.uleb128 0x2
 2544 0050 08       		.byte	0x8
 2545 0051 05       		.byte	0x5
 2546 0052 4B010000 		.4byte	.LASF6
 2547 0056 02       		.uleb128 0x2
 2548 0057 08       		.byte	0x8
 2549 0058 07       		.byte	0x7
 2550 0059 DF000000 		.4byte	.LASF7
 2551 005d 03       		.uleb128 0x3
 2552 005e 04       		.byte	0x4
 2553 005f 05       		.byte	0x5
 2554 0060 696E7400 		.ascii	"int\000"
 2555 0064 02       		.uleb128 0x2
 2556 0065 04       		.byte	0x4
 2557 0066 07       		.byte	0x7
 2558 0067 80020000 		.4byte	.LASF8
 2559 006b 04       		.uleb128 0x4
 2560 006c C3010000 		.4byte	.LASF9
 2561 0070 02       		.byte	0x2
 2562 0071 D201     		.2byte	0x1d2
 2563 0073 2C000000 		.4byte	0x2c
 2564 0077 04       		.uleb128 0x4
 2565 0078 17000000 		.4byte	.LASF10
 2566 007c 02       		.byte	0x2
 2567 007d D301     		.2byte	0x1d3
 2568 007f 3A000000 		.4byte	0x3a
 2569 0083 04       		.uleb128 0x4
 2570 0084 06020000 		.4byte	.LASF11
 2571 0088 02       		.byte	0x2
 2572 0089 D401     		.2byte	0x1d4
 2573 008b 48000000 		.4byte	0x48
 2574 008f 02       		.uleb128 0x2
 2575 0090 04       		.byte	0x4
 2576 0091 04       		.byte	0x4
 2577 0092 3A040000 		.4byte	.LASF12
 2578 0096 02       		.uleb128 0x2
 2579 0097 08       		.byte	0x8
 2580 0098 04       		.byte	0x4
 2581 0099 E2010000 		.4byte	.LASF13
 2582 009d 02       		.uleb128 0x2
 2583 009e 01       		.byte	0x1
 2584 009f 08       		.byte	0x8
 2585 00a0 8C050000 		.4byte	.LASF14
 2586 00a4 04       		.uleb128 0x4
 2587 00a5 A1040000 		.4byte	.LASF15
 2588 00a9 02       		.byte	0x2
 2589 00aa 7C02     		.2byte	0x27c
 2590 00ac B0000000 		.4byte	0xb0
 2591 00b0 05       		.uleb128 0x5
 2592 00b1 6B000000 		.4byte	0x6b
 2593 00b5 04       		.uleb128 0x4
 2594 00b6 82030000 		.4byte	.LASF16
 2595 00ba 02       		.byte	0x2
 2596 00bb 7E02     		.2byte	0x27e
 2597 00bd C1000000 		.4byte	0xc1
 2598 00c1 05       		.uleb128 0x5
 2599 00c2 83000000 		.4byte	0x83
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 106


 2600 00c6 04       		.uleb128 0x4
 2601 00c7 91050000 		.4byte	.LASF17
 2602 00cb 02       		.byte	0x2
 2603 00cc 8E02     		.2byte	0x28e
 2604 00ce D2000000 		.4byte	0xd2
 2605 00d2 06       		.uleb128 0x6
 2606 00d3 04       		.byte	0x4
 2607 00d4 D8000000 		.4byte	0xd8
 2608 00d8 07       		.uleb128 0x7
 2609 00d9 02       		.uleb128 0x2
 2610 00da 08       		.byte	0x8
 2611 00db 04       		.byte	0x4
 2612 00dc BF030000 		.4byte	.LASF18
 2613 00e0 02       		.uleb128 0x2
 2614 00e1 04       		.byte	0x4
 2615 00e2 07       		.byte	0x7
 2616 00e3 A4030000 		.4byte	.LASF19
 2617 00e7 08       		.uleb128 0x8
 2618 00e8 65040000 		.4byte	.LASF20
 2619 00ec 03       		.byte	0x3
 2620 00ed F5       		.byte	0xf5
 2621 00ee D2000000 		.4byte	0xd2
 2622 00f2 09       		.uleb128 0x9
 2623 00f3 B0040000 		.4byte	.LASF21
 2624 00f7 01       		.byte	0x1
 2625 00f8 D309     		.2byte	0x9d3
 2626 00fa 01       		.byte	0x1
 2627 00fb 0C010000 		.4byte	0x10c
 2628 00ff 0A       		.uleb128 0xa
 2629 0100 85050000 		.4byte	.LASF23
 2630 0104 01       		.byte	0x1
 2631 0105 D309     		.2byte	0x9d3
 2632 0107 6B000000 		.4byte	0x6b
 2633 010b 00       		.byte	0
 2634 010c 09       		.uleb128 0x9
 2635 010d D8010000 		.4byte	.LASF22
 2636 0111 01       		.byte	0x1
 2637 0112 160A     		.2byte	0xa16
 2638 0114 01       		.byte	0x1
 2639 0115 26010000 		.4byte	0x126
 2640 0119 0A       		.uleb128 0xa
 2641 011a 9C060000 		.4byte	.LASF24
 2642 011e 01       		.byte	0x1
 2643 011f 160A     		.2byte	0xa16
 2644 0121 77000000 		.4byte	0x77
 2645 0125 00       		.byte	0
 2646 0126 0B       		.uleb128 0xb
 2647 0127 EF010000 		.4byte	.LASF25
 2648 012b 01       		.byte	0x1
 2649 012c 8608     		.2byte	0x886
 2650 012e 01       		.byte	0x1
 2651 012f 0B       		.uleb128 0xb
 2652 0130 24010000 		.4byte	.LASF26
 2653 0134 01       		.byte	0x1
 2654 0135 A00A     		.2byte	0xaa0
 2655 0137 01       		.byte	0x1
 2656 0138 0C       		.uleb128 0xc
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 107


 2657 0139 6A020000 		.4byte	.LASF106
 2658 013d 01       		.byte	0x1
 2659 013e 310B     		.2byte	0xb31
 2660 0140 83000000 		.4byte	0x83
 2661 0144 01       		.byte	0x1
 2662 0145 0D       		.uleb128 0xd
 2663 0146 C3060000 		.4byte	.LASF107
 2664 014a 01       		.byte	0x1
 2665 014b 860B     		.2byte	0xb86
 2666 014d 01       		.byte	0x1
 2667 014e 5D010000 		.4byte	0x15d
 2668 0152 0E       		.uleb128 0xe
 2669 0153 6900     		.ascii	"i\000"
 2670 0155 01       		.byte	0x1
 2671 0156 880B     		.2byte	0xb88
 2672 0158 83000000 		.4byte	0x83
 2673 015c 00       		.byte	0
 2674 015d 0B       		.uleb128 0xb
 2675 015e 8D020000 		.4byte	.LASF27
 2676 0162 01       		.byte	0x1
 2677 0163 3E0B     		.2byte	0xb3e
 2678 0165 01       		.byte	0x1
 2679 0166 09       		.uleb128 0x9
 2680 0167 B0060000 		.4byte	.LASF28
 2681 016b 01       		.byte	0x1
 2682 016c C10A     		.2byte	0xac1
 2683 016e 01       		.byte	0x1
 2684 016f 80010000 		.4byte	0x180
 2685 0173 0A       		.uleb128 0xa
 2686 0174 56020000 		.4byte	.LASF29
 2687 0178 01       		.byte	0x1
 2688 0179 C10A     		.2byte	0xac1
 2689 017b 83000000 		.4byte	0x83
 2690 017f 00       		.byte	0
 2691 0180 0F       		.uleb128 0xf
 2692 0181 5B030000 		.4byte	.LASF108
 2693 0185 01       		.byte	0x1
 2694 0186 E708     		.2byte	0x8e7
 2695 0188 C6000000 		.4byte	0xc6
 2696 018c 01       		.byte	0x1
 2697 018d C2010000 		.4byte	0x1c2
 2698 0191 0A       		.uleb128 0xa
 2699 0192 36030000 		.4byte	.LASF30
 2700 0196 01       		.byte	0x1
 2701 0197 E708     		.2byte	0x8e7
 2702 0199 6B000000 		.4byte	0x6b
 2703 019d 0A       		.uleb128 0xa
 2704 019e CB030000 		.4byte	.LASF31
 2705 01a2 01       		.byte	0x1
 2706 01a3 E708     		.2byte	0x8e7
 2707 01a5 C6000000 		.4byte	0xc6
 2708 01a9 10       		.uleb128 0x10
 2709 01aa 53000000 		.4byte	.LASF32
 2710 01ae 01       		.byte	0x1
 2711 01af E908     		.2byte	0x8e9
 2712 01b1 C6000000 		.4byte	0xc6
 2713 01b5 10       		.uleb128 0x10
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 108


 2714 01b6 00000000 		.4byte	.LASF33
 2715 01ba 01       		.byte	0x1
 2716 01bb EA08     		.2byte	0x8ea
 2717 01bd C2010000 		.4byte	0x1c2
 2718 01c1 00       		.byte	0
 2719 01c2 06       		.uleb128 0x6
 2720 01c3 04       		.byte	0x4
 2721 01c4 C6000000 		.4byte	0xc6
 2722 01c8 09       		.uleb128 0x9
 2723 01c9 48020000 		.4byte	.LASF34
 2724 01cd 01       		.byte	0x1
 2725 01ce 610A     		.2byte	0xa61
 2726 01d0 01       		.byte	0x1
 2727 01d1 E0010000 		.4byte	0x1e0
 2728 01d5 0E       		.uleb128 0xe
 2729 01d6 6900     		.ascii	"i\000"
 2730 01d8 01       		.byte	0x1
 2731 01d9 630A     		.2byte	0xa63
 2732 01db 83000000 		.4byte	0x83
 2733 01df 00       		.byte	0
 2734 01e0 0B       		.uleb128 0xb
 2735 01e1 9E050000 		.4byte	.LASF35
 2736 01e5 01       		.byte	0x1
 2737 01e6 7F0A     		.2byte	0xa7f
 2738 01e8 01       		.byte	0x1
 2739 01e9 11       		.uleb128 0x11
 2740 01ea 45010000 		.4byte	0x145
 2741 01ee 00000000 		.4byte	.LFB43
 2742 01f2 28000000 		.4byte	.LFE43-.LFB43
 2743 01f6 01       		.uleb128 0x1
 2744 01f7 9C       		.byte	0x9c
 2745 01f8 21020000 		.4byte	0x221
 2746 01fc 12       		.uleb128 0x12
 2747 01fd 52010000 		.4byte	0x152
 2748 0201 13       		.uleb128 0x13
 2749 0202 38010000 		.4byte	0x138
 2750 0206 00000000 		.4byte	.LBB56
 2751 020a 00000000 		.4byte	.Ldebug_ranges0+0
 2752 020e 01       		.byte	0x1
 2753 020f 8B0B     		.2byte	0xb8b
 2754 0211 14       		.uleb128 0x14
 2755 0212 10000000 		.4byte	.LBB60
 2756 0216 18000000 		.4byte	.LBE60-.LBB60
 2757 021a 12       		.uleb128 0x12
 2758 021b 52010000 		.4byte	0x152
 2759 021f 00       		.byte	0
 2760 0220 00       		.byte	0
 2761 0221 15       		.uleb128 0x15
 2762 0222 5B060000 		.4byte	.LASF36
 2763 0226 01       		.byte	0x1
 2764 0227 6B       		.byte	0x6b
 2765 0228 00000000 		.4byte	.LFB0
 2766 022c 14000000 		.4byte	.LFE0-.LFB0
 2767 0230 01       		.uleb128 0x1
 2768 0231 9C       		.byte	0x9c
 2769 0232 15       		.uleb128 0x15
 2770 0233 C9020000 		.4byte	.LASF37
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 109


 2771 0237 01       		.byte	0x1
 2772 0238 8B       		.byte	0x8b
 2773 0239 00000000 		.4byte	.LFB1
 2774 023d 10000000 		.4byte	.LFE1-.LFB1
 2775 0241 01       		.uleb128 0x1
 2776 0242 9C       		.byte	0x9c
 2777 0243 16       		.uleb128 0x16
 2778 0244 27000000 		.4byte	.LASF40
 2779 0248 01       		.byte	0x1
 2780 0249 AD01     		.2byte	0x1ad
 2781 024b 00000000 		.4byte	.LFB2
 2782 024f 20000000 		.4byte	.LFE2-.LFB2
 2783 0253 01       		.uleb128 0x1
 2784 0254 9C       		.byte	0x9c
 2785 0255 9C020000 		.4byte	0x29c
 2786 0259 17       		.uleb128 0x17
 2787 025a 7B050000 		.4byte	.LASF42
 2788 025e 01       		.byte	0x1
 2789 025f AD01     		.2byte	0x1ad
 2790 0261 83000000 		.4byte	0x83
 2791 0265 00000000 		.4byte	.LLST0
 2792 0269 18       		.uleb128 0x18
 2793 026a 76010000 		.4byte	.LASF38
 2794 026e 01       		.byte	0x1
 2795 026f AF01     		.2byte	0x1af
 2796 0271 6B000000 		.4byte	0x6b
 2797 0275 2C000000 		.4byte	.LLST1
 2798 0279 18       		.uleb128 0x18
 2799 027a A9060000 		.4byte	.LASF39
 2800 027e 01       		.byte	0x1
 2801 027f B001     		.2byte	0x1b0
 2802 0281 83000000 		.4byte	0x83
 2803 0285 3F000000 		.4byte	.LLST2
 2804 0289 19       		.uleb128 0x19
 2805 028a 08000000 		.4byte	.LVL2
 2806 028e ED0C0000 		.4byte	0xced
 2807 0292 19       		.uleb128 0x19
 2808 0293 1A000000 		.4byte	.LVL5
 2809 0297 F80C0000 		.4byte	0xcf8
 2810 029b 00       		.byte	0
 2811 029c 16       		.uleb128 0x16
 2812 029d 6D030000 		.4byte	.LASF41
 2813 02a1 01       		.byte	0x1
 2814 02a2 D901     		.2byte	0x1d9
 2815 02a4 00000000 		.4byte	.LFB3
 2816 02a8 38000000 		.4byte	.LFE3-.LFB3
 2817 02ac 01       		.uleb128 0x1
 2818 02ad 9C       		.byte	0x9c
 2819 02ae C1020000 		.4byte	0x2c1
 2820 02b2 1A       		.uleb128 0x1a
 2821 02b3 D3030000 		.4byte	.LASF43
 2822 02b7 01       		.byte	0x1
 2823 02b8 D901     		.2byte	0x1d9
 2824 02ba 83000000 		.4byte	0x83
 2825 02be 01       		.uleb128 0x1
 2826 02bf 50       		.byte	0x50
 2827 02c0 00       		.byte	0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 110


 2828 02c1 1B       		.uleb128 0x1b
 2829 02c2 12020000 		.4byte	.LASF57
 2830 02c6 01       		.byte	0x1
 2831 02c7 FE01     		.2byte	0x1fe
 2832 02c9 83000000 		.4byte	0x83
 2833 02cd 00000000 		.4byte	.LFB4
 2834 02d1 18000000 		.4byte	.LFE4-.LFB4
 2835 02d5 01       		.uleb128 0x1
 2836 02d6 9C       		.byte	0x9c
 2837 02d7 0E030000 		.4byte	0x30e
 2838 02db 18       		.uleb128 0x18
 2839 02dc 76010000 		.4byte	.LASF38
 2840 02e0 01       		.byte	0x1
 2841 02e1 0002     		.2byte	0x200
 2842 02e3 6B000000 		.4byte	0x6b
 2843 02e7 5D000000 		.4byte	.LLST3
 2844 02eb 18       		.uleb128 0x18
 2845 02ec E2030000 		.4byte	.LASF44
 2846 02f0 01       		.byte	0x1
 2847 02f1 0102     		.2byte	0x201
 2848 02f3 83000000 		.4byte	0x83
 2849 02f7 70000000 		.4byte	.LLST4
 2850 02fb 19       		.uleb128 0x19
 2851 02fc 06000000 		.4byte	.LVL8
 2852 0300 ED0C0000 		.4byte	0xced
 2853 0304 19       		.uleb128 0x19
 2854 0305 0E000000 		.4byte	.LVL10
 2855 0309 F80C0000 		.4byte	0xcf8
 2856 030d 00       		.byte	0
 2857 030e 16       		.uleb128 0x16
 2858 030f AE050000 		.4byte	.LASF45
 2859 0313 01       		.byte	0x1
 2860 0314 3502     		.2byte	0x235
 2861 0316 00000000 		.4byte	.LFB5
 2862 031a 2C000000 		.4byte	.LFE5-.LFB5
 2863 031e 01       		.uleb128 0x1
 2864 031f 9C       		.byte	0x9c
 2865 0320 57030000 		.4byte	0x357
 2866 0324 17       		.uleb128 0x17
 2867 0325 53060000 		.4byte	.LASF46
 2868 0329 01       		.byte	0x1
 2869 032a 3502     		.2byte	0x235
 2870 032c 83000000 		.4byte	0x83
 2871 0330 92000000 		.4byte	.LLST5
 2872 0334 18       		.uleb128 0x18
 2873 0335 76010000 		.4byte	.LASF38
 2874 0339 01       		.byte	0x1
 2875 033a 3702     		.2byte	0x237
 2876 033c 6B000000 		.4byte	0x6b
 2877 0340 BE000000 		.4byte	.LLST6
 2878 0344 19       		.uleb128 0x19
 2879 0345 08000000 		.4byte	.LVL13
 2880 0349 ED0C0000 		.4byte	0xced
 2881 034d 19       		.uleb128 0x19
 2882 034e 22000000 		.4byte	.LVL15
 2883 0352 F80C0000 		.4byte	0xcf8
 2884 0356 00       		.byte	0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 111


 2885 0357 16       		.uleb128 0x16
 2886 0358 46030000 		.4byte	.LASF47
 2887 035c 01       		.byte	0x1
 2888 035d 6F02     		.2byte	0x26f
 2889 035f 00000000 		.4byte	.LFB6
 2890 0363 8C010000 		.4byte	.LFE6-.LFB6
 2891 0367 01       		.uleb128 0x1
 2892 0368 9C       		.byte	0x9c
 2893 0369 7E040000 		.4byte	0x47e
 2894 036d 17       		.uleb128 0x17
 2895 036e 65010000 		.4byte	.LASF48
 2896 0372 01       		.byte	0x1
 2897 0373 6F02     		.2byte	0x26f
 2898 0375 83000000 		.4byte	0x83
 2899 0379 D1000000 		.4byte	.LLST7
 2900 037d 18       		.uleb128 0x18
 2901 037e 0F000000 		.4byte	.LASF49
 2902 0382 01       		.byte	0x1
 2903 0383 7502     		.2byte	0x275
 2904 0385 6B000000 		.4byte	0x6b
 2905 0389 5A010000 		.4byte	.LLST8
 2906 038d 18       		.uleb128 0x18
 2907 038e DA030000 		.4byte	.LASF50
 2908 0392 01       		.byte	0x1
 2909 0393 7602     		.2byte	0x276
 2910 0395 6B000000 		.4byte	0x6b
 2911 0399 99010000 		.4byte	.LLST9
 2912 039d 18       		.uleb128 0x18
 2913 039e 6C060000 		.4byte	.LASF51
 2914 03a2 01       		.byte	0x1
 2915 03a3 7702     		.2byte	0x277
 2916 03a5 6B000000 		.4byte	0x6b
 2917 03a9 D8010000 		.4byte	.LLST10
 2918 03ad 18       		.uleb128 0x18
 2919 03ae 6F000000 		.4byte	.LASF52
 2920 03b2 01       		.byte	0x1
 2921 03b3 7802     		.2byte	0x278
 2922 03b5 6B000000 		.4byte	0x6b
 2923 03b9 0C020000 		.4byte	.LLST11
 2924 03bd 18       		.uleb128 0x18
 2925 03be ED050000 		.4byte	.LASF53
 2926 03c2 01       		.byte	0x1
 2927 03c3 7902     		.2byte	0x279
 2928 03c5 6B000000 		.4byte	0x6b
 2929 03c9 2B020000 		.4byte	.LLST12
 2930 03cd 18       		.uleb128 0x18
 2931 03ce 76010000 		.4byte	.LASF38
 2932 03d2 01       		.byte	0x1
 2933 03d3 8402     		.2byte	0x284
 2934 03d5 6B000000 		.4byte	0x6b
 2935 03d9 6B020000 		.4byte	.LLST13
 2936 03dd 1C       		.uleb128 0x1c
 2937 03de 0C010000 		.4byte	0x10c
 2938 03e2 72000000 		.4byte	.LBB61
 2939 03e6 18000000 		.4byte	.Ldebug_ranges0+0x18
 2940 03ea 01       		.byte	0x1
 2941 03eb 1803     		.2byte	0x318
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 112


 2942 03ed 0D040000 		.4byte	0x40d
 2943 03f1 1D       		.uleb128 0x1d
 2944 03f2 19010000 		.4byte	0x119
 2945 03f6 89020000 		.4byte	.LLST14
 2946 03fa 19       		.uleb128 0x19
 2947 03fb 7E000000 		.4byte	.LVL30
 2948 03ff 030D0000 		.4byte	0xd03
 2949 0403 19       		.uleb128 0x19
 2950 0404 0C010000 		.4byte	.LVL52
 2951 0408 030D0000 		.4byte	0xd03
 2952 040c 00       		.byte	0
 2953 040d 1E       		.uleb128 0x1e
 2954 040e F2000000 		.4byte	0xf2
 2955 0412 92000000 		.4byte	.LBB64
 2956 0416 02000000 		.4byte	.LBE64-.LBB64
 2957 041a 01       		.byte	0x1
 2958 041b 2403     		.2byte	0x324
 2959 041d 2B040000 		.4byte	0x42b
 2960 0421 1D       		.uleb128 0x1d
 2961 0422 FF000000 		.4byte	0xff
 2962 0426 A9020000 		.4byte	.LLST15
 2963 042a 00       		.byte	0
 2964 042b 19       		.uleb128 0x19
 2965 042c 12000000 		.4byte	.LVL17
 2966 0430 ED0C0000 		.4byte	0xced
 2967 0434 1F       		.uleb128 0x1f
 2968 0435 58000000 		.4byte	.LVL24
 2969 0439 030D0000 		.4byte	0xd03
 2970 043d 47040000 		.4byte	0x447
 2971 0441 20       		.uleb128 0x20
 2972 0442 01       		.uleb128 0x1
 2973 0443 50       		.byte	0x50
 2974 0444 01       		.uleb128 0x1
 2975 0445 35       		.byte	0x35
 2976 0446 00       		.byte	0
 2977 0447 1F       		.uleb128 0x1f
 2978 0448 90000000 		.4byte	.LVL32
 2979 044c 030D0000 		.4byte	0xd03
 2980 0450 5A040000 		.4byte	0x45a
 2981 0454 20       		.uleb128 0x20
 2982 0455 01       		.uleb128 0x1
 2983 0456 50       		.byte	0x50
 2984 0457 01       		.uleb128 0x1
 2985 0458 35       		.byte	0x35
 2986 0459 00       		.byte	0
 2987 045a 1F       		.uleb128 0x1f
 2988 045b 9A000000 		.4byte	.LVL35
 2989 045f F80C0000 		.4byte	0xcf8
 2990 0463 6E040000 		.4byte	0x46e
 2991 0467 20       		.uleb128 0x20
 2992 0468 01       		.uleb128 0x1
 2993 0469 50       		.byte	0x50
 2994 046a 02       		.uleb128 0x2
 2995 046b 77       		.byte	0x77
 2996 046c 00       		.sleb128 0
 2997 046d 00       		.byte	0
 2998 046e 21       		.uleb128 0x21
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 113


 2999 046f E6000000 		.4byte	.LVL46
 3000 0473 030D0000 		.4byte	0xd03
 3001 0477 20       		.uleb128 0x20
 3002 0478 01       		.uleb128 0x1
 3003 0479 50       		.byte	0x50
 3004 047a 01       		.uleb128 0x1
 3005 047b 35       		.byte	0x35
 3006 047c 00       		.byte	0
 3007 047d 00       		.byte	0
 3008 047e 16       		.uleb128 0x16
 3009 047f 56040000 		.4byte	.LASF54
 3010 0483 01       		.byte	0x1
 3011 0484 4608     		.2byte	0x846
 3012 0486 00000000 		.4byte	.LFB7
 3013 048a 50000000 		.4byte	.LFE7-.LFB7
 3014 048e 01       		.uleb128 0x1
 3015 048f 9C       		.byte	0x9c
 3016 0490 DC040000 		.4byte	0x4dc
 3017 0494 17       		.uleb128 0x17
 3018 0495 A6040000 		.4byte	.LASF55
 3019 0499 01       		.byte	0x1
 3020 049a 4608     		.2byte	0x846
 3021 049c 83000000 		.4byte	0x83
 3022 04a0 BD020000 		.4byte	.LLST16
 3023 04a4 1E       		.uleb128 0x1e
 3024 04a5 0C010000 		.4byte	0x10c
 3025 04a9 24000000 		.4byte	.LBB67
 3026 04ad 0E000000 		.4byte	.LBE67-.LBB67
 3027 04b1 01       		.byte	0x1
 3028 04b2 5308     		.2byte	0x853
 3029 04b4 CB040000 		.4byte	0x4cb
 3030 04b8 1D       		.uleb128 0x1d
 3031 04b9 19010000 		.4byte	0x119
 3032 04bd DE020000 		.4byte	.LLST17
 3033 04c1 19       		.uleb128 0x19
 3034 04c2 32000000 		.4byte	.LVL62
 3035 04c6 030D0000 		.4byte	0xd03
 3036 04ca 00       		.byte	0
 3037 04cb 22       		.uleb128 0x22
 3038 04cc 26010000 		.4byte	0x126
 3039 04d0 32000000 		.4byte	.LBB69
 3040 04d4 04000000 		.4byte	.LBE69-.LBB69
 3041 04d8 01       		.byte	0x1
 3042 04d9 5608     		.2byte	0x856
 3043 04db 00       		.byte	0
 3044 04dc 23       		.uleb128 0x23
 3045 04dd 26060000 		.4byte	.LASF56
 3046 04e1 01       		.byte	0x1
 3047 04e2 6408     		.2byte	0x864
 3048 04e4 00000000 		.4byte	.LFB8
 3049 04e8 20000000 		.4byte	.LFE8-.LFB8
 3050 04ec 01       		.uleb128 0x1
 3051 04ed 9C       		.byte	0x9c
 3052 04ee 24       		.uleb128 0x24
 3053 04ef AE020000 		.4byte	.LASF83
 3054 04f3 01       		.byte	0x1
 3055 04f4 7608     		.2byte	0x876
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 114


 3056 04f6 83000000 		.4byte	0x83
 3057 04fa 00000000 		.4byte	.LFB9
 3058 04fe 10000000 		.4byte	.LFE9-.LFB9
 3059 0502 01       		.uleb128 0x1
 3060 0503 9C       		.byte	0x9c
 3061 0504 25       		.uleb128 0x25
 3062 0505 26010000 		.4byte	0x126
 3063 0509 00000000 		.4byte	.LFB10
 3064 050d 0C000000 		.4byte	.LFE10-.LFB10
 3065 0511 01       		.uleb128 0x1
 3066 0512 9C       		.byte	0x9c
 3067 0513 1B       		.uleb128 0x1b
 3068 0514 00030000 		.4byte	.LASF58
 3069 0518 01       		.byte	0x1
 3070 0519 A008     		.2byte	0x8a0
 3071 051b 83000000 		.4byte	0x83
 3072 051f 00000000 		.4byte	.LFB11
 3073 0523 14000000 		.4byte	.LFE11-.LFB11
 3074 0527 01       		.uleb128 0x1
 3075 0528 9C       		.byte	0x9c
 3076 0529 4E050000 		.4byte	0x54e
 3077 052d 17       		.uleb128 0x17
 3078 052e 85050000 		.4byte	.LASF23
 3079 0532 01       		.byte	0x1
 3080 0533 A008     		.2byte	0x8a0
 3081 0535 83000000 		.4byte	0x83
 3082 0539 F4020000 		.4byte	.LLST18
 3083 053d 18       		.uleb128 0x18
 3084 053e 97030000 		.4byte	.LASF59
 3085 0542 01       		.byte	0x1
 3086 0543 A208     		.2byte	0x8a2
 3087 0545 83000000 		.4byte	0x83
 3088 0549 12030000 		.4byte	.LLST19
 3089 054d 00       		.byte	0
 3090 054e 1B       		.uleb128 0x1b
 3091 054f 61000000 		.4byte	.LASF60
 3092 0553 01       		.byte	0x1
 3093 0554 B708     		.2byte	0x8b7
 3094 0556 83000000 		.4byte	0x83
 3095 055a 00000000 		.4byte	.LFB12
 3096 055e 10000000 		.4byte	.LFE12-.LFB12
 3097 0562 01       		.uleb128 0x1
 3098 0563 9C       		.byte	0x9c
 3099 0564 77050000 		.4byte	0x577
 3100 0568 26       		.uleb128 0x26
 3101 0569 1E000000 		.4byte	.LASF61
 3102 056d 01       		.byte	0x1
 3103 056e B908     		.2byte	0x8b9
 3104 0570 83000000 		.4byte	0x83
 3105 0574 01       		.uleb128 0x1
 3106 0575 50       		.byte	0x50
 3107 0576 00       		.byte	0
 3108 0577 16       		.uleb128 0x16
 3109 0578 07010000 		.4byte	.LASF62
 3110 057c 01       		.byte	0x1
 3111 057d CE08     		.2byte	0x8ce
 3112 057f 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 115


 3113 0583 0C000000 		.4byte	.LFE13-.LFB13
 3114 0587 01       		.uleb128 0x1
 3115 0588 9C       		.byte	0x9c
 3116 0589 9C050000 		.4byte	0x59c
 3117 058d 1A       		.uleb128 0x1a
 3118 058e 0D020000 		.4byte	.LASF63
 3119 0592 01       		.byte	0x1
 3120 0593 CE08     		.2byte	0x8ce
 3121 0595 83000000 		.4byte	0x83
 3122 0599 01       		.uleb128 0x1
 3123 059a 50       		.byte	0x50
 3124 059b 00       		.byte	0
 3125 059c 27       		.uleb128 0x27
 3126 059d 80010000 		.4byte	0x180
 3127 05a1 00000000 		.4byte	.LFB14
 3128 05a5 14000000 		.4byte	.LFE14-.LFB14
 3129 05a9 01       		.uleb128 0x1
 3130 05aa 9C       		.byte	0x9c
 3131 05ab EA050000 		.4byte	0x5ea
 3132 05af 1D       		.uleb128 0x1d
 3133 05b0 91010000 		.4byte	0x191
 3134 05b4 34030000 		.4byte	.LLST20
 3135 05b8 28       		.uleb128 0x28
 3136 05b9 9D010000 		.4byte	0x19d
 3137 05bd 01       		.uleb128 0x1
 3138 05be 51       		.byte	0x51
 3139 05bf 29       		.uleb128 0x29
 3140 05c0 A9010000 		.4byte	0x1a9
 3141 05c4 01       		.uleb128 0x1
 3142 05c5 50       		.byte	0x50
 3143 05c6 2A       		.uleb128 0x2a
 3144 05c7 B5010000 		.4byte	0x1b5
 3145 05cb 00000020 		.4byte	0x20000000
 3146 05cf 2B       		.uleb128 0x2b
 3147 05d0 F2000000 		.4byte	0xf2
 3148 05d4 04000000 		.4byte	.LBB71
 3149 05d8 02000000 		.4byte	.LBE71-.LBB71
 3150 05dc 01       		.byte	0x1
 3151 05dd EC08     		.2byte	0x8ec
 3152 05df 1D       		.uleb128 0x1d
 3153 05e0 FF000000 		.4byte	0xff
 3154 05e4 55030000 		.4byte	.LLST21
 3155 05e8 00       		.byte	0
 3156 05e9 00       		.byte	0
 3157 05ea 1B       		.uleb128 0x1b
 3158 05eb 69050000 		.4byte	.LASF64
 3159 05ef 01       		.byte	0x1
 3160 05f0 0909     		.2byte	0x909
 3161 05f2 C6000000 		.4byte	0xc6
 3162 05f6 00000000 		.4byte	.LFB15
 3163 05fa 14000000 		.4byte	.LFE15-.LFB15
 3164 05fe 01       		.uleb128 0x1
 3165 05ff 9C       		.byte	0x9c
 3166 0600 3F060000 		.4byte	0x63f
 3167 0604 17       		.uleb128 0x17
 3168 0605 36030000 		.4byte	.LASF30
 3169 0609 01       		.byte	0x1
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 116


 3170 060a 0909     		.2byte	0x909
 3171 060c 6B000000 		.4byte	0x6b
 3172 0610 69030000 		.4byte	.LLST22
 3173 0614 2C       		.uleb128 0x2c
 3174 0615 00000000 		.4byte	.LASF33
 3175 0619 01       		.byte	0x1
 3176 061a 0B09     		.2byte	0x90b
 3177 061c C2010000 		.4byte	0x1c2
 3178 0620 00000020 		.4byte	0x20000000
 3179 0624 2B       		.uleb128 0x2b
 3180 0625 F2000000 		.4byte	0xf2
 3181 0629 04000000 		.4byte	.LBB73
 3182 062d 02000000 		.4byte	.LBE73-.LBB73
 3183 0631 01       		.byte	0x1
 3184 0632 0D09     		.2byte	0x90d
 3185 0634 1D       		.uleb128 0x1d
 3186 0635 FF000000 		.4byte	0xff
 3187 0639 8A030000 		.4byte	.LLST23
 3188 063d 00       		.byte	0
 3189 063e 00       		.byte	0
 3190 063f 1B       		.uleb128 0x1b
 3191 0640 27030000 		.4byte	.LASF65
 3192 0644 01       		.byte	0x1
 3193 0645 1F09     		.2byte	0x91f
 3194 0647 C6000000 		.4byte	0xc6
 3195 064b 00000000 		.4byte	.LFB16
 3196 064f 18000000 		.4byte	.LFE16-.LFB16
 3197 0653 01       		.uleb128 0x1
 3198 0654 9C       		.byte	0x9c
 3199 0655 B0060000 		.4byte	0x6b0
 3200 0659 17       		.uleb128 0x17
 3201 065a 36030000 		.4byte	.LASF30
 3202 065e 01       		.byte	0x1
 3203 065f 1F09     		.2byte	0x91f
 3204 0661 6B000000 		.4byte	0x6b
 3205 0665 9E030000 		.4byte	.LLST24
 3206 0669 1A       		.uleb128 0x1a
 3207 066a CB030000 		.4byte	.LASF31
 3208 066e 01       		.byte	0x1
 3209 066f 1F09     		.2byte	0x91f
 3210 0671 C6000000 		.4byte	0xc6
 3211 0675 01       		.uleb128 0x1
 3212 0676 51       		.byte	0x51
 3213 0677 26       		.uleb128 0x26
 3214 0678 53000000 		.4byte	.LASF32
 3215 067c 01       		.byte	0x1
 3216 067d 2109     		.2byte	0x921
 3217 067f C6000000 		.4byte	0xc6
 3218 0683 01       		.uleb128 0x1
 3219 0684 50       		.byte	0x50
 3220 0685 2C       		.uleb128 0x2c
 3221 0686 00000000 		.4byte	.LASF33
 3222 068a 01       		.byte	0x1
 3223 068b 2209     		.2byte	0x922
 3224 068d C2010000 		.4byte	0x1c2
 3225 0691 00000020 		.4byte	0x20000000
 3226 0695 2B       		.uleb128 0x2b
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 117


 3227 0696 F2000000 		.4byte	0xf2
 3228 069a 04000000 		.4byte	.LBB75
 3229 069e 02000000 		.4byte	.LBE75-.LBB75
 3230 06a2 01       		.byte	0x1
 3231 06a3 2409     		.2byte	0x924
 3232 06a5 1D       		.uleb128 0x1d
 3233 06a6 FF000000 		.4byte	0xff
 3234 06aa BF030000 		.4byte	.LLST25
 3235 06ae 00       		.byte	0
 3236 06af 00       		.byte	0
 3237 06b0 1B       		.uleb128 0x1b
 3238 06b1 77040000 		.4byte	.LASF66
 3239 06b5 01       		.byte	0x1
 3240 06b6 3B09     		.2byte	0x93b
 3241 06b8 C6000000 		.4byte	0xc6
 3242 06bc 00000000 		.4byte	.LFB17
 3243 06c0 18000000 		.4byte	.LFE17-.LFB17
 3244 06c4 01       		.uleb128 0x1
 3245 06c5 9C       		.byte	0x9c
 3246 06c6 05070000 		.4byte	0x705
 3247 06ca 17       		.uleb128 0x17
 3248 06cb 36030000 		.4byte	.LASF30
 3249 06cf 01       		.byte	0x1
 3250 06d0 3B09     		.2byte	0x93b
 3251 06d2 6B000000 		.4byte	0x6b
 3252 06d6 D3030000 		.4byte	.LLST26
 3253 06da 2C       		.uleb128 0x2c
 3254 06db 00000000 		.4byte	.LASF33
 3255 06df 01       		.byte	0x1
 3256 06e0 3D09     		.2byte	0x93d
 3257 06e2 C2010000 		.4byte	0x1c2
 3258 06e6 00000020 		.4byte	0x20000000
 3259 06ea 2B       		.uleb128 0x2b
 3260 06eb F2000000 		.4byte	0xf2
 3261 06ef 04000000 		.4byte	.LBB77
 3262 06f3 02000000 		.4byte	.LBE77-.LBB77
 3263 06f7 01       		.byte	0x1
 3264 06f8 3F09     		.2byte	0x93f
 3265 06fa 1D       		.uleb128 0x1d
 3266 06fb FF000000 		.4byte	0xff
 3267 06ff F4030000 		.4byte	.LLST27
 3268 0703 00       		.byte	0
 3269 0704 00       		.byte	0
 3270 0705 16       		.uleb128 0x16
 3271 0706 29040000 		.4byte	.LASF67
 3272 070a 01       		.byte	0x1
 3273 070b 4E09     		.2byte	0x94e
 3274 070d 00000000 		.4byte	.LFB18
 3275 0711 44000000 		.4byte	.LFE18-.LFB18
 3276 0715 01       		.uleb128 0x1
 3277 0716 9C       		.byte	0x9c
 3278 0717 BA070000 		.4byte	0x7ba
 3279 071b 17       		.uleb128 0x17
 3280 071c 36030000 		.4byte	.LASF30
 3281 0720 01       		.byte	0x1
 3282 0721 4E09     		.2byte	0x94e
 3283 0723 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 118


 3284 0727 08040000 		.4byte	.LLST28
 3285 072b 17       		.uleb128 0x17
 3286 072c 3D030000 		.4byte	.LASF68
 3287 0730 01       		.byte	0x1
 3288 0731 4E09     		.2byte	0x94e
 3289 0733 6B000000 		.4byte	0x6b
 3290 0737 29040000 		.4byte	.LLST29
 3291 073b 18       		.uleb128 0x18
 3292 073c 76010000 		.4byte	.LASF38
 3293 0740 01       		.byte	0x1
 3294 0741 5009     		.2byte	0x950
 3295 0743 6B000000 		.4byte	0x6b
 3296 0747 4A040000 		.4byte	.LLST30
 3297 074b 18       		.uleb128 0x18
 3298 074c E9010000 		.4byte	.LASF69
 3299 0750 01       		.byte	0x1
 3300 0751 5109     		.2byte	0x951
 3301 0753 83000000 		.4byte	0x83
 3302 0757 5D040000 		.4byte	.LLST31
 3303 075b 18       		.uleb128 0x18
 3304 075c 56020000 		.4byte	.LASF29
 3305 0760 01       		.byte	0x1
 3306 0761 5209     		.2byte	0x952
 3307 0763 83000000 		.4byte	0x83
 3308 0767 70040000 		.4byte	.LLST32
 3309 076b 1E       		.uleb128 0x1e
 3310 076c F2000000 		.4byte	0xf2
 3311 0770 0A000000 		.4byte	.LBB79
 3312 0774 02000000 		.4byte	.LBE79-.LBB79
 3313 0778 01       		.byte	0x1
 3314 0779 5409     		.2byte	0x954
 3315 077b 89070000 		.4byte	0x789
 3316 077f 1D       		.uleb128 0x1d
 3317 0780 FF000000 		.4byte	0xff
 3318 0784 8E040000 		.4byte	.LLST33
 3319 0788 00       		.byte	0
 3320 0789 1E       		.uleb128 0x1e
 3321 078a F2000000 		.4byte	0xf2
 3322 078e 10000000 		.4byte	.LBB81
 3323 0792 02000000 		.4byte	.LBE81-.LBB81
 3324 0796 01       		.byte	0x1
 3325 0797 5509     		.2byte	0x955
 3326 0799 A7070000 		.4byte	0x7a7
 3327 079d 1D       		.uleb128 0x1d
 3328 079e FF000000 		.4byte	0xff
 3329 07a2 A2040000 		.4byte	.LLST34
 3330 07a6 00       		.byte	0
 3331 07a7 19       		.uleb128 0x19
 3332 07a8 18000000 		.4byte	.LVL93
 3333 07ac ED0C0000 		.4byte	0xced
 3334 07b0 19       		.uleb128 0x19
 3335 07b1 3E000000 		.4byte	.LVL97
 3336 07b5 F80C0000 		.4byte	0xcf8
 3337 07b9 00       		.byte	0
 3338 07ba 1B       		.uleb128 0x1b
 3339 07bb 2A020000 		.4byte	.LASF70
 3340 07bf 01       		.byte	0x1
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 119


 3341 07c0 7009     		.2byte	0x970
 3342 07c2 6B000000 		.4byte	0x6b
 3343 07c6 00000000 		.4byte	.LFB19
 3344 07ca 28000000 		.4byte	.LFE19-.LFB19
 3345 07ce 01       		.uleb128 0x1
 3346 07cf 9C       		.byte	0x9c
 3347 07d0 0F080000 		.4byte	0x80f
 3348 07d4 17       		.uleb128 0x17
 3349 07d5 36030000 		.4byte	.LASF30
 3350 07d9 01       		.byte	0x1
 3351 07da 7009     		.2byte	0x970
 3352 07dc 6B000000 		.4byte	0x6b
 3353 07e0 B6040000 		.4byte	.LLST35
 3354 07e4 18       		.uleb128 0x18
 3355 07e5 3D030000 		.4byte	.LASF68
 3356 07e9 01       		.byte	0x1
 3357 07ea 7209     		.2byte	0x972
 3358 07ec 6B000000 		.4byte	0x6b
 3359 07f0 D7040000 		.4byte	.LLST36
 3360 07f4 2B       		.uleb128 0x2b
 3361 07f5 F2000000 		.4byte	0xf2
 3362 07f9 04000000 		.4byte	.LBB83
 3363 07fd 02000000 		.4byte	.LBE83-.LBB83
 3364 0801 01       		.byte	0x1
 3365 0802 7409     		.2byte	0x974
 3366 0804 1D       		.uleb128 0x1d
 3367 0805 FF000000 		.4byte	0xff
 3368 0809 F8040000 		.4byte	.LLST37
 3369 080d 00       		.byte	0
 3370 080e 00       		.byte	0
 3371 080f 16       		.uleb128 0x16
 3372 0810 5D050000 		.4byte	.LASF71
 3373 0814 01       		.byte	0x1
 3374 0815 8509     		.2byte	0x985
 3375 0817 00000000 		.4byte	.LFB20
 3376 081b 14000000 		.4byte	.LFE20-.LFB20
 3377 081f 01       		.uleb128 0x1
 3378 0820 9C       		.byte	0x9c
 3379 0821 36080000 		.4byte	0x836
 3380 0825 17       		.uleb128 0x17
 3381 0826 36030000 		.4byte	.LASF30
 3382 082a 01       		.byte	0x1
 3383 082b 8509     		.2byte	0x985
 3384 082d 6B000000 		.4byte	0x6b
 3385 0831 0C050000 		.4byte	.LLST38
 3386 0835 00       		.byte	0
 3387 0836 1B       		.uleb128 0x1b
 3388 0837 3D010000 		.4byte	.LASF72
 3389 083b 01       		.byte	0x1
 3390 083c 9709     		.2byte	0x997
 3391 083e 6B000000 		.4byte	0x6b
 3392 0842 00000000 		.4byte	.LFB21
 3393 0846 18000000 		.4byte	.LFE21-.LFB21
 3394 084a 01       		.uleb128 0x1
 3395 084b 9C       		.byte	0x9c
 3396 084c 61080000 		.4byte	0x861
 3397 0850 17       		.uleb128 0x17
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 120


 3398 0851 36030000 		.4byte	.LASF30
 3399 0855 01       		.byte	0x1
 3400 0856 9709     		.2byte	0x997
 3401 0858 6B000000 		.4byte	0x6b
 3402 085c 2D050000 		.4byte	.LLST39
 3403 0860 00       		.byte	0
 3404 0861 16       		.uleb128 0x16
 3405 0862 A1010000 		.4byte	.LASF73
 3406 0866 01       		.byte	0x1
 3407 0867 A709     		.2byte	0x9a7
 3408 0869 00000000 		.4byte	.LFB22
 3409 086d 14000000 		.4byte	.LFE22-.LFB22
 3410 0871 01       		.uleb128 0x1
 3411 0872 9C       		.byte	0x9c
 3412 0873 88080000 		.4byte	0x888
 3413 0877 17       		.uleb128 0x17
 3414 0878 36030000 		.4byte	.LASF30
 3415 087c 01       		.byte	0x1
 3416 087d A709     		.2byte	0x9a7
 3417 087f 6B000000 		.4byte	0x6b
 3418 0883 4E050000 		.4byte	.LLST40
 3419 0887 00       		.byte	0
 3420 0888 16       		.uleb128 0x16
 3421 0889 F0020000 		.4byte	.LASF74
 3422 088d 01       		.byte	0x1
 3423 088e B509     		.2byte	0x9b5
 3424 0890 00000000 		.4byte	.LFB23
 3425 0894 14000000 		.4byte	.LFE23-.LFB23
 3426 0898 01       		.uleb128 0x1
 3427 0899 9C       		.byte	0x9c
 3428 089a AF080000 		.4byte	0x8af
 3429 089e 17       		.uleb128 0x17
 3430 089f 36030000 		.4byte	.LASF30
 3431 08a3 01       		.byte	0x1
 3432 08a4 B509     		.2byte	0x9b5
 3433 08a6 6B000000 		.4byte	0x6b
 3434 08aa 6F050000 		.4byte	.LLST41
 3435 08ae 00       		.byte	0
 3436 08af 16       		.uleb128 0x16
 3437 08b0 AD030000 		.4byte	.LASF75
 3438 08b4 01       		.byte	0x1
 3439 08b5 C409     		.2byte	0x9c4
 3440 08b7 00000000 		.4byte	.LFB24
 3441 08bb 14000000 		.4byte	.LFE24-.LFB24
 3442 08bf 01       		.uleb128 0x1
 3443 08c0 9C       		.byte	0x9c
 3444 08c1 D6080000 		.4byte	0x8d6
 3445 08c5 17       		.uleb128 0x17
 3446 08c6 36030000 		.4byte	.LASF30
 3447 08ca 01       		.byte	0x1
 3448 08cb C409     		.2byte	0x9c4
 3449 08cd 6B000000 		.4byte	0x6b
 3450 08d1 90050000 		.4byte	.LLST42
 3451 08d5 00       		.byte	0
 3452 08d6 27       		.uleb128 0x27
 3453 08d7 F2000000 		.4byte	0xf2
 3454 08db 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 121


 3455 08df 04000000 		.4byte	.LFE25-.LFB25
 3456 08e3 01       		.uleb128 0x1
 3457 08e4 9C       		.byte	0x9c
 3458 08e5 F1080000 		.4byte	0x8f1
 3459 08e9 28       		.uleb128 0x28
 3460 08ea FF000000 		.4byte	0xff
 3461 08ee 01       		.uleb128 0x1
 3462 08ef 50       		.byte	0x50
 3463 08f0 00       		.byte	0
 3464 08f1 23       		.uleb128 0x23
 3465 08f2 14010000 		.4byte	.LASF76
 3466 08f6 01       		.byte	0x1
 3467 08f7 EB09     		.2byte	0x9eb
 3468 08f9 00000000 		.4byte	.LFB26
 3469 08fd 18000000 		.4byte	.LFE26-.LFB26
 3470 0901 01       		.uleb128 0x1
 3471 0902 9C       		.byte	0x9c
 3472 0903 16       		.uleb128 0x16
 3473 0904 04060000 		.4byte	.LASF77
 3474 0908 01       		.byte	0x1
 3475 0909 FF09     		.2byte	0x9ff
 3476 090b 00000000 		.4byte	.LFB27
 3477 090f 48000000 		.4byte	.LFE27-.LFB27
 3478 0913 01       		.uleb128 0x1
 3479 0914 9C       		.byte	0x9c
 3480 0915 3C090000 		.4byte	0x93c
 3481 0919 17       		.uleb128 0x17
 3482 091a 86040000 		.4byte	.LASF78
 3483 091e 01       		.byte	0x1
 3484 091f FF09     		.2byte	0x9ff
 3485 0921 83000000 		.4byte	0x83
 3486 0925 B1050000 		.4byte	.LLST43
 3487 0929 19       		.uleb128 0x19
 3488 092a 16000000 		.4byte	.LVL118
 3489 092e 030D0000 		.4byte	0xd03
 3490 0932 19       		.uleb128 0x19
 3491 0933 34000000 		.4byte	.LVL121
 3492 0937 030D0000 		.4byte	0xd03
 3493 093b 00       		.byte	0
 3494 093c 27       		.uleb128 0x27
 3495 093d 0C010000 		.4byte	0x10c
 3496 0941 00000000 		.4byte	.LFB28
 3497 0945 14000000 		.4byte	.LFE28-.LFB28
 3498 0949 01       		.uleb128 0x1
 3499 094a 9C       		.byte	0x9c
 3500 094b 62090000 		.4byte	0x962
 3501 094f 1D       		.uleb128 0x1d
 3502 0950 19010000 		.4byte	0x119
 3503 0954 DA050000 		.4byte	.LLST44
 3504 0958 19       		.uleb128 0x19
 3505 0959 0C000000 		.4byte	.LVL125
 3506 095d 030D0000 		.4byte	0xd03
 3507 0961 00       		.byte	0
 3508 0962 2D       		.uleb128 0x2d
 3509 0963 6A010000 		.4byte	.LASF79
 3510 0967 01       		.byte	0x1
 3511 0968 240A     		.2byte	0xa24
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 122


 3512 096a 00000000 		.4byte	.LFB29
 3513 096e 54000000 		.4byte	.LFE29-.LFB29
 3514 0972 01       		.uleb128 0x1
 3515 0973 9C       		.byte	0x9c
 3516 0974 89090000 		.4byte	0x989
 3517 0978 17       		.uleb128 0x17
 3518 0979 65010000 		.4byte	.LASF48
 3519 097d 01       		.byte	0x1
 3520 097e 240A     		.2byte	0xa24
 3521 0980 83000000 		.4byte	0x83
 3522 0984 FB050000 		.4byte	.LLST45
 3523 0988 00       		.byte	0
 3524 0989 2D       		.uleb128 0x2d
 3525 098a 88030000 		.4byte	.LASF80
 3526 098e 01       		.byte	0x1
 3527 098f 440A     		.2byte	0xa44
 3528 0991 00000000 		.4byte	.LFB30
 3529 0995 64000000 		.4byte	.LFE30-.LFB30
 3530 0999 01       		.uleb128 0x1
 3531 099a 9C       		.byte	0x9c
 3532 099b 560A0000 		.4byte	0xa56
 3533 099f 1E       		.uleb128 0x1e
 3534 09a0 C8010000 		.4byte	0x1c8
 3535 09a4 0A000000 		.4byte	.LBB85
 3536 09a8 24000000 		.4byte	.LBE85-.LBB85
 3537 09ac 01       		.byte	0x1
 3538 09ad 480A     		.2byte	0xa48
 3539 09af 340A0000 		.4byte	0xa34
 3540 09b3 14       		.uleb128 0x14
 3541 09b4 0A000000 		.4byte	.LBB86
 3542 09b8 24000000 		.4byte	.LBE86-.LBB86
 3543 09bc 2E       		.uleb128 0x2e
 3544 09bd D5010000 		.4byte	0x1d5
 3545 09c1 3D060000 		.4byte	.LLST46
 3546 09c5 1C       		.uleb128 0x1c
 3547 09c6 80010000 		.4byte	0x180
 3548 09ca 0C000000 		.4byte	.LBB87
 3549 09ce 30000000 		.4byte	.Ldebug_ranges0+0x30
 3550 09d2 01       		.byte	0x1
 3551 09d3 6A0A     		.2byte	0xa6a
 3552 09d5 040A0000 		.4byte	0xa04
 3553 09d9 1D       		.uleb128 0x1d
 3554 09da 9D010000 		.4byte	0x19d
 3555 09de 8D060000 		.4byte	.LLST47
 3556 09e2 1D       		.uleb128 0x1d
 3557 09e3 91010000 		.4byte	0x191
 3558 09e7 A5060000 		.4byte	.LLST48
 3559 09eb 2F       		.uleb128 0x2f
 3560 09ec 30000000 		.4byte	.Ldebug_ranges0+0x30
 3561 09f0 2E       		.uleb128 0x2e
 3562 09f1 A9010000 		.4byte	0x1a9
 3563 09f5 B9060000 		.4byte	.LLST49
 3564 09f9 2E       		.uleb128 0x2e
 3565 09fa B5010000 		.4byte	0x1b5
 3566 09fe CD060000 		.4byte	.LLST50
 3567 0a02 00       		.byte	0
 3568 0a03 00       		.byte	0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 123


 3569 0a04 1E       		.uleb128 0x1e
 3570 0a05 66010000 		.4byte	0x166
 3571 0a09 26000000 		.4byte	.LBB91
 3572 0a0d 04000000 		.4byte	.LBE91-.LBB91
 3573 0a11 01       		.byte	0x1
 3574 0a12 700A     		.2byte	0xa70
 3575 0a14 220A0000 		.4byte	0xa22
 3576 0a18 1D       		.uleb128 0x1d
 3577 0a19 73010000 		.4byte	0x173
 3578 0a1d E3060000 		.4byte	.LLST51
 3579 0a21 00       		.byte	0
 3580 0a22 22       		.uleb128 0x22
 3581 0a23 5D010000 		.4byte	0x15d
 3582 0a27 2A000000 		.4byte	.LBB93
 3583 0a2b 04000000 		.4byte	.LBE93-.LBB93
 3584 0a2f 01       		.byte	0x1
 3585 0a30 710A     		.2byte	0xa71
 3586 0a32 00       		.byte	0
 3587 0a33 00       		.byte	0
 3588 0a34 30       		.uleb128 0x30
 3589 0a35 E0010000 		.4byte	0x1e0
 3590 0a39 32000000 		.4byte	.LBB95
 3591 0a3d 48000000 		.4byte	.Ldebug_ranges0+0x48
 3592 0a41 01       		.byte	0x1
 3593 0a42 4C0A     		.2byte	0xa4c
 3594 0a44 13       		.uleb128 0x13
 3595 0a45 2F010000 		.4byte	0x12f
 3596 0a49 32000000 		.4byte	.LBB97
 3597 0a4d 60000000 		.4byte	.Ldebug_ranges0+0x60
 3598 0a51 01       		.byte	0x1
 3599 0a52 810A     		.2byte	0xa81
 3600 0a54 00       		.byte	0
 3601 0a55 00       		.byte	0
 3602 0a56 11       		.uleb128 0x11
 3603 0a57 C8010000 		.4byte	0x1c8
 3604 0a5b 00000000 		.4byte	.LFB31
 3605 0a5f 44000000 		.4byte	.LFE31-.LFB31
 3606 0a63 01       		.uleb128 0x1
 3607 0a64 9C       		.byte	0x9c
 3608 0a65 E00A0000 		.4byte	0xae0
 3609 0a69 2E       		.uleb128 0x2e
 3610 0a6a D5010000 		.4byte	0x1d5
 3611 0a6e F6060000 		.4byte	.LLST52
 3612 0a72 1C       		.uleb128 0x1c
 3613 0a73 80010000 		.4byte	0x180
 3614 0a77 08000000 		.4byte	.LBB103
 3615 0a7b 78000000 		.4byte	.Ldebug_ranges0+0x78
 3616 0a7f 01       		.byte	0x1
 3617 0a80 6A0A     		.2byte	0xa6a
 3618 0a82 B10A0000 		.4byte	0xab1
 3619 0a86 1D       		.uleb128 0x1d
 3620 0a87 9D010000 		.4byte	0x19d
 3621 0a8b 3A070000 		.4byte	.LLST53
 3622 0a8f 1D       		.uleb128 0x1d
 3623 0a90 91010000 		.4byte	0x191
 3624 0a94 52070000 		.4byte	.LLST54
 3625 0a98 2F       		.uleb128 0x2f
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 124


 3626 0a99 78000000 		.4byte	.Ldebug_ranges0+0x78
 3627 0a9d 2E       		.uleb128 0x2e
 3628 0a9e A9010000 		.4byte	0x1a9
 3629 0aa2 66070000 		.4byte	.LLST55
 3630 0aa6 2A       		.uleb128 0x2a
 3631 0aa7 B5010000 		.4byte	0x1b5
 3632 0aab 00000020 		.4byte	0x20000000
 3633 0aaf 00       		.byte	0
 3634 0ab0 00       		.byte	0
 3635 0ab1 1E       		.uleb128 0x1e
 3636 0ab2 66010000 		.4byte	0x166
 3637 0ab6 22000000 		.4byte	.LBB109
 3638 0aba 04000000 		.4byte	.LBE109-.LBB109
 3639 0abe 01       		.byte	0x1
 3640 0abf 700A     		.2byte	0xa70
 3641 0ac1 CF0A0000 		.4byte	0xacf
 3642 0ac5 1D       		.uleb128 0x1d
 3643 0ac6 73010000 		.4byte	0x173
 3644 0aca 89070000 		.4byte	.LLST56
 3645 0ace 00       		.byte	0
 3646 0acf 22       		.uleb128 0x22
 3647 0ad0 5D010000 		.4byte	0x15d
 3648 0ad4 26000000 		.4byte	.LBB111
 3649 0ad8 04000000 		.4byte	.LBE111-.LBB111
 3650 0adc 01       		.byte	0x1
 3651 0add 710A     		.2byte	0xa71
 3652 0adf 00       		.byte	0
 3653 0ae0 27       		.uleb128 0x27
 3654 0ae1 E0010000 		.4byte	0x1e0
 3655 0ae5 00000000 		.4byte	.LFB32
 3656 0ae9 18000000 		.4byte	.LFE32-.LFB32
 3657 0aed 01       		.uleb128 0x1
 3658 0aee 9C       		.byte	0x9c
 3659 0aef 040B0000 		.4byte	0xb04
 3660 0af3 13       		.uleb128 0x13
 3661 0af4 2F010000 		.4byte	0x12f
 3662 0af8 00000000 		.4byte	.LBB113
 3663 0afc 98000000 		.4byte	.Ldebug_ranges0+0x98
 3664 0b00 01       		.byte	0x1
 3665 0b01 810A     		.2byte	0xa81
 3666 0b03 00       		.byte	0
 3667 0b04 23       		.uleb128 0x23
 3668 0b05 45060000 		.4byte	.LASF81
 3669 0b09 01       		.byte	0x1
 3670 0b0a 900A     		.2byte	0xa90
 3671 0b0c 00000000 		.4byte	.LFB33
 3672 0b10 10000000 		.4byte	.LFE33-.LFB33
 3673 0b14 01       		.uleb128 0x1
 3674 0b15 9C       		.byte	0x9c
 3675 0b16 25       		.uleb128 0x25
 3676 0b17 2F010000 		.4byte	0x12f
 3677 0b1b 00000000 		.4byte	.LFB34
 3678 0b1f 10000000 		.4byte	.LFE34-.LFB34
 3679 0b23 01       		.uleb128 0x1
 3680 0b24 9C       		.byte	0x9c
 3681 0b25 23       		.uleb128 0x23
 3682 0b26 0C060000 		.4byte	.LASF82
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 125


 3683 0b2a 01       		.byte	0x1
 3684 0b2b B00A     		.2byte	0xab0
 3685 0b2d 00000000 		.4byte	.LFB35
 3686 0b31 10000000 		.4byte	.LFE35-.LFB35
 3687 0b35 01       		.uleb128 0x1
 3688 0b36 9C       		.byte	0x9c
 3689 0b37 27       		.uleb128 0x27
 3690 0b38 66010000 		.4byte	0x166
 3691 0b3c 00000000 		.4byte	.LFB36
 3692 0b40 10000000 		.4byte	.LFE36-.LFB36
 3693 0b44 01       		.uleb128 0x1
 3694 0b45 9C       		.byte	0x9c
 3695 0b46 540B0000 		.4byte	0xb54
 3696 0b4a 1D       		.uleb128 0x1d
 3697 0b4b 73010000 		.4byte	0x173
 3698 0b4f 9C070000 		.4byte	.LLST57
 3699 0b53 00       		.byte	0
 3700 0b54 24       		.uleb128 0x24
 3701 0b55 85010000 		.4byte	.LASF84
 3702 0b59 01       		.byte	0x1
 3703 0b5a D10A     		.2byte	0xad1
 3704 0b5c 83000000 		.4byte	0x83
 3705 0b60 00000000 		.4byte	.LFB37
 3706 0b64 10000000 		.4byte	.LFE37-.LFB37
 3707 0b68 01       		.uleb128 0x1
 3708 0b69 9C       		.byte	0x9c
 3709 0b6a 24       		.uleb128 0x24
 3710 0b6b 09040000 		.4byte	.LASF85
 3711 0b6f 01       		.byte	0x1
 3712 0b70 E10A     		.2byte	0xae1
 3713 0b72 83000000 		.4byte	0x83
 3714 0b76 00000000 		.4byte	.LFB38
 3715 0b7a 10000000 		.4byte	.LFE38-.LFB38
 3716 0b7e 01       		.uleb128 0x1
 3717 0b7f 9C       		.byte	0x9c
 3718 0b80 25       		.uleb128 0x25
 3719 0b81 38010000 		.4byte	0x138
 3720 0b85 00000000 		.4byte	.LFB39
 3721 0b89 10000000 		.4byte	.LFE39-.LFB39
 3722 0b8d 01       		.uleb128 0x1
 3723 0b8e 9C       		.byte	0x9c
 3724 0b8f 25       		.uleb128 0x25
 3725 0b90 5D010000 		.4byte	0x15d
 3726 0b94 00000000 		.4byte	.LFB40
 3727 0b98 0C000000 		.4byte	.LFE40-.LFB40
 3728 0b9c 01       		.uleb128 0x1
 3729 0b9d 9C       		.byte	0x9c
 3730 0b9e 1B       		.uleb128 0x1b
 3731 0b9f C5050000 		.4byte	.LASF86
 3732 0ba3 01       		.byte	0x1
 3733 0ba4 610B     		.2byte	0xb61
 3734 0ba6 E7000000 		.4byte	0xe7
 3735 0baa 00000000 		.4byte	.LFB41
 3736 0bae 10000000 		.4byte	.LFE41-.LFB41
 3737 0bb2 01       		.uleb128 0x1
 3738 0bb3 9C       		.byte	0x9c
 3739 0bb4 E50B0000 		.4byte	0xbe5
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 126


 3740 0bb8 17       		.uleb128 0x17
 3741 0bb9 36030000 		.4byte	.LASF30
 3742 0bbd 01       		.byte	0x1
 3743 0bbe 610B     		.2byte	0xb61
 3744 0bc0 83000000 		.4byte	0x83
 3745 0bc4 BD070000 		.4byte	.LLST58
 3746 0bc8 1A       		.uleb128 0x1a
 3747 0bc9 EF030000 		.4byte	.LASF87
 3748 0bcd 01       		.byte	0x1
 3749 0bce 610B     		.2byte	0xb61
 3750 0bd0 E7000000 		.4byte	0xe7
 3751 0bd4 01       		.uleb128 0x1
 3752 0bd5 51       		.byte	0x51
 3753 0bd6 26       		.uleb128 0x26
 3754 0bd7 5A000000 		.4byte	.LASF88
 3755 0bdb 01       		.byte	0x1
 3756 0bdc 630B     		.2byte	0xb63
 3757 0bde E7000000 		.4byte	0xe7
 3758 0be2 01       		.uleb128 0x1
 3759 0be3 50       		.byte	0x50
 3760 0be4 00       		.byte	0
 3761 0be5 1B       		.uleb128 0x1b
 3762 0be6 AE010000 		.4byte	.LASF89
 3763 0bea 01       		.byte	0x1
 3764 0beb 790B     		.2byte	0xb79
 3765 0bed E7000000 		.4byte	0xe7
 3766 0bf1 00000000 		.4byte	.LFB42
 3767 0bf5 0C000000 		.4byte	.LFE42-.LFB42
 3768 0bf9 01       		.uleb128 0x1
 3769 0bfa 9C       		.byte	0x9c
 3770 0bfb 100C0000 		.4byte	0xc10
 3771 0bff 17       		.uleb128 0x17
 3772 0c00 36030000 		.4byte	.LASF30
 3773 0c04 01       		.byte	0x1
 3774 0c05 790B     		.2byte	0xb79
 3775 0c07 83000000 		.4byte	0x83
 3776 0c0b DE070000 		.4byte	.LLST59
 3777 0c0f 00       		.byte	0
 3778 0c10 16       		.uleb128 0x16
 3779 0c11 5C020000 		.4byte	.LASF90
 3780 0c15 01       		.byte	0x1
 3781 0c16 A60B     		.2byte	0xba6
 3782 0c18 00000000 		.4byte	.LFB44
 3783 0c1c 74000000 		.4byte	.LFE44-.LFB44
 3784 0c20 01       		.uleb128 0x1
 3785 0c21 9C       		.byte	0x9c
 3786 0c22 350C0000 		.4byte	0xc35
 3787 0c26 1A       		.uleb128 0x1a
 3788 0c27 FB050000 		.4byte	.LASF91
 3789 0c2b 01       		.byte	0x1
 3790 0c2c A60B     		.2byte	0xba6
 3791 0c2e 350C0000 		.4byte	0xc35
 3792 0c32 01       		.uleb128 0x1
 3793 0c33 50       		.byte	0x50
 3794 0c34 00       		.byte	0
 3795 0c35 06       		.uleb128 0x6
 3796 0c36 04       		.byte	0x4
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 127


 3797 0c37 83000000 		.4byte	0x83
 3798 0c3b 31       		.uleb128 0x31
 3799 0c3c E7000000 		.4byte	0xe7
 3800 0c40 4B0C0000 		.4byte	0xc4b
 3801 0c44 32       		.uleb128 0x32
 3802 0c45 E0000000 		.4byte	0xe0
 3803 0c49 04       		.byte	0x4
 3804 0c4a 00       		.byte	0
 3805 0c4b 33       		.uleb128 0x33
 3806 0c4c DA050000 		.4byte	.LASF92
 3807 0c50 01       		.byte	0x1
 3808 0c51 22       		.byte	0x22
 3809 0c52 3B0C0000 		.4byte	0xc3b
 3810 0c56 05       		.uleb128 0x5
 3811 0c57 03       		.byte	0x3
 3812 0c58 00000000 		.4byte	CySysTickCallbacks
 3813 0c5c 34       		.uleb128 0x34
 3814 0c5d 1B040000 		.4byte	.LASF93
 3815 0c61 01       		.byte	0x1
 3816 0c62 1B       		.byte	0x1b
 3817 0c63 83000000 		.4byte	0x83
 3818 0c67 05       		.uleb128 0x5
 3819 0c68 03       		.byte	0x3
 3820 0c69 00000000 		.4byte	cydelayFreqHz
 3821 0c6d 34       		.uleb128 0x34
 3822 0c6e C9010000 		.4byte	.LASF94
 3823 0c72 01       		.byte	0x1
 3824 0c73 1C       		.byte	0x1c
 3825 0c74 83000000 		.4byte	0x83
 3826 0c78 05       		.uleb128 0x5
 3827 0c79 03       		.byte	0x3
 3828 0c7a 00000000 		.4byte	cydelayFreqKhz
 3829 0c7e 34       		.uleb128 0x34
 3830 0c7f 36060000 		.4byte	.LASF95
 3831 0c83 01       		.byte	0x1
 3832 0c84 1D       		.byte	0x1d
 3833 0c85 6B000000 		.4byte	0x6b
 3834 0c89 05       		.uleb128 0x5
 3835 0c8a 03       		.byte	0x3
 3836 0c8b 00000000 		.4byte	cydelayFreqMhz
 3837 0c8f 34       		.uleb128 0x34
 3838 0c90 3B020000 		.4byte	.LASF96
 3839 0c94 01       		.byte	0x1
 3840 0c95 1E       		.byte	0x1e
 3841 0c96 83000000 		.4byte	0x83
 3842 0c9a 05       		.uleb128 0x5
 3843 0c9b 03       		.byte	0x3
 3844 0c9c 00000000 		.4byte	cydelay32kMs
 3845 0ca0 34       		.uleb128 0x34
 3846 0ca1 F6000000 		.4byte	.LASF97
 3847 0ca5 01       		.byte	0x1
 3848 0ca6 36       		.byte	0x36
 3849 0ca7 83000000 		.4byte	0x83
 3850 0cab 05       		.uleb128 0x5
 3851 0cac 03       		.byte	0x3
 3852 0cad 00000000 		.4byte	CySysTickInitVar
 3853 0cb1 31       		.uleb128 0x31
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 128


 3854 0cb2 C10C0000 		.4byte	0xcc1
 3855 0cb6 C10C0000 		.4byte	0xcc1
 3856 0cba 32       		.uleb128 0x32
 3857 0cbb E0000000 		.4byte	0xe0
 3858 0cbf 2D       		.byte	0x2d
 3859 0cc0 00       		.byte	0
 3860 0cc1 35       		.uleb128 0x35
 3861 0cc2 6B000000 		.4byte	0x6b
 3862 0cc6 34       		.uleb128 0x34
 3863 0cc7 F8030000 		.4byte	.LASF98
 3864 0ccb 01       		.byte	0x1
 3865 0ccc 3B       		.byte	0x3b
 3866 0ccd D70C0000 		.4byte	0xcd7
 3867 0cd1 05       		.uleb128 0x5
 3868 0cd2 03       		.byte	0x3
 3869 0cd3 00000000 		.4byte	cyImoFreqMhz2Reg
 3870 0cd7 35       		.uleb128 0x35
 3871 0cd8 B10C0000 		.4byte	0xcb1
 3872 0cdc 34       		.uleb128 0x34
 3873 0cdd 40000000 		.4byte	.LASF99
 3874 0ce1 01       		.byte	0x1
 3875 0ce2 5B       		.byte	0x5b
 3876 0ce3 83000000 		.4byte	0x83
 3877 0ce7 05       		.uleb128 0x5
 3878 0ce8 03       		.byte	0x3
 3879 0ce9 00000000 		.4byte	CySysClkPumpConfig
 3880 0ced 36       		.uleb128 0x36
 3881 0cee D9020000 		.4byte	.LASF100
 3882 0cf2 D9020000 		.4byte	.LASF100
 3883 0cf6 03       		.byte	0x3
 3884 0cf7 E5       		.byte	0xe5
 3885 0cf8 36       		.uleb128 0x36
 3886 0cf9 40040000 		.4byte	.LASF101
 3887 0cfd 40040000 		.4byte	.LASF101
 3888 0d01 03       		.byte	0x3
 3889 0d02 E6       		.byte	0xe6
 3890 0d03 36       		.uleb128 0x36
 3891 0d04 93040000 		.4byte	.LASF102
 3892 0d08 93040000 		.4byte	.LASF102
 3893 0d0c 03       		.byte	0x3
 3894 0d0d DC       		.byte	0xdc
 3895 0d0e 00       		.byte	0
 3896              		.section	.debug_abbrev,"",%progbits
 3897              	.Ldebug_abbrev0:
 3898 0000 01       		.uleb128 0x1
 3899 0001 11       		.uleb128 0x11
 3900 0002 01       		.byte	0x1
 3901 0003 25       		.uleb128 0x25
 3902 0004 0E       		.uleb128 0xe
 3903 0005 13       		.uleb128 0x13
 3904 0006 0B       		.uleb128 0xb
 3905 0007 03       		.uleb128 0x3
 3906 0008 0E       		.uleb128 0xe
 3907 0009 1B       		.uleb128 0x1b
 3908 000a 0E       		.uleb128 0xe
 3909 000b 55       		.uleb128 0x55
 3910 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 129


 3911 000d 11       		.uleb128 0x11
 3912 000e 01       		.uleb128 0x1
 3913 000f 10       		.uleb128 0x10
 3914 0010 17       		.uleb128 0x17
 3915 0011 00       		.byte	0
 3916 0012 00       		.byte	0
 3917 0013 02       		.uleb128 0x2
 3918 0014 24       		.uleb128 0x24
 3919 0015 00       		.byte	0
 3920 0016 0B       		.uleb128 0xb
 3921 0017 0B       		.uleb128 0xb
 3922 0018 3E       		.uleb128 0x3e
 3923 0019 0B       		.uleb128 0xb
 3924 001a 03       		.uleb128 0x3
 3925 001b 0E       		.uleb128 0xe
 3926 001c 00       		.byte	0
 3927 001d 00       		.byte	0
 3928 001e 03       		.uleb128 0x3
 3929 001f 24       		.uleb128 0x24
 3930 0020 00       		.byte	0
 3931 0021 0B       		.uleb128 0xb
 3932 0022 0B       		.uleb128 0xb
 3933 0023 3E       		.uleb128 0x3e
 3934 0024 0B       		.uleb128 0xb
 3935 0025 03       		.uleb128 0x3
 3936 0026 08       		.uleb128 0x8
 3937 0027 00       		.byte	0
 3938 0028 00       		.byte	0
 3939 0029 04       		.uleb128 0x4
 3940 002a 16       		.uleb128 0x16
 3941 002b 00       		.byte	0
 3942 002c 03       		.uleb128 0x3
 3943 002d 0E       		.uleb128 0xe
 3944 002e 3A       		.uleb128 0x3a
 3945 002f 0B       		.uleb128 0xb
 3946 0030 3B       		.uleb128 0x3b
 3947 0031 05       		.uleb128 0x5
 3948 0032 49       		.uleb128 0x49
 3949 0033 13       		.uleb128 0x13
 3950 0034 00       		.byte	0
 3951 0035 00       		.byte	0
 3952 0036 05       		.uleb128 0x5
 3953 0037 35       		.uleb128 0x35
 3954 0038 00       		.byte	0
 3955 0039 49       		.uleb128 0x49
 3956 003a 13       		.uleb128 0x13
 3957 003b 00       		.byte	0
 3958 003c 00       		.byte	0
 3959 003d 06       		.uleb128 0x6
 3960 003e 0F       		.uleb128 0xf
 3961 003f 00       		.byte	0
 3962 0040 0B       		.uleb128 0xb
 3963 0041 0B       		.uleb128 0xb
 3964 0042 49       		.uleb128 0x49
 3965 0043 13       		.uleb128 0x13
 3966 0044 00       		.byte	0
 3967 0045 00       		.byte	0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 130


 3968 0046 07       		.uleb128 0x7
 3969 0047 15       		.uleb128 0x15
 3970 0048 00       		.byte	0
 3971 0049 27       		.uleb128 0x27
 3972 004a 19       		.uleb128 0x19
 3973 004b 00       		.byte	0
 3974 004c 00       		.byte	0
 3975 004d 08       		.uleb128 0x8
 3976 004e 16       		.uleb128 0x16
 3977 004f 00       		.byte	0
 3978 0050 03       		.uleb128 0x3
 3979 0051 0E       		.uleb128 0xe
 3980 0052 3A       		.uleb128 0x3a
 3981 0053 0B       		.uleb128 0xb
 3982 0054 3B       		.uleb128 0x3b
 3983 0055 0B       		.uleb128 0xb
 3984 0056 49       		.uleb128 0x49
 3985 0057 13       		.uleb128 0x13
 3986 0058 00       		.byte	0
 3987 0059 00       		.byte	0
 3988 005a 09       		.uleb128 0x9
 3989 005b 2E       		.uleb128 0x2e
 3990 005c 01       		.byte	0x1
 3991 005d 3F       		.uleb128 0x3f
 3992 005e 19       		.uleb128 0x19
 3993 005f 03       		.uleb128 0x3
 3994 0060 0E       		.uleb128 0xe
 3995 0061 3A       		.uleb128 0x3a
 3996 0062 0B       		.uleb128 0xb
 3997 0063 3B       		.uleb128 0x3b
 3998 0064 05       		.uleb128 0x5
 3999 0065 27       		.uleb128 0x27
 4000 0066 19       		.uleb128 0x19
 4001 0067 20       		.uleb128 0x20
 4002 0068 0B       		.uleb128 0xb
 4003 0069 01       		.uleb128 0x1
 4004 006a 13       		.uleb128 0x13
 4005 006b 00       		.byte	0
 4006 006c 00       		.byte	0
 4007 006d 0A       		.uleb128 0xa
 4008 006e 05       		.uleb128 0x5
 4009 006f 00       		.byte	0
 4010 0070 03       		.uleb128 0x3
 4011 0071 0E       		.uleb128 0xe
 4012 0072 3A       		.uleb128 0x3a
 4013 0073 0B       		.uleb128 0xb
 4014 0074 3B       		.uleb128 0x3b
 4015 0075 05       		.uleb128 0x5
 4016 0076 49       		.uleb128 0x49
 4017 0077 13       		.uleb128 0x13
 4018 0078 00       		.byte	0
 4019 0079 00       		.byte	0
 4020 007a 0B       		.uleb128 0xb
 4021 007b 2E       		.uleb128 0x2e
 4022 007c 00       		.byte	0
 4023 007d 3F       		.uleb128 0x3f
 4024 007e 19       		.uleb128 0x19
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 131


 4025 007f 03       		.uleb128 0x3
 4026 0080 0E       		.uleb128 0xe
 4027 0081 3A       		.uleb128 0x3a
 4028 0082 0B       		.uleb128 0xb
 4029 0083 3B       		.uleb128 0x3b
 4030 0084 05       		.uleb128 0x5
 4031 0085 27       		.uleb128 0x27
 4032 0086 19       		.uleb128 0x19
 4033 0087 20       		.uleb128 0x20
 4034 0088 0B       		.uleb128 0xb
 4035 0089 00       		.byte	0
 4036 008a 00       		.byte	0
 4037 008b 0C       		.uleb128 0xc
 4038 008c 2E       		.uleb128 0x2e
 4039 008d 00       		.byte	0
 4040 008e 3F       		.uleb128 0x3f
 4041 008f 19       		.uleb128 0x19
 4042 0090 03       		.uleb128 0x3
 4043 0091 0E       		.uleb128 0xe
 4044 0092 3A       		.uleb128 0x3a
 4045 0093 0B       		.uleb128 0xb
 4046 0094 3B       		.uleb128 0x3b
 4047 0095 05       		.uleb128 0x5
 4048 0096 27       		.uleb128 0x27
 4049 0097 19       		.uleb128 0x19
 4050 0098 49       		.uleb128 0x49
 4051 0099 13       		.uleb128 0x13
 4052 009a 20       		.uleb128 0x20
 4053 009b 0B       		.uleb128 0xb
 4054 009c 00       		.byte	0
 4055 009d 00       		.byte	0
 4056 009e 0D       		.uleb128 0xd
 4057 009f 2E       		.uleb128 0x2e
 4058 00a0 01       		.byte	0x1
 4059 00a1 03       		.uleb128 0x3
 4060 00a2 0E       		.uleb128 0xe
 4061 00a3 3A       		.uleb128 0x3a
 4062 00a4 0B       		.uleb128 0xb
 4063 00a5 3B       		.uleb128 0x3b
 4064 00a6 05       		.uleb128 0x5
 4065 00a7 27       		.uleb128 0x27
 4066 00a8 19       		.uleb128 0x19
 4067 00a9 20       		.uleb128 0x20
 4068 00aa 0B       		.uleb128 0xb
 4069 00ab 01       		.uleb128 0x1
 4070 00ac 13       		.uleb128 0x13
 4071 00ad 00       		.byte	0
 4072 00ae 00       		.byte	0
 4073 00af 0E       		.uleb128 0xe
 4074 00b0 34       		.uleb128 0x34
 4075 00b1 00       		.byte	0
 4076 00b2 03       		.uleb128 0x3
 4077 00b3 08       		.uleb128 0x8
 4078 00b4 3A       		.uleb128 0x3a
 4079 00b5 0B       		.uleb128 0xb
 4080 00b6 3B       		.uleb128 0x3b
 4081 00b7 05       		.uleb128 0x5
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 132


 4082 00b8 49       		.uleb128 0x49
 4083 00b9 13       		.uleb128 0x13
 4084 00ba 00       		.byte	0
 4085 00bb 00       		.byte	0
 4086 00bc 0F       		.uleb128 0xf
 4087 00bd 2E       		.uleb128 0x2e
 4088 00be 01       		.byte	0x1
 4089 00bf 3F       		.uleb128 0x3f
 4090 00c0 19       		.uleb128 0x19
 4091 00c1 03       		.uleb128 0x3
 4092 00c2 0E       		.uleb128 0xe
 4093 00c3 3A       		.uleb128 0x3a
 4094 00c4 0B       		.uleb128 0xb
 4095 00c5 3B       		.uleb128 0x3b
 4096 00c6 05       		.uleb128 0x5
 4097 00c7 27       		.uleb128 0x27
 4098 00c8 19       		.uleb128 0x19
 4099 00c9 49       		.uleb128 0x49
 4100 00ca 13       		.uleb128 0x13
 4101 00cb 20       		.uleb128 0x20
 4102 00cc 0B       		.uleb128 0xb
 4103 00cd 01       		.uleb128 0x1
 4104 00ce 13       		.uleb128 0x13
 4105 00cf 00       		.byte	0
 4106 00d0 00       		.byte	0
 4107 00d1 10       		.uleb128 0x10
 4108 00d2 34       		.uleb128 0x34
 4109 00d3 00       		.byte	0
 4110 00d4 03       		.uleb128 0x3
 4111 00d5 0E       		.uleb128 0xe
 4112 00d6 3A       		.uleb128 0x3a
 4113 00d7 0B       		.uleb128 0xb
 4114 00d8 3B       		.uleb128 0x3b
 4115 00d9 05       		.uleb128 0x5
 4116 00da 49       		.uleb128 0x49
 4117 00db 13       		.uleb128 0x13
 4118 00dc 00       		.byte	0
 4119 00dd 00       		.byte	0
 4120 00de 11       		.uleb128 0x11
 4121 00df 2E       		.uleb128 0x2e
 4122 00e0 01       		.byte	0x1
 4123 00e1 31       		.uleb128 0x31
 4124 00e2 13       		.uleb128 0x13
 4125 00e3 11       		.uleb128 0x11
 4126 00e4 01       		.uleb128 0x1
 4127 00e5 12       		.uleb128 0x12
 4128 00e6 06       		.uleb128 0x6
 4129 00e7 40       		.uleb128 0x40
 4130 00e8 18       		.uleb128 0x18
 4131 00e9 9642     		.uleb128 0x2116
 4132 00eb 19       		.uleb128 0x19
 4133 00ec 01       		.uleb128 0x1
 4134 00ed 13       		.uleb128 0x13
 4135 00ee 00       		.byte	0
 4136 00ef 00       		.byte	0
 4137 00f0 12       		.uleb128 0x12
 4138 00f1 34       		.uleb128 0x34
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 133


 4139 00f2 00       		.byte	0
 4140 00f3 31       		.uleb128 0x31
 4141 00f4 13       		.uleb128 0x13
 4142 00f5 00       		.byte	0
 4143 00f6 00       		.byte	0
 4144 00f7 13       		.uleb128 0x13
 4145 00f8 1D       		.uleb128 0x1d
 4146 00f9 00       		.byte	0
 4147 00fa 31       		.uleb128 0x31
 4148 00fb 13       		.uleb128 0x13
 4149 00fc 52       		.uleb128 0x52
 4150 00fd 01       		.uleb128 0x1
 4151 00fe 55       		.uleb128 0x55
 4152 00ff 17       		.uleb128 0x17
 4153 0100 58       		.uleb128 0x58
 4154 0101 0B       		.uleb128 0xb
 4155 0102 59       		.uleb128 0x59
 4156 0103 05       		.uleb128 0x5
 4157 0104 00       		.byte	0
 4158 0105 00       		.byte	0
 4159 0106 14       		.uleb128 0x14
 4160 0107 0B       		.uleb128 0xb
 4161 0108 01       		.byte	0x1
 4162 0109 11       		.uleb128 0x11
 4163 010a 01       		.uleb128 0x1
 4164 010b 12       		.uleb128 0x12
 4165 010c 06       		.uleb128 0x6
 4166 010d 00       		.byte	0
 4167 010e 00       		.byte	0
 4168 010f 15       		.uleb128 0x15
 4169 0110 2E       		.uleb128 0x2e
 4170 0111 00       		.byte	0
 4171 0112 3F       		.uleb128 0x3f
 4172 0113 19       		.uleb128 0x19
 4173 0114 03       		.uleb128 0x3
 4174 0115 0E       		.uleb128 0xe
 4175 0116 3A       		.uleb128 0x3a
 4176 0117 0B       		.uleb128 0xb
 4177 0118 3B       		.uleb128 0x3b
 4178 0119 0B       		.uleb128 0xb
 4179 011a 27       		.uleb128 0x27
 4180 011b 19       		.uleb128 0x19
 4181 011c 11       		.uleb128 0x11
 4182 011d 01       		.uleb128 0x1
 4183 011e 12       		.uleb128 0x12
 4184 011f 06       		.uleb128 0x6
 4185 0120 40       		.uleb128 0x40
 4186 0121 18       		.uleb128 0x18
 4187 0122 9742     		.uleb128 0x2117
 4188 0124 19       		.uleb128 0x19
 4189 0125 00       		.byte	0
 4190 0126 00       		.byte	0
 4191 0127 16       		.uleb128 0x16
 4192 0128 2E       		.uleb128 0x2e
 4193 0129 01       		.byte	0x1
 4194 012a 3F       		.uleb128 0x3f
 4195 012b 19       		.uleb128 0x19
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 134


 4196 012c 03       		.uleb128 0x3
 4197 012d 0E       		.uleb128 0xe
 4198 012e 3A       		.uleb128 0x3a
 4199 012f 0B       		.uleb128 0xb
 4200 0130 3B       		.uleb128 0x3b
 4201 0131 05       		.uleb128 0x5
 4202 0132 27       		.uleb128 0x27
 4203 0133 19       		.uleb128 0x19
 4204 0134 11       		.uleb128 0x11
 4205 0135 01       		.uleb128 0x1
 4206 0136 12       		.uleb128 0x12
 4207 0137 06       		.uleb128 0x6
 4208 0138 40       		.uleb128 0x40
 4209 0139 18       		.uleb128 0x18
 4210 013a 9742     		.uleb128 0x2117
 4211 013c 19       		.uleb128 0x19
 4212 013d 01       		.uleb128 0x1
 4213 013e 13       		.uleb128 0x13
 4214 013f 00       		.byte	0
 4215 0140 00       		.byte	0
 4216 0141 17       		.uleb128 0x17
 4217 0142 05       		.uleb128 0x5
 4218 0143 00       		.byte	0
 4219 0144 03       		.uleb128 0x3
 4220 0145 0E       		.uleb128 0xe
 4221 0146 3A       		.uleb128 0x3a
 4222 0147 0B       		.uleb128 0xb
 4223 0148 3B       		.uleb128 0x3b
 4224 0149 05       		.uleb128 0x5
 4225 014a 49       		.uleb128 0x49
 4226 014b 13       		.uleb128 0x13
 4227 014c 02       		.uleb128 0x2
 4228 014d 17       		.uleb128 0x17
 4229 014e 00       		.byte	0
 4230 014f 00       		.byte	0
 4231 0150 18       		.uleb128 0x18
 4232 0151 34       		.uleb128 0x34
 4233 0152 00       		.byte	0
 4234 0153 03       		.uleb128 0x3
 4235 0154 0E       		.uleb128 0xe
 4236 0155 3A       		.uleb128 0x3a
 4237 0156 0B       		.uleb128 0xb
 4238 0157 3B       		.uleb128 0x3b
 4239 0158 05       		.uleb128 0x5
 4240 0159 49       		.uleb128 0x49
 4241 015a 13       		.uleb128 0x13
 4242 015b 02       		.uleb128 0x2
 4243 015c 17       		.uleb128 0x17
 4244 015d 00       		.byte	0
 4245 015e 00       		.byte	0
 4246 015f 19       		.uleb128 0x19
 4247 0160 898201   		.uleb128 0x4109
 4248 0163 00       		.byte	0
 4249 0164 11       		.uleb128 0x11
 4250 0165 01       		.uleb128 0x1
 4251 0166 31       		.uleb128 0x31
 4252 0167 13       		.uleb128 0x13
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 135


 4253 0168 00       		.byte	0
 4254 0169 00       		.byte	0
 4255 016a 1A       		.uleb128 0x1a
 4256 016b 05       		.uleb128 0x5
 4257 016c 00       		.byte	0
 4258 016d 03       		.uleb128 0x3
 4259 016e 0E       		.uleb128 0xe
 4260 016f 3A       		.uleb128 0x3a
 4261 0170 0B       		.uleb128 0xb
 4262 0171 3B       		.uleb128 0x3b
 4263 0172 05       		.uleb128 0x5
 4264 0173 49       		.uleb128 0x49
 4265 0174 13       		.uleb128 0x13
 4266 0175 02       		.uleb128 0x2
 4267 0176 18       		.uleb128 0x18
 4268 0177 00       		.byte	0
 4269 0178 00       		.byte	0
 4270 0179 1B       		.uleb128 0x1b
 4271 017a 2E       		.uleb128 0x2e
 4272 017b 01       		.byte	0x1
 4273 017c 3F       		.uleb128 0x3f
 4274 017d 19       		.uleb128 0x19
 4275 017e 03       		.uleb128 0x3
 4276 017f 0E       		.uleb128 0xe
 4277 0180 3A       		.uleb128 0x3a
 4278 0181 0B       		.uleb128 0xb
 4279 0182 3B       		.uleb128 0x3b
 4280 0183 05       		.uleb128 0x5
 4281 0184 27       		.uleb128 0x27
 4282 0185 19       		.uleb128 0x19
 4283 0186 49       		.uleb128 0x49
 4284 0187 13       		.uleb128 0x13
 4285 0188 11       		.uleb128 0x11
 4286 0189 01       		.uleb128 0x1
 4287 018a 12       		.uleb128 0x12
 4288 018b 06       		.uleb128 0x6
 4289 018c 40       		.uleb128 0x40
 4290 018d 18       		.uleb128 0x18
 4291 018e 9742     		.uleb128 0x2117
 4292 0190 19       		.uleb128 0x19
 4293 0191 01       		.uleb128 0x1
 4294 0192 13       		.uleb128 0x13
 4295 0193 00       		.byte	0
 4296 0194 00       		.byte	0
 4297 0195 1C       		.uleb128 0x1c
 4298 0196 1D       		.uleb128 0x1d
 4299 0197 01       		.byte	0x1
 4300 0198 31       		.uleb128 0x31
 4301 0199 13       		.uleb128 0x13
 4302 019a 52       		.uleb128 0x52
 4303 019b 01       		.uleb128 0x1
 4304 019c 55       		.uleb128 0x55
 4305 019d 17       		.uleb128 0x17
 4306 019e 58       		.uleb128 0x58
 4307 019f 0B       		.uleb128 0xb
 4308 01a0 59       		.uleb128 0x59
 4309 01a1 05       		.uleb128 0x5
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 136


 4310 01a2 01       		.uleb128 0x1
 4311 01a3 13       		.uleb128 0x13
 4312 01a4 00       		.byte	0
 4313 01a5 00       		.byte	0
 4314 01a6 1D       		.uleb128 0x1d
 4315 01a7 05       		.uleb128 0x5
 4316 01a8 00       		.byte	0
 4317 01a9 31       		.uleb128 0x31
 4318 01aa 13       		.uleb128 0x13
 4319 01ab 02       		.uleb128 0x2
 4320 01ac 17       		.uleb128 0x17
 4321 01ad 00       		.byte	0
 4322 01ae 00       		.byte	0
 4323 01af 1E       		.uleb128 0x1e
 4324 01b0 1D       		.uleb128 0x1d
 4325 01b1 01       		.byte	0x1
 4326 01b2 31       		.uleb128 0x31
 4327 01b3 13       		.uleb128 0x13
 4328 01b4 11       		.uleb128 0x11
 4329 01b5 01       		.uleb128 0x1
 4330 01b6 12       		.uleb128 0x12
 4331 01b7 06       		.uleb128 0x6
 4332 01b8 58       		.uleb128 0x58
 4333 01b9 0B       		.uleb128 0xb
 4334 01ba 59       		.uleb128 0x59
 4335 01bb 05       		.uleb128 0x5
 4336 01bc 01       		.uleb128 0x1
 4337 01bd 13       		.uleb128 0x13
 4338 01be 00       		.byte	0
 4339 01bf 00       		.byte	0
 4340 01c0 1F       		.uleb128 0x1f
 4341 01c1 898201   		.uleb128 0x4109
 4342 01c4 01       		.byte	0x1
 4343 01c5 11       		.uleb128 0x11
 4344 01c6 01       		.uleb128 0x1
 4345 01c7 31       		.uleb128 0x31
 4346 01c8 13       		.uleb128 0x13
 4347 01c9 01       		.uleb128 0x1
 4348 01ca 13       		.uleb128 0x13
 4349 01cb 00       		.byte	0
 4350 01cc 00       		.byte	0
 4351 01cd 20       		.uleb128 0x20
 4352 01ce 8A8201   		.uleb128 0x410a
 4353 01d1 00       		.byte	0
 4354 01d2 02       		.uleb128 0x2
 4355 01d3 18       		.uleb128 0x18
 4356 01d4 9142     		.uleb128 0x2111
 4357 01d6 18       		.uleb128 0x18
 4358 01d7 00       		.byte	0
 4359 01d8 00       		.byte	0
 4360 01d9 21       		.uleb128 0x21
 4361 01da 898201   		.uleb128 0x4109
 4362 01dd 01       		.byte	0x1
 4363 01de 11       		.uleb128 0x11
 4364 01df 01       		.uleb128 0x1
 4365 01e0 31       		.uleb128 0x31
 4366 01e1 13       		.uleb128 0x13
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 137


 4367 01e2 00       		.byte	0
 4368 01e3 00       		.byte	0
 4369 01e4 22       		.uleb128 0x22
 4370 01e5 1D       		.uleb128 0x1d
 4371 01e6 00       		.byte	0
 4372 01e7 31       		.uleb128 0x31
 4373 01e8 13       		.uleb128 0x13
 4374 01e9 11       		.uleb128 0x11
 4375 01ea 01       		.uleb128 0x1
 4376 01eb 12       		.uleb128 0x12
 4377 01ec 06       		.uleb128 0x6
 4378 01ed 58       		.uleb128 0x58
 4379 01ee 0B       		.uleb128 0xb
 4380 01ef 59       		.uleb128 0x59
 4381 01f0 05       		.uleb128 0x5
 4382 01f1 00       		.byte	0
 4383 01f2 00       		.byte	0
 4384 01f3 23       		.uleb128 0x23
 4385 01f4 2E       		.uleb128 0x2e
 4386 01f5 00       		.byte	0
 4387 01f6 3F       		.uleb128 0x3f
 4388 01f7 19       		.uleb128 0x19
 4389 01f8 03       		.uleb128 0x3
 4390 01f9 0E       		.uleb128 0xe
 4391 01fa 3A       		.uleb128 0x3a
 4392 01fb 0B       		.uleb128 0xb
 4393 01fc 3B       		.uleb128 0x3b
 4394 01fd 05       		.uleb128 0x5
 4395 01fe 27       		.uleb128 0x27
 4396 01ff 19       		.uleb128 0x19
 4397 0200 11       		.uleb128 0x11
 4398 0201 01       		.uleb128 0x1
 4399 0202 12       		.uleb128 0x12
 4400 0203 06       		.uleb128 0x6
 4401 0204 40       		.uleb128 0x40
 4402 0205 18       		.uleb128 0x18
 4403 0206 9742     		.uleb128 0x2117
 4404 0208 19       		.uleb128 0x19
 4405 0209 00       		.byte	0
 4406 020a 00       		.byte	0
 4407 020b 24       		.uleb128 0x24
 4408 020c 2E       		.uleb128 0x2e
 4409 020d 00       		.byte	0
 4410 020e 3F       		.uleb128 0x3f
 4411 020f 19       		.uleb128 0x19
 4412 0210 03       		.uleb128 0x3
 4413 0211 0E       		.uleb128 0xe
 4414 0212 3A       		.uleb128 0x3a
 4415 0213 0B       		.uleb128 0xb
 4416 0214 3B       		.uleb128 0x3b
 4417 0215 05       		.uleb128 0x5
 4418 0216 27       		.uleb128 0x27
 4419 0217 19       		.uleb128 0x19
 4420 0218 49       		.uleb128 0x49
 4421 0219 13       		.uleb128 0x13
 4422 021a 11       		.uleb128 0x11
 4423 021b 01       		.uleb128 0x1
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 138


 4424 021c 12       		.uleb128 0x12
 4425 021d 06       		.uleb128 0x6
 4426 021e 40       		.uleb128 0x40
 4427 021f 18       		.uleb128 0x18
 4428 0220 9742     		.uleb128 0x2117
 4429 0222 19       		.uleb128 0x19
 4430 0223 00       		.byte	0
 4431 0224 00       		.byte	0
 4432 0225 25       		.uleb128 0x25
 4433 0226 2E       		.uleb128 0x2e
 4434 0227 00       		.byte	0
 4435 0228 31       		.uleb128 0x31
 4436 0229 13       		.uleb128 0x13
 4437 022a 11       		.uleb128 0x11
 4438 022b 01       		.uleb128 0x1
 4439 022c 12       		.uleb128 0x12
 4440 022d 06       		.uleb128 0x6
 4441 022e 40       		.uleb128 0x40
 4442 022f 18       		.uleb128 0x18
 4443 0230 9742     		.uleb128 0x2117
 4444 0232 19       		.uleb128 0x19
 4445 0233 00       		.byte	0
 4446 0234 00       		.byte	0
 4447 0235 26       		.uleb128 0x26
 4448 0236 34       		.uleb128 0x34
 4449 0237 00       		.byte	0
 4450 0238 03       		.uleb128 0x3
 4451 0239 0E       		.uleb128 0xe
 4452 023a 3A       		.uleb128 0x3a
 4453 023b 0B       		.uleb128 0xb
 4454 023c 3B       		.uleb128 0x3b
 4455 023d 05       		.uleb128 0x5
 4456 023e 49       		.uleb128 0x49
 4457 023f 13       		.uleb128 0x13
 4458 0240 02       		.uleb128 0x2
 4459 0241 18       		.uleb128 0x18
 4460 0242 00       		.byte	0
 4461 0243 00       		.byte	0
 4462 0244 27       		.uleb128 0x27
 4463 0245 2E       		.uleb128 0x2e
 4464 0246 01       		.byte	0x1
 4465 0247 31       		.uleb128 0x31
 4466 0248 13       		.uleb128 0x13
 4467 0249 11       		.uleb128 0x11
 4468 024a 01       		.uleb128 0x1
 4469 024b 12       		.uleb128 0x12
 4470 024c 06       		.uleb128 0x6
 4471 024d 40       		.uleb128 0x40
 4472 024e 18       		.uleb128 0x18
 4473 024f 9742     		.uleb128 0x2117
 4474 0251 19       		.uleb128 0x19
 4475 0252 01       		.uleb128 0x1
 4476 0253 13       		.uleb128 0x13
 4477 0254 00       		.byte	0
 4478 0255 00       		.byte	0
 4479 0256 28       		.uleb128 0x28
 4480 0257 05       		.uleb128 0x5
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 139


 4481 0258 00       		.byte	0
 4482 0259 31       		.uleb128 0x31
 4483 025a 13       		.uleb128 0x13
 4484 025b 02       		.uleb128 0x2
 4485 025c 18       		.uleb128 0x18
 4486 025d 00       		.byte	0
 4487 025e 00       		.byte	0
 4488 025f 29       		.uleb128 0x29
 4489 0260 34       		.uleb128 0x34
 4490 0261 00       		.byte	0
 4491 0262 31       		.uleb128 0x31
 4492 0263 13       		.uleb128 0x13
 4493 0264 02       		.uleb128 0x2
 4494 0265 18       		.uleb128 0x18
 4495 0266 00       		.byte	0
 4496 0267 00       		.byte	0
 4497 0268 2A       		.uleb128 0x2a
 4498 0269 34       		.uleb128 0x34
 4499 026a 00       		.byte	0
 4500 026b 31       		.uleb128 0x31
 4501 026c 13       		.uleb128 0x13
 4502 026d 1C       		.uleb128 0x1c
 4503 026e 06       		.uleb128 0x6
 4504 026f 00       		.byte	0
 4505 0270 00       		.byte	0
 4506 0271 2B       		.uleb128 0x2b
 4507 0272 1D       		.uleb128 0x1d
 4508 0273 01       		.byte	0x1
 4509 0274 31       		.uleb128 0x31
 4510 0275 13       		.uleb128 0x13
 4511 0276 11       		.uleb128 0x11
 4512 0277 01       		.uleb128 0x1
 4513 0278 12       		.uleb128 0x12
 4514 0279 06       		.uleb128 0x6
 4515 027a 58       		.uleb128 0x58
 4516 027b 0B       		.uleb128 0xb
 4517 027c 59       		.uleb128 0x59
 4518 027d 05       		.uleb128 0x5
 4519 027e 00       		.byte	0
 4520 027f 00       		.byte	0
 4521 0280 2C       		.uleb128 0x2c
 4522 0281 34       		.uleb128 0x34
 4523 0282 00       		.byte	0
 4524 0283 03       		.uleb128 0x3
 4525 0284 0E       		.uleb128 0xe
 4526 0285 3A       		.uleb128 0x3a
 4527 0286 0B       		.uleb128 0xb
 4528 0287 3B       		.uleb128 0x3b
 4529 0288 05       		.uleb128 0x5
 4530 0289 49       		.uleb128 0x49
 4531 028a 13       		.uleb128 0x13
 4532 028b 1C       		.uleb128 0x1c
 4533 028c 06       		.uleb128 0x6
 4534 028d 00       		.byte	0
 4535 028e 00       		.byte	0
 4536 028f 2D       		.uleb128 0x2d
 4537 0290 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 140


 4538 0291 01       		.byte	0x1
 4539 0292 3F       		.uleb128 0x3f
 4540 0293 19       		.uleb128 0x19
 4541 0294 03       		.uleb128 0x3
 4542 0295 0E       		.uleb128 0xe
 4543 0296 3A       		.uleb128 0x3a
 4544 0297 0B       		.uleb128 0xb
 4545 0298 3B       		.uleb128 0x3b
 4546 0299 05       		.uleb128 0x5
 4547 029a 27       		.uleb128 0x27
 4548 029b 19       		.uleb128 0x19
 4549 029c 11       		.uleb128 0x11
 4550 029d 01       		.uleb128 0x1
 4551 029e 12       		.uleb128 0x12
 4552 029f 06       		.uleb128 0x6
 4553 02a0 40       		.uleb128 0x40
 4554 02a1 18       		.uleb128 0x18
 4555 02a2 9642     		.uleb128 0x2116
 4556 02a4 19       		.uleb128 0x19
 4557 02a5 01       		.uleb128 0x1
 4558 02a6 13       		.uleb128 0x13
 4559 02a7 00       		.byte	0
 4560 02a8 00       		.byte	0
 4561 02a9 2E       		.uleb128 0x2e
 4562 02aa 34       		.uleb128 0x34
 4563 02ab 00       		.byte	0
 4564 02ac 31       		.uleb128 0x31
 4565 02ad 13       		.uleb128 0x13
 4566 02ae 02       		.uleb128 0x2
 4567 02af 17       		.uleb128 0x17
 4568 02b0 00       		.byte	0
 4569 02b1 00       		.byte	0
 4570 02b2 2F       		.uleb128 0x2f
 4571 02b3 0B       		.uleb128 0xb
 4572 02b4 01       		.byte	0x1
 4573 02b5 55       		.uleb128 0x55
 4574 02b6 17       		.uleb128 0x17
 4575 02b7 00       		.byte	0
 4576 02b8 00       		.byte	0
 4577 02b9 30       		.uleb128 0x30
 4578 02ba 1D       		.uleb128 0x1d
 4579 02bb 01       		.byte	0x1
 4580 02bc 31       		.uleb128 0x31
 4581 02bd 13       		.uleb128 0x13
 4582 02be 52       		.uleb128 0x52
 4583 02bf 01       		.uleb128 0x1
 4584 02c0 55       		.uleb128 0x55
 4585 02c1 17       		.uleb128 0x17
 4586 02c2 58       		.uleb128 0x58
 4587 02c3 0B       		.uleb128 0xb
 4588 02c4 59       		.uleb128 0x59
 4589 02c5 05       		.uleb128 0x5
 4590 02c6 00       		.byte	0
 4591 02c7 00       		.byte	0
 4592 02c8 31       		.uleb128 0x31
 4593 02c9 01       		.uleb128 0x1
 4594 02ca 01       		.byte	0x1
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 141


 4595 02cb 49       		.uleb128 0x49
 4596 02cc 13       		.uleb128 0x13
 4597 02cd 01       		.uleb128 0x1
 4598 02ce 13       		.uleb128 0x13
 4599 02cf 00       		.byte	0
 4600 02d0 00       		.byte	0
 4601 02d1 32       		.uleb128 0x32
 4602 02d2 21       		.uleb128 0x21
 4603 02d3 00       		.byte	0
 4604 02d4 49       		.uleb128 0x49
 4605 02d5 13       		.uleb128 0x13
 4606 02d6 2F       		.uleb128 0x2f
 4607 02d7 0B       		.uleb128 0xb
 4608 02d8 00       		.byte	0
 4609 02d9 00       		.byte	0
 4610 02da 33       		.uleb128 0x33
 4611 02db 34       		.uleb128 0x34
 4612 02dc 00       		.byte	0
 4613 02dd 03       		.uleb128 0x3
 4614 02de 0E       		.uleb128 0xe
 4615 02df 3A       		.uleb128 0x3a
 4616 02e0 0B       		.uleb128 0xb
 4617 02e1 3B       		.uleb128 0x3b
 4618 02e2 0B       		.uleb128 0xb
 4619 02e3 49       		.uleb128 0x49
 4620 02e4 13       		.uleb128 0x13
 4621 02e5 02       		.uleb128 0x2
 4622 02e6 18       		.uleb128 0x18
 4623 02e7 00       		.byte	0
 4624 02e8 00       		.byte	0
 4625 02e9 34       		.uleb128 0x34
 4626 02ea 34       		.uleb128 0x34
 4627 02eb 00       		.byte	0
 4628 02ec 03       		.uleb128 0x3
 4629 02ed 0E       		.uleb128 0xe
 4630 02ee 3A       		.uleb128 0x3a
 4631 02ef 0B       		.uleb128 0xb
 4632 02f0 3B       		.uleb128 0x3b
 4633 02f1 0B       		.uleb128 0xb
 4634 02f2 49       		.uleb128 0x49
 4635 02f3 13       		.uleb128 0x13
 4636 02f4 3F       		.uleb128 0x3f
 4637 02f5 19       		.uleb128 0x19
 4638 02f6 02       		.uleb128 0x2
 4639 02f7 18       		.uleb128 0x18
 4640 02f8 00       		.byte	0
 4641 02f9 00       		.byte	0
 4642 02fa 35       		.uleb128 0x35
 4643 02fb 26       		.uleb128 0x26
 4644 02fc 00       		.byte	0
 4645 02fd 49       		.uleb128 0x49
 4646 02fe 13       		.uleb128 0x13
 4647 02ff 00       		.byte	0
 4648 0300 00       		.byte	0
 4649 0301 36       		.uleb128 0x36
 4650 0302 2E       		.uleb128 0x2e
 4651 0303 00       		.byte	0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 142


 4652 0304 3F       		.uleb128 0x3f
 4653 0305 19       		.uleb128 0x19
 4654 0306 3C       		.uleb128 0x3c
 4655 0307 19       		.uleb128 0x19
 4656 0308 6E       		.uleb128 0x6e
 4657 0309 0E       		.uleb128 0xe
 4658 030a 03       		.uleb128 0x3
 4659 030b 0E       		.uleb128 0xe
 4660 030c 3A       		.uleb128 0x3a
 4661 030d 0B       		.uleb128 0xb
 4662 030e 3B       		.uleb128 0x3b
 4663 030f 0B       		.uleb128 0xb
 4664 0310 00       		.byte	0
 4665 0311 00       		.byte	0
 4666 0312 00       		.byte	0
 4667              		.section	.debug_loc,"",%progbits
 4668              	.Ldebug_loc0:
 4669              	.LLST0:
 4670 0000 00000000 		.4byte	.LVL1
 4671 0004 07000000 		.4byte	.LVL2-1
 4672 0008 0100     		.2byte	0x1
 4673 000a 50       		.byte	0x50
 4674 000b 07000000 		.4byte	.LVL2-1
 4675 000f 1A000000 		.4byte	.LVL6
 4676 0013 0100     		.2byte	0x1
 4677 0015 54       		.byte	0x54
 4678 0016 1A000000 		.4byte	.LVL6
 4679 001a 20000000 		.4byte	.LFE2
 4680 001e 0400     		.2byte	0x4
 4681 0020 F3       		.byte	0xf3
 4682 0021 01       		.uleb128 0x1
 4683 0022 50       		.byte	0x50
 4684 0023 9F       		.byte	0x9f
 4685 0024 00000000 		.4byte	0
 4686 0028 00000000 		.4byte	0
 4687              	.LLST1:
 4688 002c 08000000 		.4byte	.LVL2
 4689 0030 19000000 		.4byte	.LVL5-1
 4690 0034 0100     		.2byte	0x1
 4691 0036 50       		.byte	0x50
 4692 0037 00000000 		.4byte	0
 4693 003b 00000000 		.4byte	0
 4694              	.LLST2:
 4695 003f 10000000 		.4byte	.LVL3
 4696 0043 14000000 		.4byte	.LVL4
 4697 0047 0100     		.2byte	0x1
 4698 0049 52       		.byte	0x52
 4699 004a 14000000 		.4byte	.LVL4
 4700 004e 19000000 		.4byte	.LVL5-1
 4701 0052 0100     		.2byte	0x1
 4702 0054 53       		.byte	0x53
 4703 0055 00000000 		.4byte	0
 4704 0059 00000000 		.4byte	0
 4705              	.LLST3:
 4706 005d 06000000 		.4byte	.LVL8
 4707 0061 0D000000 		.4byte	.LVL10-1
 4708 0065 0100     		.2byte	0x1
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 143


 4709 0067 50       		.byte	0x50
 4710 0068 00000000 		.4byte	0
 4711 006c 00000000 		.4byte	0
 4712              	.LLST4:
 4713 0070 0A000000 		.4byte	.LVL9
 4714 0074 12000000 		.4byte	.LVL11
 4715 0078 0500     		.2byte	0x5
 4716 007a 74       		.byte	0x74
 4717 007b 00       		.sleb128 0
 4718 007c 37       		.byte	0x37
 4719 007d 1A       		.byte	0x1a
 4720 007e 9F       		.byte	0x9f
 4721 007f 12000000 		.4byte	.LVL11
 4722 0083 18000000 		.4byte	.LFE4
 4723 0087 0100     		.2byte	0x1
 4724 0089 50       		.byte	0x50
 4725 008a 00000000 		.4byte	0
 4726 008e 00000000 		.4byte	0
 4727              	.LLST5:
 4728 0092 00000000 		.4byte	.LVL12
 4729 0096 07000000 		.4byte	.LVL13-1
 4730 009a 0100     		.2byte	0x1
 4731 009c 50       		.byte	0x50
 4732 009d 07000000 		.4byte	.LVL13-1
 4733 00a1 0C000000 		.4byte	.LVL14
 4734 00a5 0100     		.2byte	0x1
 4735 00a7 54       		.byte	0x54
 4736 00a8 0C000000 		.4byte	.LVL14
 4737 00ac 2C000000 		.4byte	.LFE5
 4738 00b0 0400     		.2byte	0x4
 4739 00b2 F3       		.byte	0xf3
 4740 00b3 01       		.uleb128 0x1
 4741 00b4 50       		.byte	0x50
 4742 00b5 9F       		.byte	0x9f
 4743 00b6 00000000 		.4byte	0
 4744 00ba 00000000 		.4byte	0
 4745              	.LLST6:
 4746 00be 08000000 		.4byte	.LVL13
 4747 00c2 21000000 		.4byte	.LVL15-1
 4748 00c6 0100     		.2byte	0x1
 4749 00c8 50       		.byte	0x50
 4750 00c9 00000000 		.4byte	0
 4751 00cd 00000000 		.4byte	0
 4752              	.LLST7:
 4753 00d1 00000000 		.4byte	.LVL16
 4754 00d5 11000000 		.4byte	.LVL17-1
 4755 00d9 0100     		.2byte	0x1
 4756 00db 50       		.byte	0x50
 4757 00dc 11000000 		.4byte	.LVL17-1
 4758 00e0 60000000 		.4byte	.LVL25
 4759 00e4 0100     		.2byte	0x1
 4760 00e6 54       		.byte	0x54
 4761 00e7 60000000 		.4byte	.LVL25
 4762 00eb 82000000 		.4byte	.LVL31
 4763 00ef 0700     		.2byte	0x7
 4764 00f1 74       		.byte	0x74
 4765 00f2 B39C8080 		.sleb128 -268431821
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 144


 4765      7F
 4766 00f7 9F       		.byte	0x9f
 4767 00f8 82000000 		.4byte	.LVL31
 4768 00fc 92000000 		.4byte	.LVL33
 4769 0100 0300     		.2byte	0x3
 4770 0102 75       		.byte	0x75
 4771 0103 03       		.sleb128 3
 4772 0104 9F       		.byte	0x9f
 4773 0105 92000000 		.4byte	.LVL33
 4774 0109 94000000 		.4byte	.LVL34
 4775 010d 0100     		.2byte	0x1
 4776 010f 54       		.byte	0x54
 4777 0110 94000000 		.4byte	.LVL34
 4778 0114 9A000000 		.4byte	.LVL36
 4779 0118 0300     		.2byte	0x3
 4780 011a 75       		.byte	0x75
 4781 011b 03       		.sleb128 3
 4782 011c 9F       		.byte	0x9f
 4783 011d 9A000000 		.4byte	.LVL36
 4784 0121 A6000000 		.4byte	.LVL38
 4785 0125 0400     		.2byte	0x4
 4786 0127 F3       		.byte	0xf3
 4787 0128 01       		.uleb128 0x1
 4788 0129 50       		.byte	0x50
 4789 012a 9F       		.byte	0x9f
 4790 012b A6000000 		.4byte	.LVL38
 4791 012f EE000000 		.4byte	.LVL47
 4792 0133 0100     		.2byte	0x1
 4793 0135 54       		.byte	0x54
 4794 0136 EE000000 		.4byte	.LVL47
 4795 013a 0E010000 		.4byte	.LVL53
 4796 013e 0700     		.2byte	0x7
 4797 0140 74       		.byte	0x74
 4798 0141 B39C8080 		.sleb128 -268431821
 4798      7F
 4799 0146 9F       		.byte	0x9f
 4800 0147 0E010000 		.4byte	.LVL53
 4801 014b 8C010000 		.4byte	.LFE6
 4802 014f 0100     		.2byte	0x1
 4803 0151 54       		.byte	0x54
 4804 0152 00000000 		.4byte	0
 4805 0156 00000000 		.4byte	0
 4806              	.LLST8:
 4807 015a 2A000000 		.4byte	.LVL19
 4808 015e 92000000 		.4byte	.LVL33
 4809 0162 0100     		.2byte	0x1
 4810 0164 5A       		.byte	0x5a
 4811 0165 BE000000 		.4byte	.LVL39
 4812 0169 C8000000 		.4byte	.LVL41
 4813 016d 0100     		.2byte	0x1
 4814 016f 5A       		.byte	0x5a
 4815 0170 D0000000 		.4byte	.LVL42
 4816 0174 0E010000 		.4byte	.LVL53
 4817 0178 0100     		.2byte	0x1
 4818 017a 5A       		.byte	0x5a
 4819 017b 1E010000 		.4byte	.LVL54
 4820 017f 28010000 		.4byte	.LVL56
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 145


 4821 0183 0100     		.2byte	0x1
 4822 0185 5A       		.byte	0x5a
 4823 0186 30010000 		.4byte	.LVL57
 4824 018a 8C010000 		.4byte	.LFE6
 4825 018e 0100     		.2byte	0x1
 4826 0190 5A       		.byte	0x5a
 4827 0191 00000000 		.4byte	0
 4828 0195 00000000 		.4byte	0
 4829              	.LLST9:
 4830 0199 32000000 		.4byte	.LVL20
 4831 019d 92000000 		.4byte	.LVL33
 4832 01a1 0100     		.2byte	0x1
 4833 01a3 59       		.byte	0x59
 4834 01a4 C6000000 		.4byte	.LVL40
 4835 01a8 C8000000 		.4byte	.LVL41
 4836 01ac 0100     		.2byte	0x1
 4837 01ae 59       		.byte	0x59
 4838 01af D8000000 		.4byte	.LVL43
 4839 01b3 0E010000 		.4byte	.LVL53
 4840 01b7 0100     		.2byte	0x1
 4841 01b9 59       		.byte	0x59
 4842 01ba 26010000 		.4byte	.LVL55
 4843 01be 28010000 		.4byte	.LVL56
 4844 01c2 0100     		.2byte	0x1
 4845 01c4 59       		.byte	0x59
 4846 01c5 38010000 		.4byte	.LVL58
 4847 01c9 8C010000 		.4byte	.LFE6
 4848 01cd 0100     		.2byte	0x1
 4849 01cf 59       		.byte	0x59
 4850 01d0 00000000 		.4byte	0
 4851 01d4 00000000 		.4byte	0
 4852              	.LLST10:
 4853 01d8 3A000000 		.4byte	.LVL21
 4854 01dc 46000000 		.4byte	.LVL22
 4855 01e0 0100     		.2byte	0x1
 4856 01e2 53       		.byte	0x53
 4857 01e3 46000000 		.4byte	.LVL22
 4858 01e7 92000000 		.4byte	.LVL33
 4859 01eb 0100     		.2byte	0x1
 4860 01ed 58       		.byte	0x58
 4861 01ee DA000000 		.4byte	.LVL44
 4862 01f2 DE000000 		.4byte	.LVL45
 4863 01f6 0100     		.2byte	0x1
 4864 01f8 53       		.byte	0x53
 4865 01f9 DE000000 		.4byte	.LVL45
 4866 01fd 0E010000 		.4byte	.LVL53
 4867 0201 0100     		.2byte	0x1
 4868 0203 58       		.byte	0x58
 4869 0204 00000000 		.4byte	0
 4870 0208 00000000 		.4byte	0
 4871              	.LLST11:
 4872 020c 4A000000 		.4byte	.LVL23
 4873 0210 82000000 		.4byte	.LVL31
 4874 0214 0100     		.2byte	0x1
 4875 0216 56       		.byte	0x56
 4876 0217 E6000000 		.4byte	.LVL46
 4877 021b 0E010000 		.4byte	.LVL53
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 146


 4878 021f 0200     		.2byte	0x2
 4879 0221 49       		.byte	0x49
 4880 0222 9F       		.byte	0x9f
 4881 0223 00000000 		.4byte	0
 4882 0227 00000000 		.4byte	0
 4883              	.LLST12:
 4884 022b 64000000 		.4byte	.LVL26
 4885 022f 6A000000 		.4byte	.LVL27
 4886 0233 0100     		.2byte	0x1
 4887 0235 53       		.byte	0x53
 4888 0236 6A000000 		.4byte	.LVL27
 4889 023a 6C000000 		.4byte	.LVL28
 4890 023e 0700     		.2byte	0x7
 4891 0240 0C       		.byte	0xc
 4892 0241 28FF0B40 		.4byte	0x400bff28
 4893 0245 06       		.byte	0x6
 4894 0246 9F       		.byte	0x9f
 4895 0247 F2000000 		.4byte	.LVL48
 4896 024b F8000000 		.4byte	.LVL49
 4897 024f 0100     		.2byte	0x1
 4898 0251 53       		.byte	0x53
 4899 0252 F8000000 		.4byte	.LVL49
 4900 0256 FA000000 		.4byte	.LVL50
 4901 025a 0700     		.2byte	0x7
 4902 025c 0C       		.byte	0xc
 4903 025d 28FF0B40 		.4byte	0x400bff28
 4904 0261 06       		.byte	0x6
 4905 0262 9F       		.byte	0x9f
 4906 0263 00000000 		.4byte	0
 4907 0267 00000000 		.4byte	0
 4908              	.LLST13:
 4909 026b 16000000 		.4byte	.LVL18
 4910 026f 9A000000 		.4byte	.LVL37
 4911 0273 0100     		.2byte	0x1
 4912 0275 57       		.byte	0x57
 4913 0276 A6000000 		.4byte	.LVL38
 4914 027a 8C010000 		.4byte	.LFE6
 4915 027e 0100     		.2byte	0x1
 4916 0280 57       		.byte	0x57
 4917 0281 00000000 		.4byte	0
 4918 0285 00000000 		.4byte	0
 4919              	.LLST14:
 4920 0289 72000000 		.4byte	.LVL29
 4921 028d 7E000000 		.4byte	.LVL30
 4922 0291 0200     		.2byte	0x2
 4923 0293 35       		.byte	0x35
 4924 0294 9F       		.byte	0x9f
 4925 0295 00010000 		.4byte	.LVL51
 4926 0299 0C010000 		.4byte	.LVL52
 4927 029d 0200     		.2byte	0x2
 4928 029f 35       		.byte	0x35
 4929 02a0 9F       		.byte	0x9f
 4930 02a1 00000000 		.4byte	0
 4931 02a5 00000000 		.4byte	0
 4932              	.LLST15:
 4933 02a9 92000000 		.4byte	.LVL33
 4934 02ad 94000000 		.4byte	.LVL34
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 147


 4935 02b1 0200     		.2byte	0x2
 4936 02b3 30       		.byte	0x30
 4937 02b4 9F       		.byte	0x9f
 4938 02b5 00000000 		.4byte	0
 4939 02b9 00000000 		.4byte	0
 4940              	.LLST16:
 4941 02bd 00000000 		.4byte	.LVL59
 4942 02c1 0E000000 		.4byte	.LVL60
 4943 02c5 0100     		.2byte	0x1
 4944 02c7 50       		.byte	0x50
 4945 02c8 0E000000 		.4byte	.LVL60
 4946 02cc 50000000 		.4byte	.LFE7
 4947 02d0 0400     		.2byte	0x4
 4948 02d2 F3       		.byte	0xf3
 4949 02d3 01       		.uleb128 0x1
 4950 02d4 50       		.byte	0x50
 4951 02d5 9F       		.byte	0x9f
 4952 02d6 00000000 		.4byte	0
 4953 02da 00000000 		.4byte	0
 4954              	.LLST17:
 4955 02de 24000000 		.4byte	.LVL61
 4956 02e2 32000000 		.4byte	.LVL62
 4957 02e6 0400     		.2byte	0x4
 4958 02e8 0A       		.byte	0xa
 4959 02e9 E803     		.2byte	0x3e8
 4960 02eb 9F       		.byte	0x9f
 4961 02ec 00000000 		.4byte	0
 4962 02f0 00000000 		.4byte	0
 4963              	.LLST18:
 4964 02f4 00000000 		.4byte	.LVL63
 4965 02f8 04000000 		.4byte	.LVL64
 4966 02fc 0100     		.2byte	0x1
 4967 02fe 50       		.byte	0x50
 4968 02ff 04000000 		.4byte	.LVL64
 4969 0303 14000000 		.4byte	.LFE11
 4970 0307 0100     		.2byte	0x1
 4971 0309 52       		.byte	0x52
 4972 030a 00000000 		.4byte	0
 4973 030e 00000000 		.4byte	0
 4974              	.LLST19:
 4975 0312 0A000000 		.4byte	.LVL66
 4976 0316 0C000000 		.4byte	.LVL67
 4977 031a 0500     		.2byte	0x5
 4978 031c 73       		.byte	0x73
 4979 031d 00       		.sleb128 0
 4980 031e 49       		.byte	0x49
 4981 031f 1A       		.byte	0x1a
 4982 0320 9F       		.byte	0x9f
 4983 0321 0C000000 		.4byte	.LVL67
 4984 0325 14000000 		.4byte	.LFE11
 4985 0329 0100     		.2byte	0x1
 4986 032b 50       		.byte	0x50
 4987 032c 00000000 		.4byte	0
 4988 0330 00000000 		.4byte	0
 4989              	.LLST20:
 4990 0334 00000000 		.4byte	.LVL70
 4991 0338 0A000000 		.4byte	.LVL73
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 148


 4992 033c 0100     		.2byte	0x1
 4993 033e 50       		.byte	0x50
 4994 033f 0A000000 		.4byte	.LVL73
 4995 0343 14000000 		.4byte	.LFE14
 4996 0347 0400     		.2byte	0x4
 4997 0349 F3       		.byte	0xf3
 4998 034a 01       		.uleb128 0x1
 4999 034b 50       		.byte	0x50
 5000 034c 9F       		.byte	0x9f
 5001 034d 00000000 		.4byte	0
 5002 0351 00000000 		.4byte	0
 5003              	.LLST21:
 5004 0355 04000000 		.4byte	.LVL71
 5005 0359 06000000 		.4byte	.LVL72
 5006 035d 0200     		.2byte	0x2
 5007 035f 30       		.byte	0x30
 5008 0360 9F       		.byte	0x9f
 5009 0361 00000000 		.4byte	0
 5010 0365 00000000 		.4byte	0
 5011              	.LLST22:
 5012 0369 00000000 		.4byte	.LVL75
 5013 036d 0E000000 		.4byte	.LVL78
 5014 0371 0100     		.2byte	0x1
 5015 0373 50       		.byte	0x50
 5016 0374 0E000000 		.4byte	.LVL78
 5017 0378 14000000 		.4byte	.LFE15
 5018 037c 0400     		.2byte	0x4
 5019 037e F3       		.byte	0xf3
 5020 037f 01       		.uleb128 0x1
 5021 0380 50       		.byte	0x50
 5022 0381 9F       		.byte	0x9f
 5023 0382 00000000 		.4byte	0
 5024 0386 00000000 		.4byte	0
 5025              	.LLST23:
 5026 038a 04000000 		.4byte	.LVL76
 5027 038e 06000000 		.4byte	.LVL77
 5028 0392 0200     		.2byte	0x2
 5029 0394 30       		.byte	0x30
 5030 0395 9F       		.byte	0x9f
 5031 0396 00000000 		.4byte	0
 5032 039a 00000000 		.4byte	0
 5033              	.LLST24:
 5034 039e 00000000 		.4byte	.LVL79
 5035 03a2 0A000000 		.4byte	.LVL82
 5036 03a6 0100     		.2byte	0x1
 5037 03a8 50       		.byte	0x50
 5038 03a9 0A000000 		.4byte	.LVL82
 5039 03ad 18000000 		.4byte	.LFE16
 5040 03b1 0400     		.2byte	0x4
 5041 03b3 F3       		.byte	0xf3
 5042 03b4 01       		.uleb128 0x1
 5043 03b5 50       		.byte	0x50
 5044 03b6 9F       		.byte	0x9f
 5045 03b7 00000000 		.4byte	0
 5046 03bb 00000000 		.4byte	0
 5047              	.LLST25:
 5048 03bf 04000000 		.4byte	.LVL80
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 149


 5049 03c3 06000000 		.4byte	.LVL81
 5050 03c7 0200     		.2byte	0x2
 5051 03c9 30       		.byte	0x30
 5052 03ca 9F       		.byte	0x9f
 5053 03cb 00000000 		.4byte	0
 5054 03cf 00000000 		.4byte	0
 5055              	.LLST26:
 5056 03d3 00000000 		.4byte	.LVL84
 5057 03d7 0A000000 		.4byte	.LVL87
 5058 03db 0100     		.2byte	0x1
 5059 03dd 50       		.byte	0x50
 5060 03de 0A000000 		.4byte	.LVL87
 5061 03e2 18000000 		.4byte	.LFE17
 5062 03e6 0400     		.2byte	0x4
 5063 03e8 F3       		.byte	0xf3
 5064 03e9 01       		.uleb128 0x1
 5065 03ea 50       		.byte	0x50
 5066 03eb 9F       		.byte	0x9f
 5067 03ec 00000000 		.4byte	0
 5068 03f0 00000000 		.4byte	0
 5069              	.LLST27:
 5070 03f4 04000000 		.4byte	.LVL85
 5071 03f8 06000000 		.4byte	.LVL86
 5072 03fc 0200     		.2byte	0x2
 5073 03fe 30       		.byte	0x30
 5074 03ff 9F       		.byte	0x9f
 5075 0400 00000000 		.4byte	0
 5076 0404 00000000 		.4byte	0
 5077              	.LLST28:
 5078 0408 00000000 		.4byte	.LVL88
 5079 040c 17000000 		.4byte	.LVL93-1
 5080 0410 0100     		.2byte	0x1
 5081 0412 50       		.byte	0x50
 5082 0413 17000000 		.4byte	.LVL93-1
 5083 0417 44000000 		.4byte	.LFE18
 5084 041b 0400     		.2byte	0x4
 5085 041d F3       		.byte	0xf3
 5086 041e 01       		.uleb128 0x1
 5087 041f 50       		.byte	0x50
 5088 0420 9F       		.byte	0x9f
 5089 0421 00000000 		.4byte	0
 5090 0425 00000000 		.4byte	0
 5091              	.LLST29:
 5092 0429 00000000 		.4byte	.LVL88
 5093 042d 17000000 		.4byte	.LVL93-1
 5094 0431 0100     		.2byte	0x1
 5095 0433 51       		.byte	0x51
 5096 0434 17000000 		.4byte	.LVL93-1
 5097 0438 44000000 		.4byte	.LFE18
 5098 043c 0400     		.2byte	0x4
 5099 043e F3       		.byte	0xf3
 5100 043f 01       		.uleb128 0x1
 5101 0440 51       		.byte	0x51
 5102 0441 9F       		.byte	0x9f
 5103 0442 00000000 		.4byte	0
 5104 0446 00000000 		.4byte	0
 5105              	.LLST30:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 150


 5106 044a 30000000 		.4byte	.LVL94
 5107 044e 3D000000 		.4byte	.LVL97-1
 5108 0452 0100     		.2byte	0x1
 5109 0454 50       		.byte	0x50
 5110 0455 00000000 		.4byte	0
 5111 0459 00000000 		.4byte	0
 5112              	.LLST31:
 5113 045d 30000000 		.4byte	.LVL94
 5114 0461 3E000000 		.4byte	.LVL98
 5115 0465 0100     		.2byte	0x1
 5116 0467 55       		.byte	0x55
 5117 0468 00000000 		.4byte	0
 5118 046c 00000000 		.4byte	0
 5119              	.LLST32:
 5120 0470 36000000 		.4byte	.LVL95
 5121 0474 38000000 		.4byte	.LVL96
 5122 0478 0100     		.2byte	0x1
 5123 047a 53       		.byte	0x53
 5124 047b 38000000 		.4byte	.LVL96
 5125 047f 3D000000 		.4byte	.LVL97-1
 5126 0483 0100     		.2byte	0x1
 5127 0485 51       		.byte	0x51
 5128 0486 00000000 		.4byte	0
 5129 048a 00000000 		.4byte	0
 5130              	.LLST33:
 5131 048e 0A000000 		.4byte	.LVL89
 5132 0492 0C000000 		.4byte	.LVL90
 5133 0496 0200     		.2byte	0x2
 5134 0498 30       		.byte	0x30
 5135 0499 9F       		.byte	0x9f
 5136 049a 00000000 		.4byte	0
 5137 049e 00000000 		.4byte	0
 5138              	.LLST34:
 5139 04a2 10000000 		.4byte	.LVL91
 5140 04a6 12000000 		.4byte	.LVL92
 5141 04aa 0200     		.2byte	0x2
 5142 04ac 30       		.byte	0x30
 5143 04ad 9F       		.byte	0x9f
 5144 04ae 00000000 		.4byte	0
 5145 04b2 00000000 		.4byte	0
 5146              	.LLST35:
 5147 04b6 00000000 		.4byte	.LVL99
 5148 04ba 20000000 		.4byte	.LVL104
 5149 04be 0100     		.2byte	0x1
 5150 04c0 50       		.byte	0x50
 5151 04c1 20000000 		.4byte	.LVL104
 5152 04c5 28000000 		.4byte	.LFE19
 5153 04c9 0400     		.2byte	0x4
 5154 04cb F3       		.byte	0xf3
 5155 04cc 01       		.uleb128 0x1
 5156 04cd 50       		.byte	0x50
 5157 04ce 9F       		.byte	0x9f
 5158 04cf 00000000 		.4byte	0
 5159 04d3 00000000 		.4byte	0
 5160              	.LLST36:
 5161 04d7 12000000 		.4byte	.LVL102
 5162 04db 1E000000 		.4byte	.LVL103
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 151


 5163 04df 0F00     		.2byte	0xf
 5164 04e1 72       		.byte	0x72
 5165 04e2 00       		.sleb128 0
 5166 04e3 70       		.byte	0x70
 5167 04e4 00       		.sleb128 0
 5168 04e5 33       		.byte	0x33
 5169 04e6 1A       		.byte	0x1a
 5170 04e7 08       		.byte	0x8
 5171 04e8 FF       		.byte	0xff
 5172 04e9 1A       		.byte	0x1a
 5173 04ea 33       		.byte	0x33
 5174 04eb 24       		.byte	0x24
 5175 04ec 23       		.byte	0x23
 5176 04ed 06       		.uleb128 0x6
 5177 04ee 25       		.byte	0x25
 5178 04ef 9F       		.byte	0x9f
 5179 04f0 00000000 		.4byte	0
 5180 04f4 00000000 		.4byte	0
 5181              	.LLST37:
 5182 04f8 04000000 		.4byte	.LVL100
 5183 04fc 06000000 		.4byte	.LVL101
 5184 0500 0200     		.2byte	0x2
 5185 0502 30       		.byte	0x30
 5186 0503 9F       		.byte	0x9f
 5187 0504 00000000 		.4byte	0
 5188 0508 00000000 		.4byte	0
 5189              	.LLST38:
 5190 050c 00000000 		.4byte	.LVL105
 5191 0510 04000000 		.4byte	.LVL106
 5192 0514 0100     		.2byte	0x1
 5193 0516 50       		.byte	0x50
 5194 0517 04000000 		.4byte	.LVL106
 5195 051b 14000000 		.4byte	.LFE20
 5196 051f 0400     		.2byte	0x4
 5197 0521 F3       		.byte	0xf3
 5198 0522 01       		.uleb128 0x1
 5199 0523 50       		.byte	0x50
 5200 0524 9F       		.byte	0x9f
 5201 0525 00000000 		.4byte	0
 5202 0529 00000000 		.4byte	0
 5203              	.LLST39:
 5204 052d 00000000 		.4byte	.LVL107
 5205 0531 06000000 		.4byte	.LVL108
 5206 0535 0100     		.2byte	0x1
 5207 0537 50       		.byte	0x50
 5208 0538 06000000 		.4byte	.LVL108
 5209 053c 18000000 		.4byte	.LFE21
 5210 0540 0400     		.2byte	0x4
 5211 0542 F3       		.byte	0xf3
 5212 0543 01       		.uleb128 0x1
 5213 0544 50       		.byte	0x50
 5214 0545 9F       		.byte	0x9f
 5215 0546 00000000 		.4byte	0
 5216 054a 00000000 		.4byte	0
 5217              	.LLST40:
 5218 054e 00000000 		.4byte	.LVL109
 5219 0552 04000000 		.4byte	.LVL110
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 152


 5220 0556 0100     		.2byte	0x1
 5221 0558 50       		.byte	0x50
 5222 0559 04000000 		.4byte	.LVL110
 5223 055d 14000000 		.4byte	.LFE22
 5224 0561 0400     		.2byte	0x4
 5225 0563 F3       		.byte	0xf3
 5226 0564 01       		.uleb128 0x1
 5227 0565 50       		.byte	0x50
 5228 0566 9F       		.byte	0x9f
 5229 0567 00000000 		.4byte	0
 5230 056b 00000000 		.4byte	0
 5231              	.LLST41:
 5232 056f 00000000 		.4byte	.LVL111
 5233 0573 04000000 		.4byte	.LVL112
 5234 0577 0100     		.2byte	0x1
 5235 0579 50       		.byte	0x50
 5236 057a 04000000 		.4byte	.LVL112
 5237 057e 14000000 		.4byte	.LFE23
 5238 0582 0400     		.2byte	0x4
 5239 0584 F3       		.byte	0xf3
 5240 0585 01       		.uleb128 0x1
 5241 0586 50       		.byte	0x50
 5242 0587 9F       		.byte	0x9f
 5243 0588 00000000 		.4byte	0
 5244 058c 00000000 		.4byte	0
 5245              	.LLST42:
 5246 0590 00000000 		.4byte	.LVL113
 5247 0594 04000000 		.4byte	.LVL114
 5248 0598 0100     		.2byte	0x1
 5249 059a 50       		.byte	0x50
 5250 059b 04000000 		.4byte	.LVL114
 5251 059f 14000000 		.4byte	.LFE24
 5252 05a3 0400     		.2byte	0x4
 5253 05a5 F3       		.byte	0xf3
 5254 05a6 01       		.uleb128 0x1
 5255 05a7 50       		.byte	0x50
 5256 05a8 9F       		.byte	0x9f
 5257 05a9 00000000 		.4byte	0
 5258 05ad 00000000 		.4byte	0
 5259              	.LLST43:
 5260 05b1 00000000 		.4byte	.LVL116
 5261 05b5 10000000 		.4byte	.LVL117
 5262 05b9 0100     		.2byte	0x1
 5263 05bb 50       		.byte	0x50
 5264 05bc 10000000 		.4byte	.LVL117
 5265 05c0 2C000000 		.4byte	.LVL120
 5266 05c4 0100     		.2byte	0x1
 5267 05c6 54       		.byte	0x54
 5268 05c7 36000000 		.4byte	.LVL122
 5269 05cb 48000000 		.4byte	.LFE27
 5270 05cf 0100     		.2byte	0x1
 5271 05d1 50       		.byte	0x50
 5272 05d2 00000000 		.4byte	0
 5273 05d6 00000000 		.4byte	0
 5274              	.LLST44:
 5275 05da 00000000 		.4byte	.LVL123
 5276 05de 08000000 		.4byte	.LVL124
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 153


 5277 05e2 0100     		.2byte	0x1
 5278 05e4 50       		.byte	0x50
 5279 05e5 08000000 		.4byte	.LVL124
 5280 05e9 14000000 		.4byte	.LFE28
 5281 05ed 0400     		.2byte	0x4
 5282 05ef F3       		.byte	0xf3
 5283 05f0 01       		.uleb128 0x1
 5284 05f1 50       		.byte	0x50
 5285 05f2 9F       		.byte	0x9f
 5286 05f3 00000000 		.4byte	0
 5287 05f7 00000000 		.4byte	0
 5288              	.LLST45:
 5289 05fb 00000000 		.4byte	.LVL126
 5290 05ff 0E000000 		.4byte	.LVL127
 5291 0603 0100     		.2byte	0x1
 5292 0605 50       		.byte	0x50
 5293 0606 0E000000 		.4byte	.LVL127
 5294 060a 18000000 		.4byte	.LVL128
 5295 060e 0100     		.2byte	0x1
 5296 0610 55       		.byte	0x55
 5297 0611 18000000 		.4byte	.LVL128
 5298 0615 1A000000 		.4byte	.LVL129
 5299 0619 0400     		.2byte	0x4
 5300 061b F3       		.byte	0xf3
 5301 061c 01       		.uleb128 0x1
 5302 061d 50       		.byte	0x50
 5303 061e 9F       		.byte	0x9f
 5304 061f 1A000000 		.4byte	.LVL129
 5305 0623 22000000 		.4byte	.LVL130
 5306 0627 0100     		.2byte	0x1
 5307 0629 50       		.byte	0x50
 5308 062a 22000000 		.4byte	.LVL130
 5309 062e 54000000 		.4byte	.LFE29
 5310 0632 0100     		.2byte	0x1
 5311 0634 55       		.byte	0x55
 5312 0635 00000000 		.4byte	0
 5313 0639 00000000 		.4byte	0
 5314              	.LLST46:
 5315 063d 0A000000 		.4byte	.LVL133
 5316 0641 12000000 		.4byte	.LVL134
 5317 0645 0200     		.2byte	0x2
 5318 0647 30       		.byte	0x30
 5319 0648 9F       		.byte	0x9f
 5320 0649 12000000 		.4byte	.LVL134
 5321 064d 14000000 		.4byte	.LVL135
 5322 0651 0200     		.2byte	0x2
 5323 0653 31       		.byte	0x31
 5324 0654 9F       		.byte	0x9f
 5325 0655 14000000 		.4byte	.LVL135
 5326 0659 16000000 		.4byte	.LVL136
 5327 065d 0200     		.2byte	0x2
 5328 065f 32       		.byte	0x32
 5329 0660 9F       		.byte	0x9f
 5330 0661 16000000 		.4byte	.LVL136
 5331 0665 18000000 		.4byte	.LVL137
 5332 0669 0200     		.2byte	0x2
 5333 066b 33       		.byte	0x33
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 154


 5334 066c 9F       		.byte	0x9f
 5335 066d 18000000 		.4byte	.LVL137
 5336 0671 1A000000 		.4byte	.LVL138
 5337 0675 0200     		.2byte	0x2
 5338 0677 34       		.byte	0x34
 5339 0678 9F       		.byte	0x9f
 5340 0679 1A000000 		.4byte	.LVL138
 5341 067d 2E000000 		.4byte	.LVL142
 5342 0681 0200     		.2byte	0x2
 5343 0683 35       		.byte	0x35
 5344 0684 9F       		.byte	0x9f
 5345 0685 00000000 		.4byte	0
 5346 0689 00000000 		.4byte	0
 5347              	.LLST47:
 5348 068d 1A000000 		.4byte	.LVL138
 5349 0691 1C000000 		.4byte	.LVL139
 5350 0695 0600     		.2byte	0x6
 5351 0697 03       		.byte	0x3
 5352 0698 00000000 		.4byte	CySysTickServiceCallbacks
 5353 069c 9F       		.byte	0x9f
 5354 069d 00000000 		.4byte	0
 5355 06a1 00000000 		.4byte	0
 5356              	.LLST48:
 5357 06a5 1A000000 		.4byte	.LVL138
 5358 06a9 1C000000 		.4byte	.LVL139
 5359 06ad 0200     		.2byte	0x2
 5360 06af 3F       		.byte	0x3f
 5361 06b0 9F       		.byte	0x9f
 5362 06b1 00000000 		.4byte	0
 5363 06b5 00000000 		.4byte	0
 5364              	.LLST49:
 5365 06b9 1A000000 		.4byte	.LVL138
 5366 06bd 1C000000 		.4byte	.LVL139
 5367 06c1 0200     		.2byte	0x2
 5368 06c3 73       		.byte	0x73
 5369 06c4 00       		.sleb128 0
 5370 06c5 00000000 		.4byte	0
 5371 06c9 00000000 		.4byte	0
 5372              	.LLST50:
 5373 06cd 1A000000 		.4byte	.LVL138
 5374 06d1 32000000 		.4byte	.LVL143
 5375 06d5 0400     		.2byte	0x4
 5376 06d7 40       		.byte	0x40
 5377 06d8 49       		.byte	0x49
 5378 06d9 24       		.byte	0x24
 5379 06da 9F       		.byte	0x9f
 5380 06db 00000000 		.4byte	0
 5381 06df 00000000 		.4byte	0
 5382              	.LLST51:
 5383 06e3 26000000 		.4byte	.LVL140
 5384 06e7 2A000000 		.4byte	.LVL141
 5385 06eb 0100     		.2byte	0x1
 5386 06ed 50       		.byte	0x50
 5387 06ee 00000000 		.4byte	0
 5388 06f2 00000000 		.4byte	0
 5389              	.LLST52:
 5390 06f6 00000000 		.4byte	.LVL144
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 155


 5391 06fa 0C000000 		.4byte	.LVL145
 5392 06fe 0200     		.2byte	0x2
 5393 0700 30       		.byte	0x30
 5394 0701 9F       		.byte	0x9f
 5395 0702 0C000000 		.4byte	.LVL145
 5396 0706 10000000 		.4byte	.LVL146
 5397 070a 0200     		.2byte	0x2
 5398 070c 31       		.byte	0x31
 5399 070d 9F       		.byte	0x9f
 5400 070e 10000000 		.4byte	.LVL146
 5401 0712 12000000 		.4byte	.LVL147
 5402 0716 0200     		.2byte	0x2
 5403 0718 32       		.byte	0x32
 5404 0719 9F       		.byte	0x9f
 5405 071a 12000000 		.4byte	.LVL147
 5406 071e 14000000 		.4byte	.LVL148
 5407 0722 0200     		.2byte	0x2
 5408 0724 33       		.byte	0x33
 5409 0725 9F       		.byte	0x9f
 5410 0726 14000000 		.4byte	.LVL148
 5411 072a 44000000 		.4byte	.LFE31
 5412 072e 0200     		.2byte	0x2
 5413 0730 35       		.byte	0x35
 5414 0731 9F       		.byte	0x9f
 5415 0732 00000000 		.4byte	0
 5416 0736 00000000 		.4byte	0
 5417              	.LLST53:
 5418 073a 14000000 		.4byte	.LVL148
 5419 073e 1A000000 		.4byte	.LVL150
 5420 0742 0600     		.2byte	0x6
 5421 0744 03       		.byte	0x3
 5422 0745 00000000 		.4byte	CySysTickServiceCallbacks
 5423 0749 9F       		.byte	0x9f
 5424 074a 00000000 		.4byte	0
 5425 074e 00000000 		.4byte	0
 5426              	.LLST54:
 5427 0752 14000000 		.4byte	.LVL148
 5428 0756 1A000000 		.4byte	.LVL150
 5429 075a 0200     		.2byte	0x2
 5430 075c 3F       		.byte	0x3f
 5431 075d 9F       		.byte	0x9f
 5432 075e 00000000 		.4byte	0
 5433 0762 00000000 		.4byte	0
 5434              	.LLST55:
 5435 0766 14000000 		.4byte	.LVL148
 5436 076a 16000000 		.4byte	.LVL149
 5437 076e 0500     		.2byte	0x5
 5438 0770 0C       		.byte	0xc
 5439 0771 3C000020 		.4byte	0x2000003c
 5440 0775 16000000 		.4byte	.LVL149
 5441 0779 1A000000 		.4byte	.LVL150
 5442 077d 0200     		.2byte	0x2
 5443 077f 73       		.byte	0x73
 5444 0780 00       		.sleb128 0
 5445 0781 00000000 		.4byte	0
 5446 0785 00000000 		.4byte	0
 5447              	.LLST56:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 156


 5448 0789 22000000 		.4byte	.LVL151
 5449 078d 26000000 		.4byte	.LVL152
 5450 0791 0100     		.2byte	0x1
 5451 0793 50       		.byte	0x50
 5452 0794 00000000 		.4byte	0
 5453 0798 00000000 		.4byte	0
 5454              	.LLST57:
 5455 079c 00000000 		.4byte	.LVL153
 5456 07a0 04000000 		.4byte	.LVL154
 5457 07a4 0100     		.2byte	0x1
 5458 07a6 50       		.byte	0x50
 5459 07a7 04000000 		.4byte	.LVL154
 5460 07ab 10000000 		.4byte	.LFE36
 5461 07af 0400     		.2byte	0x4
 5462 07b1 F3       		.byte	0xf3
 5463 07b2 01       		.uleb128 0x1
 5464 07b3 50       		.byte	0x50
 5465 07b4 9F       		.byte	0x9f
 5466 07b5 00000000 		.4byte	0
 5467 07b9 00000000 		.4byte	0
 5468              	.LLST58:
 5469 07bd 00000000 		.4byte	.LVL155
 5470 07c1 06000000 		.4byte	.LVL156
 5471 07c5 0100     		.2byte	0x1
 5472 07c7 50       		.byte	0x50
 5473 07c8 06000000 		.4byte	.LVL156
 5474 07cc 10000000 		.4byte	.LFE41
 5475 07d0 0400     		.2byte	0x4
 5476 07d2 F3       		.byte	0xf3
 5477 07d3 01       		.uleb128 0x1
 5478 07d4 50       		.byte	0x50
 5479 07d5 9F       		.byte	0x9f
 5480 07d6 00000000 		.4byte	0
 5481 07da 00000000 		.4byte	0
 5482              	.LLST59:
 5483 07de 00000000 		.4byte	.LVL157
 5484 07e2 04000000 		.4byte	.LVL158
 5485 07e6 0100     		.2byte	0x1
 5486 07e8 50       		.byte	0x50
 5487 07e9 04000000 		.4byte	.LVL158
 5488 07ed 0C000000 		.4byte	.LFE42
 5489 07f1 0400     		.2byte	0x4
 5490 07f3 F3       		.byte	0xf3
 5491 07f4 01       		.uleb128 0x1
 5492 07f5 50       		.byte	0x50
 5493 07f6 9F       		.byte	0x9f
 5494 07f7 00000000 		.4byte	0
 5495 07fb 00000000 		.4byte	0
 5496              		.section	.debug_aranges,"",%progbits
 5497 0000 7C010000 		.4byte	0x17c
 5498 0004 0200     		.2byte	0x2
 5499 0006 00000000 		.4byte	.Ldebug_info0
 5500 000a 04       		.byte	0x4
 5501 000b 00       		.byte	0
 5502 000c 0000     		.2byte	0
 5503 000e 0000     		.2byte	0
 5504 0010 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 157


 5505 0014 28000000 		.4byte	.LFE43-.LFB43
 5506 0018 00000000 		.4byte	.LFB0
 5507 001c 14000000 		.4byte	.LFE0-.LFB0
 5508 0020 00000000 		.4byte	.LFB1
 5509 0024 10000000 		.4byte	.LFE1-.LFB1
 5510 0028 00000000 		.4byte	.LFB2
 5511 002c 20000000 		.4byte	.LFE2-.LFB2
 5512 0030 00000000 		.4byte	.LFB3
 5513 0034 38000000 		.4byte	.LFE3-.LFB3
 5514 0038 00000000 		.4byte	.LFB4
 5515 003c 18000000 		.4byte	.LFE4-.LFB4
 5516 0040 00000000 		.4byte	.LFB5
 5517 0044 2C000000 		.4byte	.LFE5-.LFB5
 5518 0048 00000000 		.4byte	.LFB6
 5519 004c 8C010000 		.4byte	.LFE6-.LFB6
 5520 0050 00000000 		.4byte	.LFB7
 5521 0054 50000000 		.4byte	.LFE7-.LFB7
 5522 0058 00000000 		.4byte	.LFB8
 5523 005c 20000000 		.4byte	.LFE8-.LFB8
 5524 0060 00000000 		.4byte	.LFB9
 5525 0064 10000000 		.4byte	.LFE9-.LFB9
 5526 0068 00000000 		.4byte	.LFB10
 5527 006c 0C000000 		.4byte	.LFE10-.LFB10
 5528 0070 00000000 		.4byte	.LFB11
 5529 0074 14000000 		.4byte	.LFE11-.LFB11
 5530 0078 00000000 		.4byte	.LFB12
 5531 007c 10000000 		.4byte	.LFE12-.LFB12
 5532 0080 00000000 		.4byte	.LFB13
 5533 0084 0C000000 		.4byte	.LFE13-.LFB13
 5534 0088 00000000 		.4byte	.LFB14
 5535 008c 14000000 		.4byte	.LFE14-.LFB14
 5536 0090 00000000 		.4byte	.LFB15
 5537 0094 14000000 		.4byte	.LFE15-.LFB15
 5538 0098 00000000 		.4byte	.LFB16
 5539 009c 18000000 		.4byte	.LFE16-.LFB16
 5540 00a0 00000000 		.4byte	.LFB17
 5541 00a4 18000000 		.4byte	.LFE17-.LFB17
 5542 00a8 00000000 		.4byte	.LFB18
 5543 00ac 44000000 		.4byte	.LFE18-.LFB18
 5544 00b0 00000000 		.4byte	.LFB19
 5545 00b4 28000000 		.4byte	.LFE19-.LFB19
 5546 00b8 00000000 		.4byte	.LFB20
 5547 00bc 14000000 		.4byte	.LFE20-.LFB20
 5548 00c0 00000000 		.4byte	.LFB21
 5549 00c4 18000000 		.4byte	.LFE21-.LFB21
 5550 00c8 00000000 		.4byte	.LFB22
 5551 00cc 14000000 		.4byte	.LFE22-.LFB22
 5552 00d0 00000000 		.4byte	.LFB23
 5553 00d4 14000000 		.4byte	.LFE23-.LFB23
 5554 00d8 00000000 		.4byte	.LFB24
 5555 00dc 14000000 		.4byte	.LFE24-.LFB24
 5556 00e0 00000000 		.4byte	.LFB25
 5557 00e4 04000000 		.4byte	.LFE25-.LFB25
 5558 00e8 00000000 		.4byte	.LFB26
 5559 00ec 18000000 		.4byte	.LFE26-.LFB26
 5560 00f0 00000000 		.4byte	.LFB27
 5561 00f4 48000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 158


 5562 00f8 00000000 		.4byte	.LFB28
 5563 00fc 14000000 		.4byte	.LFE28-.LFB28
 5564 0100 00000000 		.4byte	.LFB29
 5565 0104 54000000 		.4byte	.LFE29-.LFB29
 5566 0108 00000000 		.4byte	.LFB30
 5567 010c 64000000 		.4byte	.LFE30-.LFB30
 5568 0110 00000000 		.4byte	.LFB31
 5569 0114 44000000 		.4byte	.LFE31-.LFB31
 5570 0118 00000000 		.4byte	.LFB32
 5571 011c 18000000 		.4byte	.LFE32-.LFB32
 5572 0120 00000000 		.4byte	.LFB33
 5573 0124 10000000 		.4byte	.LFE33-.LFB33
 5574 0128 00000000 		.4byte	.LFB34
 5575 012c 10000000 		.4byte	.LFE34-.LFB34
 5576 0130 00000000 		.4byte	.LFB35
 5577 0134 10000000 		.4byte	.LFE35-.LFB35
 5578 0138 00000000 		.4byte	.LFB36
 5579 013c 10000000 		.4byte	.LFE36-.LFB36
 5580 0140 00000000 		.4byte	.LFB37
 5581 0144 10000000 		.4byte	.LFE37-.LFB37
 5582 0148 00000000 		.4byte	.LFB38
 5583 014c 10000000 		.4byte	.LFE38-.LFB38
 5584 0150 00000000 		.4byte	.LFB39
 5585 0154 10000000 		.4byte	.LFE39-.LFB39
 5586 0158 00000000 		.4byte	.LFB40
 5587 015c 0C000000 		.4byte	.LFE40-.LFB40
 5588 0160 00000000 		.4byte	.LFB41
 5589 0164 10000000 		.4byte	.LFE41-.LFB41
 5590 0168 00000000 		.4byte	.LFB42
 5591 016c 0C000000 		.4byte	.LFE42-.LFB42
 5592 0170 00000000 		.4byte	.LFB44
 5593 0174 74000000 		.4byte	.LFE44-.LFB44
 5594 0178 00000000 		.4byte	0
 5595 017c 00000000 		.4byte	0
 5596              		.section	.debug_ranges,"",%progbits
 5597              	.Ldebug_ranges0:
 5598 0000 00000000 		.4byte	.LBB56
 5599 0004 02000000 		.4byte	.LBE56
 5600 0008 04000000 		.4byte	.LBB59
 5601 000c 06000000 		.4byte	.LBE59
 5602 0010 00000000 		.4byte	0
 5603 0014 00000000 		.4byte	0
 5604 0018 72000000 		.4byte	.LBB61
 5605 001c 7E000000 		.4byte	.LBE61
 5606 0020 00010000 		.4byte	.LBB66
 5607 0024 0E010000 		.4byte	.LBE66
 5608 0028 00000000 		.4byte	0
 5609 002c 00000000 		.4byte	0
 5610 0030 0C000000 		.4byte	.LBB87
 5611 0034 10000000 		.4byte	.LBE87
 5612 0038 1A000000 		.4byte	.LBB90
 5613 003c 1C000000 		.4byte	.LBE90
 5614 0040 00000000 		.4byte	0
 5615 0044 00000000 		.4byte	0
 5616 0048 32000000 		.4byte	.LBB95
 5617 004c 36000000 		.4byte	.LBE95
 5618 0050 36000000 		.4byte	.LBB102
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 159


 5619 0054 44000000 		.4byte	.LBE102
 5620 0058 00000000 		.4byte	0
 5621 005c 00000000 		.4byte	0
 5622 0060 32000000 		.4byte	.LBB97
 5623 0064 36000000 		.4byte	.LBE97
 5624 0068 36000000 		.4byte	.LBB100
 5625 006c 3C000000 		.4byte	.LBE100
 5626 0070 00000000 		.4byte	0
 5627 0074 00000000 		.4byte	0
 5628 0078 08000000 		.4byte	.LBB103
 5629 007c 0A000000 		.4byte	.LBE103
 5630 0080 14000000 		.4byte	.LBB107
 5631 0084 16000000 		.4byte	.LBE107
 5632 0088 18000000 		.4byte	.LBB108
 5633 008c 1A000000 		.4byte	.LBE108
 5634 0090 00000000 		.4byte	0
 5635 0094 00000000 		.4byte	0
 5636 0098 00000000 		.4byte	.LBB113
 5637 009c 04000000 		.4byte	.LBE113
 5638 00a0 04000000 		.4byte	.LBB116
 5639 00a4 0A000000 		.4byte	.LBE116
 5640 00a8 00000000 		.4byte	0
 5641 00ac 00000000 		.4byte	0
 5642 00b0 00000000 		.4byte	.LFB43
 5643 00b4 28000000 		.4byte	.LFE43
 5644 00b8 00000000 		.4byte	.LFB0
 5645 00bc 14000000 		.4byte	.LFE0
 5646 00c0 00000000 		.4byte	.LFB1
 5647 00c4 10000000 		.4byte	.LFE1
 5648 00c8 00000000 		.4byte	.LFB2
 5649 00cc 20000000 		.4byte	.LFE2
 5650 00d0 00000000 		.4byte	.LFB3
 5651 00d4 38000000 		.4byte	.LFE3
 5652 00d8 00000000 		.4byte	.LFB4
 5653 00dc 18000000 		.4byte	.LFE4
 5654 00e0 00000000 		.4byte	.LFB5
 5655 00e4 2C000000 		.4byte	.LFE5
 5656 00e8 00000000 		.4byte	.LFB6
 5657 00ec 8C010000 		.4byte	.LFE6
 5658 00f0 00000000 		.4byte	.LFB7
 5659 00f4 50000000 		.4byte	.LFE7
 5660 00f8 00000000 		.4byte	.LFB8
 5661 00fc 20000000 		.4byte	.LFE8
 5662 0100 00000000 		.4byte	.LFB9
 5663 0104 10000000 		.4byte	.LFE9
 5664 0108 00000000 		.4byte	.LFB10
 5665 010c 0C000000 		.4byte	.LFE10
 5666 0110 00000000 		.4byte	.LFB11
 5667 0114 14000000 		.4byte	.LFE11
 5668 0118 00000000 		.4byte	.LFB12
 5669 011c 10000000 		.4byte	.LFE12
 5670 0120 00000000 		.4byte	.LFB13
 5671 0124 0C000000 		.4byte	.LFE13
 5672 0128 00000000 		.4byte	.LFB14
 5673 012c 14000000 		.4byte	.LFE14
 5674 0130 00000000 		.4byte	.LFB15
 5675 0134 14000000 		.4byte	.LFE15
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 160


 5676 0138 00000000 		.4byte	.LFB16
 5677 013c 18000000 		.4byte	.LFE16
 5678 0140 00000000 		.4byte	.LFB17
 5679 0144 18000000 		.4byte	.LFE17
 5680 0148 00000000 		.4byte	.LFB18
 5681 014c 44000000 		.4byte	.LFE18
 5682 0150 00000000 		.4byte	.LFB19
 5683 0154 28000000 		.4byte	.LFE19
 5684 0158 00000000 		.4byte	.LFB20
 5685 015c 14000000 		.4byte	.LFE20
 5686 0160 00000000 		.4byte	.LFB21
 5687 0164 18000000 		.4byte	.LFE21
 5688 0168 00000000 		.4byte	.LFB22
 5689 016c 14000000 		.4byte	.LFE22
 5690 0170 00000000 		.4byte	.LFB23
 5691 0174 14000000 		.4byte	.LFE23
 5692 0178 00000000 		.4byte	.LFB24
 5693 017c 14000000 		.4byte	.LFE24
 5694 0180 00000000 		.4byte	.LFB25
 5695 0184 04000000 		.4byte	.LFE25
 5696 0188 00000000 		.4byte	.LFB26
 5697 018c 18000000 		.4byte	.LFE26
 5698 0190 00000000 		.4byte	.LFB27
 5699 0194 48000000 		.4byte	.LFE27
 5700 0198 00000000 		.4byte	.LFB28
 5701 019c 14000000 		.4byte	.LFE28
 5702 01a0 00000000 		.4byte	.LFB29
 5703 01a4 54000000 		.4byte	.LFE29
 5704 01a8 00000000 		.4byte	.LFB30
 5705 01ac 64000000 		.4byte	.LFE30
 5706 01b0 00000000 		.4byte	.LFB31
 5707 01b4 44000000 		.4byte	.LFE31
 5708 01b8 00000000 		.4byte	.LFB32
 5709 01bc 18000000 		.4byte	.LFE32
 5710 01c0 00000000 		.4byte	.LFB33
 5711 01c4 10000000 		.4byte	.LFE33
 5712 01c8 00000000 		.4byte	.LFB34
 5713 01cc 10000000 		.4byte	.LFE34
 5714 01d0 00000000 		.4byte	.LFB35
 5715 01d4 10000000 		.4byte	.LFE35
 5716 01d8 00000000 		.4byte	.LFB36
 5717 01dc 10000000 		.4byte	.LFE36
 5718 01e0 00000000 		.4byte	.LFB37
 5719 01e4 10000000 		.4byte	.LFE37
 5720 01e8 00000000 		.4byte	.LFB38
 5721 01ec 10000000 		.4byte	.LFE38
 5722 01f0 00000000 		.4byte	.LFB39
 5723 01f4 10000000 		.4byte	.LFE39
 5724 01f8 00000000 		.4byte	.LFB40
 5725 01fc 0C000000 		.4byte	.LFE40
 5726 0200 00000000 		.4byte	.LFB41
 5727 0204 10000000 		.4byte	.LFE41
 5728 0208 00000000 		.4byte	.LFB42
 5729 020c 0C000000 		.4byte	.LFE42
 5730 0210 00000000 		.4byte	.LFB44
 5731 0214 74000000 		.4byte	.LFE44
 5732 0218 00000000 		.4byte	0
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 161


 5733 021c 00000000 		.4byte	0
 5734              		.section	.debug_line,"",%progbits
 5735              	.Ldebug_line0:
 5736 0000 61050000 		.section	.debug_str,"MS",%progbits,1
 5736      02004D00 
 5736      00000201 
 5736      FB0E0D00 
 5736      01010101 
 5737              	.LASF33:
 5738 0000 72616D56 		.ascii	"ramVectorTable\000"
 5738      6563746F 
 5738      72546162 
 5738      6C6500
 5739              	.LASF49:
 5740 000f 62675472 		.ascii	"bgTrim4\000"
 5740      696D3400 
 5741              	.LASF10:
 5742 0017 75696E74 		.ascii	"uint16\000"
 5742      313600
 5743              	.LASF61:
 5744 001e 696E7453 		.ascii	"intState\000"
 5744      74617465 
 5744      00
 5745              	.LASF40:
 5746 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5746      73436C6B 
 5746      57726974 
 5746      65486663 
 5746      6C6B4469 
 5747              	.LASF99:
 5748 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5748      73436C6B 
 5748      50756D70 
 5748      436F6E66 
 5748      696700
 5749              	.LASF32:
 5750 0053 6F6C6449 		.ascii	"oldIsr\000"
 5750      737200
 5751              	.LASF88:
 5752 005a 72657456 		.ascii	"retVal\000"
 5752      616C00
 5753              	.LASF60:
 5754 0061 43794469 		.ascii	"CyDisableInts\000"
 5754      7361626C 
 5754      65496E74 
 5754      7300
 5755              	.LASF52:
 5756 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5756      656E7449 
 5756      6D6F5472 
 5756      696D3256 
 5756      616C7565 
 5757              	.LASF105:
 5758 0084 433A5C55 		.ascii	"C:\\Users\\jrdia\\OneDrive\\Sync\\Documents\\GitHub"
 5758      73657273 
 5758      5C6A7264 
 5758      69615C4F 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 162


 5758      6E654472 
 5759 00b1 5C50536F 		.ascii	"\\PSoC-Bluetooth-Dualshock\\Bluetooth_Dev.cydsn\000"
 5759      432D426C 
 5759      7565746F 
 5759      6F74682D 
 5759      4475616C 
 5760              	.LASF7:
 5761 00df 6C6F6E67 		.ascii	"long long unsigned int\000"
 5761      206C6F6E 
 5761      6720756E 
 5761      7369676E 
 5761      65642069 
 5762              	.LASF97:
 5763 00f6 43795379 		.ascii	"CySysTickInitVar\000"
 5763      73546963 
 5763      6B496E69 
 5763      74566172 
 5763      00
 5764              	.LASF62:
 5765 0107 4379456E 		.ascii	"CyEnableInts\000"
 5765      61626C65 
 5765      496E7473 
 5765      00
 5766              	.LASF76:
 5767 0114 4379536F 		.ascii	"CySoftwareReset\000"
 5767      66747761 
 5767      72655265 
 5767      73657400 
 5768              	.LASF26:
 5769 0124 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5769      73546963 
 5769      6B456E61 
 5769      626C6549 
 5769      6E746572 
 5770              	.LASF72:
 5771 013d 4379496E 		.ascii	"CyIntGetState\000"
 5771      74476574 
 5771      53746174 
 5771      6500
 5772              	.LASF6:
 5773 014b 6C6F6E67 		.ascii	"long long int\000"
 5773      206C6F6E 
 5773      6720696E 
 5773      7400
 5774              	.LASF0:
 5775 0159 7369676E 		.ascii	"signed char\000"
 5775      65642063 
 5775      68617200 
 5776              	.LASF48:
 5777 0165 66726571 		.ascii	"freq\000"
 5777      00
 5778              	.LASF79:
 5779 016a 43794465 		.ascii	"CyDelayFreq\000"
 5779      6C617946 
 5779      72657100 
 5780              	.LASF38:
 5781 0176 696E7465 		.ascii	"interruptState\000"
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 163


 5781      72727570 
 5781      74537461 
 5781      746500
 5782              	.LASF84:
 5783 0185 43795379 		.ascii	"CySysTickGetReload\000"
 5783      73546963 
 5783      6B476574 
 5783      52656C6F 
 5783      616400
 5784              	.LASF4:
 5785 0198 6C6F6E67 		.ascii	"long int\000"
 5785      20696E74 
 5785      00
 5786              	.LASF73:
 5787 01a1 4379496E 		.ascii	"CyIntDisable\000"
 5787      74446973 
 5787      61626C65 
 5787      00
 5788              	.LASF89:
 5789 01ae 43795379 		.ascii	"CySysTickGetCallback\000"
 5789      73546963 
 5789      6B476574 
 5789      43616C6C 
 5789      6261636B 
 5790              	.LASF9:
 5791 01c3 75696E74 		.ascii	"uint8\000"
 5791      3800
 5792              	.LASF94:
 5793 01c9 63796465 		.ascii	"cydelayFreqKhz\000"
 5793      6C617946 
 5793      7265714B 
 5793      687A00
 5794              	.LASF22:
 5795 01d8 43794465 		.ascii	"CyDelayUs\000"
 5795      6C617955 
 5795      7300
 5796              	.LASF13:
 5797 01e2 646F7562 		.ascii	"double\000"
 5797      6C6500
 5798              	.LASF69:
 5799 01e9 73686966 		.ascii	"shift\000"
 5799      7400
 5800              	.LASF25:
 5801 01ef 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5801      734C7664 
 5801      436C6561 
 5801      72496E74 
 5801      65727275 
 5802              	.LASF11:
 5803 0206 75696E74 		.ascii	"uint32\000"
 5803      333200
 5804              	.LASF63:
 5805 020d 6D61736B 		.ascii	"mask\000"
 5805      00
 5806              	.LASF57:
 5807 0212 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5807      73436C6B 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 164


 5807      47657453 
 5807      7973636C 
 5807      6B536F75 
 5808              	.LASF70:
 5809 022a 4379496E 		.ascii	"CyIntGetPriority\000"
 5809      74476574 
 5809      5072696F 
 5809      72697479 
 5809      00
 5810              	.LASF96:
 5811 023b 63796465 		.ascii	"cydelay32kMs\000"
 5811      6C617933 
 5811      326B4D73 
 5811      00
 5812              	.LASF34:
 5813 0248 43795379 		.ascii	"CySysTickInit\000"
 5813      73546963 
 5813      6B496E69 
 5813      7400
 5814              	.LASF29:
 5815 0256 76616C75 		.ascii	"value\000"
 5815      6500
 5816              	.LASF90:
 5817 025c 43794765 		.ascii	"CyGetUniqueId\000"
 5817      74556E69 
 5817      71756549 
 5817      6400
 5818              	.LASF106:
 5819 026a 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5819      73546963 
 5819      6B476574 
 5819      436F756E 
 5819      74466C61 
 5820              	.LASF8:
 5821 0280 756E7369 		.ascii	"unsigned int\000"
 5821      676E6564 
 5821      20696E74 
 5821      00
 5822              	.LASF27:
 5823 028d 43795379 		.ascii	"CySysTickClear\000"
 5823      73546963 
 5823      6B436C65 
 5823      617200
 5824              	.LASF5:
 5825 029c 6C6F6E67 		.ascii	"long unsigned int\000"
 5825      20756E73 
 5825      69676E65 
 5825      6420696E 
 5825      7400
 5826              	.LASF83:
 5827 02ae 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5827      734C7664 
 5827      47657449 
 5827      6E746572 
 5827      72757074 
 5828              	.LASF37:
 5829 02c9 43795379 		.ascii	"CySysClkImoStop\000"
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 165


 5829      73436C6B 
 5829      496D6F53 
 5829      746F7000 
 5830              	.LASF100:
 5831 02d9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5831      74657243 
 5831      72697469 
 5831      63616C53 
 5831      65637469 
 5832              	.LASF74:
 5833 02f0 4379496E 		.ascii	"CyIntSetPending\000"
 5833      74536574 
 5833      50656E64 
 5833      696E6700 
 5834              	.LASF58:
 5835 0300 43795379 		.ascii	"CySysGetResetReason\000"
 5835      73476574 
 5835      52657365 
 5835      74526561 
 5835      736F6E00 
 5836              	.LASF3:
 5837 0314 73686F72 		.ascii	"short unsigned int\000"
 5837      7420756E 
 5837      7369676E 
 5837      65642069 
 5837      6E7400
 5838              	.LASF65:
 5839 0327 4379496E 		.ascii	"CyIntSetVector\000"
 5839      74536574 
 5839      56656374 
 5839      6F7200
 5840              	.LASF30:
 5841 0336 6E756D62 		.ascii	"number\000"
 5841      657200
 5842              	.LASF68:
 5843 033d 7072696F 		.ascii	"priority\000"
 5843      72697479 
 5843      00
 5844              	.LASF47:
 5845 0346 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5845      73436C6B 
 5845      57726974 
 5845      65496D6F 
 5845      46726571 
 5846              	.LASF108:
 5847 035b 4379496E 		.ascii	"CyIntSetSysVector\000"
 5847      74536574 
 5847      53797356 
 5847      6563746F 
 5847      7200
 5848              	.LASF41:
 5849 036d 43795379 		.ascii	"CySysEnablePumpClock\000"
 5849      73456E61 
 5849      626C6550 
 5849      756D7043 
 5849      6C6F636B 
 5850              	.LASF16:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 166


 5851 0382 72656733 		.ascii	"reg32\000"
 5851      3200
 5852              	.LASF80:
 5853 0388 43795379 		.ascii	"CySysTickStart\000"
 5853      73546963 
 5853      6B537461 
 5853      727400
 5854              	.LASF59:
 5855 0397 72657475 		.ascii	"returnStatus\000"
 5855      726E5374 
 5855      61747573 
 5855      00
 5856              	.LASF19:
 5857 03a4 73697A65 		.ascii	"sizetype\000"
 5857      74797065 
 5857      00
 5858              	.LASF75:
 5859 03ad 4379496E 		.ascii	"CyIntClearPending\000"
 5859      74436C65 
 5859      61725065 
 5859      6E64696E 
 5859      6700
 5860              	.LASF18:
 5861 03bf 6C6F6E67 		.ascii	"long double\000"
 5861      20646F75 
 5861      626C6500 
 5862              	.LASF31:
 5863 03cb 61646472 		.ascii	"address\000"
 5863      65737300 
 5864              	.LASF43:
 5865 03d3 656E6162 		.ascii	"enable\000"
 5865      6C6500
 5866              	.LASF50:
 5867 03da 62675472 		.ascii	"bgTrim5\000"
 5867      696D3500 
 5868              	.LASF44:
 5869 03e2 73797363 		.ascii	"sysclkSource\000"
 5869      6C6B536F 
 5869      75726365 
 5869      00
 5870              	.LASF87:
 5871 03ef 66756E63 		.ascii	"function\000"
 5871      74696F6E 
 5871      00
 5872              	.LASF98:
 5873 03f8 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5873      6F467265 
 5873      714D687A 
 5873      32526567 
 5873      00
 5874              	.LASF85:
 5875 0409 43795379 		.ascii	"CySysTickGetValue\000"
 5875      73546963 
 5875      6B476574 
 5875      56616C75 
 5875      6500
 5876              	.LASF93:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 167


 5877 041b 63796465 		.ascii	"cydelayFreqHz\000"
 5877      6C617946 
 5877      72657148 
 5877      7A00
 5878              	.LASF67:
 5879 0429 4379496E 		.ascii	"CyIntSetPriority\000"
 5879      74536574 
 5879      5072696F 
 5879      72697479 
 5879      00
 5880              	.LASF12:
 5881 043a 666C6F61 		.ascii	"float\000"
 5881      7400
 5882              	.LASF101:
 5883 0440 43794578 		.ascii	"CyExitCriticalSection\000"
 5883      69744372 
 5883      69746963 
 5883      616C5365 
 5883      6374696F 
 5884              	.LASF54:
 5885 0456 43795379 		.ascii	"CySysLvdEnable\000"
 5885      734C7664 
 5885      456E6162 
 5885      6C6500
 5886              	.LASF20:
 5887 0465 63795379 		.ascii	"cySysTickCallback\000"
 5887      73546963 
 5887      6B43616C 
 5887      6C626163 
 5887      6B00
 5888              	.LASF66:
 5889 0477 4379496E 		.ascii	"CyIntGetVector\000"
 5889      74476574 
 5889      56656374 
 5889      6F7200
 5890              	.LASF78:
 5891 0486 6D696C6C 		.ascii	"milliseconds\000"
 5891      69736563 
 5891      6F6E6473 
 5891      00
 5892              	.LASF102:
 5893 0493 43794465 		.ascii	"CyDelayCycles\000"
 5893      6C617943 
 5893      79636C65 
 5893      7300
 5894              	.LASF15:
 5895 04a1 72656738 		.ascii	"reg8\000"
 5895      00
 5896              	.LASF55:
 5897 04a6 74687265 		.ascii	"threshold\000"
 5897      73686F6C 
 5897      6400
 5898              	.LASF21:
 5899 04b0 43794861 		.ascii	"CyHalt\000"
 5899      6C7400
 5900              	.LASF1:
 5901 04b7 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 168


 5901      676E6564 
 5901      20636861 
 5901      7200
 5902              	.LASF2:
 5903 04c5 73686F72 		.ascii	"short int\000"
 5903      7420696E 
 5903      7400
 5904              	.LASF103:
 5905 04cf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5905      43313120 
 5905      352E342E 
 5905      31203230 
 5905      31363036 
 5906 0502 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5906      20726576 
 5906      6973696F 
 5906      6E203233 
 5906      37373135 
 5907 0535 32202D66 		.ascii	"2 -ffunction-sections -ffat-lto-objects\000"
 5907      66756E63 
 5907      74696F6E 
 5907      2D736563 
 5907      74696F6E 
 5908              	.LASF71:
 5909 055d 4379496E 		.ascii	"CyIntEnable\000"
 5909      74456E61 
 5909      626C6500 
 5910              	.LASF64:
 5911 0569 4379496E 		.ascii	"CyIntGetSysVector\000"
 5911      74476574 
 5911      53797356 
 5911      6563746F 
 5911      7200
 5912              	.LASF42:
 5913 057b 636C6B53 		.ascii	"clkSelect\000"
 5913      656C6563 
 5913      7400
 5914              	.LASF23:
 5915 0585 72656173 		.ascii	"reason\000"
 5915      6F6E00
 5916              	.LASF14:
 5917 058c 63686172 		.ascii	"char\000"
 5917      00
 5918              	.LASF17:
 5919 0591 63796973 		.ascii	"cyisraddress\000"
 5919      72616464 
 5919      72657373 
 5919      00
 5920              	.LASF35:
 5921 059e 43795379 		.ascii	"CySysTickEnable\000"
 5921      73546963 
 5921      6B456E61 
 5921      626C6500 
 5922              	.LASF45:
 5923 05ae 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5923      73436C6B 
 5923      57726974 
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 169


 5923      65537973 
 5923      636C6B44 
 5924              	.LASF86:
 5925 05c5 43795379 		.ascii	"CySysTickSetCallback\000"
 5925      73546963 
 5925      6B536574 
 5925      43616C6C 
 5925      6261636B 
 5926              	.LASF92:
 5927 05da 43795379 		.ascii	"CySysTickCallbacks\000"
 5927      73546963 
 5927      6B43616C 
 5927      6C626163 
 5927      6B7300
 5928              	.LASF53:
 5929 05ed 696D6F54 		.ascii	"imoTrim1Value\000"
 5929      72696D31 
 5929      56616C75 
 5929      6500
 5930              	.LASF91:
 5931 05fb 756E6971 		.ascii	"uniqueId\000"
 5931      75654964 
 5931      00
 5932              	.LASF77:
 5933 0604 43794465 		.ascii	"CyDelay\000"
 5933      6C617900 
 5934              	.LASF82:
 5935 060c 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5935      73546963 
 5935      6B446973 
 5935      61626C65 
 5935      496E7465 
 5936              	.LASF56:
 5937 0626 43795379 		.ascii	"CySysLvdDisable\000"
 5937      734C7664 
 5937      44697361 
 5937      626C6500 
 5938              	.LASF95:
 5939 0636 63796465 		.ascii	"cydelayFreqMhz\000"
 5939      6C617946 
 5939      7265714D 
 5939      687A00
 5940              	.LASF81:
 5941 0645 43795379 		.ascii	"CySysTickStop\000"
 5941      73546963 
 5941      6B53746F 
 5941      7000
 5942              	.LASF46:
 5943 0653 64697669 		.ascii	"divider\000"
 5943      64657200 
 5944              	.LASF36:
 5945 065b 43795379 		.ascii	"CySysClkImoStart\000"
 5945      73436C6B 
 5945      496D6F53 
 5945      74617274 
 5945      00
 5946              	.LASF51:
ARM GAS  C:\Users\jrdia\AppData\Local\Temp\ccNWALPy.s 			page 170


 5947 066c 6E657749 		.ascii	"newImoTrim2Value\000"
 5947      6D6F5472 
 5947      696D3256 
 5947      616C7565 
 5947      00
 5948              	.LASF104:
 5949 067d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5949      72617465 
 5949      645F536F 
 5949      75726365 
 5949      5C50536F 
 5950              	.LASF24:
 5951 069c 6D696372 		.ascii	"microseconds\000"
 5951      6F736563 
 5951      6F6E6473 
 5951      00
 5952              	.LASF39:
 5953 06a9 746D7052 		.ascii	"tmpReg\000"
 5953      656700
 5954              	.LASF28:
 5955 06b0 43795379 		.ascii	"CySysTickSetReload\000"
 5955      73546963 
 5955      6B536574 
 5955      52656C6F 
 5955      616400
 5956              	.LASF107:
 5957 06c3 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5957      73546963 
 5957      6B536572 
 5957      76696365 
 5957      43616C6C 
 5958              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
